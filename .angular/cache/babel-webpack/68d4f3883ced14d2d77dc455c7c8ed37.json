{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Component, ChangeDetectionStrategy, Injector, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i5 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i3 from '@nebular/theme';\nimport { NB_WINDOW, NbLayoutModule, NbCardModule, NbCheckboxModule, NbAlertModule, NbInputModule, NbButtonModule, NbIconModule } from '@nebular/theme';\nimport { BehaviorSubject, of, Subject } from 'rxjs';\nimport { filter, share, map, switchMap, delay, catchError, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpResponse, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nconst _c0 = [\"*\"];\n\nfunction NbLoginComponent_nb_alert_4_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(error_r10);\n  }\n}\n\nfunction NbLoginComponent_nb_alert_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 22);\n    i0.ɵɵelementStart(1, \"p\", 23);\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3, \"Oh snap!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\", 24);\n    i0.ɵɵtemplate(5, NbLoginComponent_nb_alert_4_li_5_Template, 2, 1, \"li\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errors);\n  }\n}\n\nfunction NbLoginComponent_nb_alert_5_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r12);\n  }\n}\n\nfunction NbLoginComponent_nb_alert_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 27);\n    i0.ɵɵelementStart(1, \"p\", 23);\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3, \"Hooray!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\", 24);\n    i0.ɵɵtemplate(5, NbLoginComponent_nb_alert_5_li_5_Template, 2, 1, \"li\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n  }\n}\n\nfunction NbLoginComponent_ng_container_13_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbLoginComponent_ng_container_13_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Email should be the real one! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbLoginComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbLoginComponent_ng_container_13_p_1_Template, 2, 0, \"p\", 28);\n    i0.ɵɵtemplate(2, NbLoginComponent_ng_container_13_p_2_Template, 2, 0, \"p\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(12);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.pattern);\n  }\n}\n\nfunction NbLoginComponent_ng_container_22_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1, \" Password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbLoginComponent_ng_container_22_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Password should contain from \", ctx_r16.getConfigValue(\"forms.validation.password.minLength\"), \" to \", ctx_r16.getConfigValue(\"forms.validation.password.maxLength\"), \" characters \");\n  }\n}\n\nfunction NbLoginComponent_ng_container_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbLoginComponent_ng_container_22_p_1_Template, 2, 0, \"p\", 28);\n    i0.ɵɵtemplate(2, NbLoginComponent_ng_container_22_p_2_Template, 2, 2, \"p\", 28);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(21);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (_r5.errors == null ? null : _r5.errors.minlength) || (_r5.errors == null ? null : _r5.errors.maxlength));\n  }\n}\n\nfunction NbLoginComponent_nb_checkbox_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"nb-checkbox\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function NbLoginComponent_nb_checkbox_24_Template_nb_checkbox_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.user.rememberMe = $event;\n    });\n    i0.ɵɵtext(1, \"Remember me\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r7.user.rememberMe);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_a_1_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nb-icon\", 39);\n  }\n\n  if (rf & 2) {\n    const socialLink_r20 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"icon\", socialLink_r20.icon);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_a_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const socialLink_r20 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate(socialLink_r20.title);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 36);\n    i0.ɵɵtemplate(1, NbLoginComponent_section_27_ng_container_3_a_1_nb_icon_1_Template, 1, 1, \"nb-icon\", 37);\n    i0.ɵɵtemplate(2, NbLoginComponent_section_27_ng_container_3_a_1_ng_template_2_Template, 1, 1, \"ng-template\", null, 38, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r24 = i0.ɵɵreference(3);\n\n    const socialLink_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵclassProp(\"with-icon\", socialLink_r20.icon);\n    i0.ɵɵproperty(\"routerLink\", socialLink_r20.link);\n    i0.ɵɵattribute(\"target\", socialLink_r20.target)(\"class\", socialLink_r20.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r20.icon)(\"ngIfElse\", _r24);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_a_2_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nb-icon\", 39);\n  }\n\n  if (rf & 2) {\n    const socialLink_r20 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"icon\", socialLink_r20.icon);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_a_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const socialLink_r20 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate(socialLink_r20.title);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\");\n    i0.ɵɵtemplate(1, NbLoginComponent_section_27_ng_container_3_a_2_nb_icon_1_Template, 1, 1, \"nb-icon\", 37);\n    i0.ɵɵtemplate(2, NbLoginComponent_section_27_ng_container_3_a_2_ng_template_2_Template, 1, 1, \"ng-template\", null, 38, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r30 = i0.ɵɵreference(3);\n\n    const socialLink_r20 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵclassProp(\"with-icon\", socialLink_r20.icon);\n    i0.ɵɵattribute(\"href\", socialLink_r20.url, i0.ɵɵsanitizeUrl)(\"target\", socialLink_r20.target)(\"class\", socialLink_r20.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r20.icon)(\"ngIfElse\", _r30);\n  }\n}\n\nfunction NbLoginComponent_section_27_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbLoginComponent_section_27_ng_container_3_a_1_Template, 4, 7, \"a\", 34);\n    i0.ɵɵtemplate(2, NbLoginComponent_section_27_ng_container_3_a_2_Template, 4, 7, \"a\", 35);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const socialLink_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r20.link);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r20.url);\n  }\n}\n\nfunction NbLoginComponent_section_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 31);\n    i0.ɵɵtext(1, \" or enter with: \");\n    i0.ɵɵelementStart(2, \"div\", 32);\n    i0.ɵɵtemplate(3, NbLoginComponent_section_27_ng_container_3_Template, 3, 2, \"ng-container\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.socialLinks);\n  }\n}\n\nfunction NbRegisterComponent_nb_alert_2_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(error_r14);\n  }\n}\n\nfunction NbRegisterComponent_nb_alert_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 24);\n    i0.ɵɵelementStart(1, \"p\", 25);\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3, \"Oh snap!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\", 26);\n    i0.ɵɵtemplate(5, NbRegisterComponent_nb_alert_2_li_5_Template, 2, 1, \"li\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errors);\n  }\n}\n\nfunction NbRegisterComponent_nb_alert_3_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r16);\n  }\n}\n\nfunction NbRegisterComponent_nb_alert_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 29);\n    i0.ɵɵelementStart(1, \"p\", 25);\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3, \"Hooray!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\", 26);\n    i0.ɵɵtemplate(5, NbRegisterComponent_nb_alert_3_li_5_Template, 2, 1, \"li\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n  }\n}\n\nfunction NbRegisterComponent_ng_container_11_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Full name is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRegisterComponent_ng_container_11_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Full name should contains from \", ctx_r18.getConfigValue(\"forms.validation.fullName.minLength\"), \" to \", ctx_r18.getConfigValue(\"forms.validation.fullName.maxLength\"), \" characters \");\n  }\n}\n\nfunction NbRegisterComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbRegisterComponent_ng_container_11_p_1_Template, 2, 0, \"p\", 30);\n    i0.ɵɵtemplate(2, NbRegisterComponent_ng_container_11_p_2_Template, 2, 2, \"p\", 30);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(10);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (_r3.errors == null ? null : _r3.errors.minlength) || (_r3.errors == null ? null : _r3.errors.maxlength));\n  }\n}\n\nfunction NbRegisterComponent_ng_container_17_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRegisterComponent_ng_container_17_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Email should be the real one! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRegisterComponent_ng_container_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbRegisterComponent_ng_container_17_p_1_Template, 2, 0, \"p\", 30);\n    i0.ɵɵtemplate(2, NbRegisterComponent_ng_container_17_p_2_Template, 2, 0, \"p\", 30);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(16);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors.pattern);\n  }\n}\n\nfunction NbRegisterComponent_ng_container_23_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRegisterComponent_ng_container_23_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Password should contain from \", ctx_r22.getConfigValue(\"forms.validation.password.minLength\"), \" to \", ctx_r22.getConfigValue(\"forms.validation.password.maxLength\"), \" characters \");\n  }\n}\n\nfunction NbRegisterComponent_ng_container_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbRegisterComponent_ng_container_23_p_1_Template, 2, 0, \"p\", 30);\n    i0.ɵɵtemplate(2, NbRegisterComponent_ng_container_23_p_2_Template, 2, 2, \"p\", 30);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r7 = i0.ɵɵreference(22);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r7.errors == null ? null : _r7.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (_r7.errors == null ? null : _r7.errors.minlength) || (_r7.errors == null ? null : _r7.errors.maxlength));\n  }\n}\n\nfunction NbRegisterComponent_ng_container_29_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Password confirmation is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRegisterComponent_ng_container_29_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 31);\n    i0.ɵɵtext(1, \" Password does not match the confirm password. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRegisterComponent_ng_container_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbRegisterComponent_ng_container_29_p_1_Template, 2, 0, \"p\", 30);\n    i0.ɵɵtemplate(2, NbRegisterComponent_ng_container_29_p_2_Template, 2, 0, \"p\", 30);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r9 = i0.ɵɵreference(28);\n\n    const _r7 = i0.ɵɵreference(22);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r9.errors == null ? null : _r9.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r7.value != _r9.value && !(_r9.errors == null ? null : _r9.errors.required));\n  }\n}\n\nfunction NbRegisterComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵelementStart(1, \"nb-checkbox\", 33);\n    i0.ɵɵlistener(\"ngModelChange\", function NbRegisterComponent_div_30_Template_nb_checkbox_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return ctx_r25.user.terms = $event;\n    });\n    i0.ɵɵtext(2, \" Agree to \");\n    i0.ɵɵelementStart(3, \"a\", 34);\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5, \"Terms & Conditions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r11.user.terms)(\"required\", ctx_r11.getConfigValue(\"forms.register.terms\"));\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_a_1_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nb-icon\", 43);\n  }\n\n  if (rf & 2) {\n    const socialLink_r28 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"icon\", socialLink_r28.icon);\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_a_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const socialLink_r28 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate(socialLink_r28.title);\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 40);\n    i0.ɵɵtemplate(1, NbRegisterComponent_section_33_ng_container_3_a_1_nb_icon_1_Template, 1, 1, \"nb-icon\", 41);\n    i0.ɵɵtemplate(2, NbRegisterComponent_section_33_ng_container_3_a_1_ng_template_2_Template, 1, 1, \"ng-template\", null, 42, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r32 = i0.ɵɵreference(3);\n\n    const socialLink_r28 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵclassProp(\"with-icon\", socialLink_r28.icon);\n    i0.ɵɵproperty(\"routerLink\", socialLink_r28.link);\n    i0.ɵɵattribute(\"target\", socialLink_r28.target)(\"class\", socialLink_r28.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r28.icon)(\"ngIfElse\", _r32);\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_a_2_nb_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nb-icon\", 43);\n  }\n\n  if (rf & 2) {\n    const socialLink_r28 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"icon\", socialLink_r28.icon);\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_a_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    const socialLink_r28 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵtextInterpolate(socialLink_r28.title);\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\");\n    i0.ɵɵtemplate(1, NbRegisterComponent_section_33_ng_container_3_a_2_nb_icon_1_Template, 1, 1, \"nb-icon\", 41);\n    i0.ɵɵtemplate(2, NbRegisterComponent_section_33_ng_container_3_a_2_ng_template_2_Template, 1, 1, \"ng-template\", null, 42, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r38 = i0.ɵɵreference(3);\n\n    const socialLink_r28 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵclassProp(\"with-icon\", socialLink_r28.icon);\n    i0.ɵɵattribute(\"href\", socialLink_r28.url, i0.ɵɵsanitizeUrl)(\"target\", socialLink_r28.target)(\"class\", socialLink_r28.icon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r28.icon)(\"ngIfElse\", _r38);\n  }\n}\n\nfunction NbRegisterComponent_section_33_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbRegisterComponent_section_33_ng_container_3_a_1_Template, 4, 7, \"a\", 38);\n    i0.ɵɵtemplate(2, NbRegisterComponent_section_33_ng_container_3_a_2_Template, 4, 7, \"a\", 39);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const socialLink_r28 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r28.link);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", socialLink_r28.url);\n  }\n}\n\nfunction NbRegisterComponent_section_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 35);\n    i0.ɵɵtext(1, \" or enter with: \");\n    i0.ɵɵelementStart(2, \"div\", 36);\n    i0.ɵɵtemplate(3, NbRegisterComponent_section_33_ng_container_3_Template, 3, 2, \"ng-container\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.socialLinks);\n  }\n}\n\nfunction NbRequestPasswordComponent_nb_alert_4_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(error_r6);\n  }\n}\n\nfunction NbRequestPasswordComponent_nb_alert_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 15);\n    i0.ɵɵelementStart(1, \"p\", 16);\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3, \"Oh snap!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\", 17);\n    i0.ɵɵtemplate(5, NbRequestPasswordComponent_nb_alert_4_li_5_Template, 2, 1, \"li\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errors);\n  }\n}\n\nfunction NbRequestPasswordComponent_nb_alert_5_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r8);\n  }\n}\n\nfunction NbRequestPasswordComponent_nb_alert_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 20);\n    i0.ɵɵelementStart(1, \"p\", 16);\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3, \"Hooray!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\", 17);\n    i0.ɵɵtemplate(5, NbRequestPasswordComponent_nb_alert_5_li_5_Template, 2, 1, \"li\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n  }\n}\n\nfunction NbRequestPasswordComponent_ng_container_13_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1, \" Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRequestPasswordComponent_ng_container_13_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1, \" Email should be the real one! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbRequestPasswordComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbRequestPasswordComponent_ng_container_13_p_1_Template, 2, 0, \"p\", 21);\n    i0.ɵɵtemplate(2, NbRequestPasswordComponent_ng_container_13_p_2_Template, 2, 0, \"p\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(12);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.pattern);\n  }\n}\n\nfunction NbResetPasswordComponent_nb_alert_4_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(error_r8);\n  }\n}\n\nfunction NbResetPasswordComponent_nb_alert_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 19);\n    i0.ɵɵelementStart(1, \"p\", 20);\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3, \"Oh snap!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\", 21);\n    i0.ɵɵtemplate(5, NbResetPasswordComponent_nb_alert_4_li_5_Template, 2, 1, \"li\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.errors);\n  }\n}\n\nfunction NbResetPasswordComponent_nb_alert_5_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const message_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r10);\n  }\n}\n\nfunction NbResetPasswordComponent_nb_alert_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"nb-alert\", 24);\n    i0.ɵɵelementStart(1, \"p\", 20);\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3, \"Hooray!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\", 21);\n    i0.ɵɵtemplate(5, NbResetPasswordComponent_nb_alert_5_li_5_Template, 2, 1, \"li\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n  }\n}\n\nfunction NbResetPasswordComponent_ng_container_13_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \" Password is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbResetPasswordComponent_ng_container_13_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Password should contains from \", ctx_r12.getConfigValue(\"forms.validation.password.minLength\"), \" to \", ctx_r12.getConfigValue(\"forms.validation.password.maxLength\"), \" characters \");\n  }\n}\n\nfunction NbResetPasswordComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbResetPasswordComponent_ng_container_13_p_1_Template, 2, 0, \"p\", 25);\n    i0.ɵɵtemplate(2, NbResetPasswordComponent_ng_container_13_p_2_Template, 2, 2, \"p\", 25);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r3 = i0.ɵɵreference(12);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (_r3.errors == null ? null : _r3.errors.minlength) || (_r3.errors == null ? null : _r3.errors.maxlength));\n  }\n}\n\nfunction NbResetPasswordComponent_ng_container_19_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \" Password confirmation is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbResetPasswordComponent_ng_container_19_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 26);\n    i0.ɵɵtext(1, \" Password does not match the confirm password. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction NbResetPasswordComponent_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NbResetPasswordComponent_ng_container_19_p_1_Template, 2, 0, \"p\", 25);\n    i0.ɵɵtemplate(2, NbResetPasswordComponent_ng_container_19_p_2_Template, 2, 0, \"p\", 25);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(18);\n\n    const _r3 = i0.ɵɵreference(12);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.invalid && (_r5.errors == null ? null : _r5.errors.required));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.value != _r5.value && !(_r5.errors == null ? null : _r5.errors.required));\n  }\n}\n\nconst _c1 = \"[_nghost-%COMP%]   .form-group[_ngcontent-%COMP%]:last-of-type{margin-bottom:3rem}\";\nconst socialLinks = [];\nconst defaultAuthOptions = {\n  strategies: [],\n  forms: {\n    login: {\n      redirectDelay: 500,\n      strategy: 'email',\n      rememberMe: true,\n      showMessages: {\n        success: true,\n        error: true\n      },\n      socialLinks: socialLinks // social links at the bottom of a page\n\n    },\n    register: {\n      redirectDelay: 500,\n      strategy: 'email',\n      showMessages: {\n        success: true,\n        error: true\n      },\n      terms: true,\n      socialLinks: socialLinks\n    },\n    requestPassword: {\n      redirectDelay: 500,\n      strategy: 'email',\n      showMessages: {\n        success: true,\n        error: true\n      },\n      socialLinks: socialLinks\n    },\n    resetPassword: {\n      redirectDelay: 500,\n      strategy: 'email',\n      showMessages: {\n        success: true,\n        error: true\n      },\n      socialLinks: socialLinks\n    },\n    logout: {\n      redirectDelay: 500,\n      strategy: 'email'\n    },\n    validation: {\n      password: {\n        required: true,\n        minLength: 4,\n        maxLength: 50\n      },\n      email: {\n        required: true\n      },\n      fullName: {\n        required: false,\n        minLength: 4,\n        maxLength: 50\n      }\n    }\n  }\n};\nconst NB_AUTH_OPTIONS = new InjectionToken('Nebular Auth Options');\nconst NB_AUTH_USER_OPTIONS = new InjectionToken('Nebular User Auth Options');\nconst NB_AUTH_STRATEGIES = new InjectionToken('Nebular Auth Strategies');\nconst NB_AUTH_TOKENS = new InjectionToken('Nebular Auth Tokens');\nconst NB_AUTH_INTERCEPTOR_HEADER = new InjectionToken('Nebular Simple Interceptor Header');\nconst NB_AUTH_TOKEN_INTERCEPTOR_FILTER = new InjectionToken('Nebular Interceptor Filter');\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\n\nconst deepExtend = function (...objects) {\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n    return false;\n  }\n\n  if (arguments.length < 2) {\n    return arguments[0];\n  }\n\n  const target = arguments[0]; // convert arguments to array and cut off target object\n\n  const args = Array.prototype.slice.call(arguments, 1);\n  let val, src;\n  args.forEach(function (obj) {\n    // skip argument if it is array or isn't object\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\n      return;\n    }\n\n    Object.keys(obj).forEach(function (key) {\n      src = target[key]; // source value\n\n      val = obj[key]; // new value\n      // recursion prevention\n\n      if (val === target) {\n        return;\n        /**\n         * if new value isn't object then just overwrite by new value\n         * instead of extending.\n         */\n      } else if (typeof val !== 'object' || val === null) {\n        target[key] = val;\n        return; // just clone arrays (and recursive clone objects inside)\n      } else if (Array.isArray(val)) {\n        target[key] = deepCloneArray(val);\n        return; // custom cloning and overwrite for specific objects\n      } else if (isSpecificValue(val)) {\n        target[key] = cloneSpecificValue(val);\n        return; // overwrite by new value if source isn't object or array\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n        target[key] = deepExtend({}, val);\n        return; // source value and new value is objects both, extending...\n      } else {\n        target[key] = deepExtend(src, val);\n        return;\n      }\n    });\n  });\n  return target;\n};\n\nfunction isSpecificValue(val) {\n  return val instanceof Date || val instanceof RegExp ? true : false;\n}\n\nfunction cloneSpecificValue(val) {\n  if (val instanceof Date) {\n    return new Date(val.getTime());\n  } else if (val instanceof RegExp) {\n    return new RegExp(val);\n  } else {\n    throw new Error('cloneSpecificValue: Unexpected situation');\n  }\n}\n/**\n * Recursive cloning array.\n */\n\n\nfunction deepCloneArray(arr) {\n  const clone = [];\n  arr.forEach(function (item, index) {\n    if (typeof item === 'object' && item !== null) {\n      if (Array.isArray(item)) {\n        clone[index] = deepCloneArray(item);\n      } else if (isSpecificValue(item)) {\n        clone[index] = cloneSpecificValue(item);\n      } else {\n        clone[index] = deepExtend({}, item);\n      }\n    } else {\n      clone[index] = item;\n    }\n  });\n  return clone;\n} // getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\n\n\nfunction getDeepFromObject(object = {}, name, defaultValue) {\n  const keys = name.split('.'); // clone the object\n\n  let level = deepExtend({}, object || {});\n  keys.forEach(k => {\n    if (level && typeof level[k] !== 'undefined') {\n      level = level[k];\n    } else {\n      level = undefined;\n    }\n  });\n  return typeof level === 'undefined' ? defaultValue : level;\n}\n\nfunction urlBase64Decode(str) {\n  let output = str.replace(/-/g, '+').replace(/_/g, '/');\n\n  switch (output.length % 4) {\n    case 0:\n      {\n        break;\n      }\n\n    case 2:\n      {\n        output += '==';\n        break;\n      }\n\n    case 3:\n      {\n        output += '=';\n        break;\n      }\n\n    default:\n      {\n        throw new Error('Illegal base64url string!');\n      }\n  }\n\n  return b64DecodeUnicode(output);\n}\n\nfunction b64decode(str) {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  let output = '';\n  str = String(str).replace(/=+$/, '');\n\n  if (str.length % 4 === 1) {\n    throw new Error(`'atob' failed: The string to be decoded is not correctly encoded.`);\n  }\n\n  for ( // initialize result and counters\n  let bc = 0, bs, buffer, idx = 0; // get next character\n  buffer = str.charAt(idx++); // character found in table? initialize bit storage and add its ascii value;\n  ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, // and if not first of each 4 characters,\n  // convert the first 8 bits to one ascii character\n  bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n\n  return output;\n} // https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\n\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(Array.prototype.map.call(b64decode(str), c => {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n}\n\nclass NbAuthToken {\n  constructor() {\n    this.payload = null;\n  }\n\n  getName() {\n    return this.constructor.NAME;\n  }\n\n  getPayload() {\n    return this.payload;\n  }\n\n}\n\nclass NbAuthTokenNotFoundError extends Error {\n  constructor(message) {\n    super(message);\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n\n}\n\nclass NbAuthIllegalTokenError extends Error {\n  constructor(message) {\n    super(message);\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n\n}\n\nclass NbAuthEmptyTokenError extends NbAuthIllegalTokenError {\n  constructor(message) {\n    super(message);\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n\n}\n\nclass NbAuthIllegalJWTTokenError extends NbAuthIllegalTokenError {\n  constructor(message) {\n    super(message);\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n\n}\n\nfunction nbAuthCreateToken(tokenClass, token, ownerStrategyName, createdAt) {\n  return new tokenClass(token, ownerStrategyName, createdAt);\n}\n\nfunction decodeJwtPayload(payload) {\n  if (payload.length === 0) {\n    throw new NbAuthEmptyTokenError('Cannot extract from an empty payload.');\n  }\n\n  const parts = payload.split('.');\n\n  if (parts.length !== 3) {\n    throw new NbAuthIllegalJWTTokenError(`The payload ${payload} is not valid JWT payload and must consist of three parts.`);\n  }\n\n  let decoded;\n\n  try {\n    decoded = urlBase64Decode(parts[1]);\n  } catch (e) {\n    throw new NbAuthIllegalJWTTokenError(`The payload ${payload} is not valid JWT payload and cannot be parsed.`);\n  }\n\n  if (!decoded) {\n    throw new NbAuthIllegalJWTTokenError(`The payload ${payload} is not valid JWT payload and cannot be decoded.`);\n  }\n\n  return JSON.parse(decoded);\n}\n/**\n * Wrapper for simple (text) token\n */\n\n\nclass NbAuthSimpleToken extends NbAuthToken {\n  constructor(token, ownerStrategyName, createdAt) {\n    super();\n    this.token = token;\n    this.ownerStrategyName = ownerStrategyName;\n    this.createdAt = createdAt;\n\n    try {\n      this.parsePayload();\n    } catch (err) {\n      if (!(err instanceof NbAuthTokenNotFoundError)) {\n        // token is present but has got a problem, including illegal\n        throw err;\n      }\n    }\n\n    this.createdAt = this.prepareCreatedAt(createdAt);\n  }\n\n  parsePayload() {\n    this.payload = null;\n  }\n\n  prepareCreatedAt(date) {\n    return date ? date : new Date();\n  }\n  /**\n   * Returns the token's creation date\n   * @returns {Date}\n   */\n\n\n  getCreatedAt() {\n    return this.createdAt;\n  }\n  /**\n   * Returns the token value\n   * @returns string\n   */\n\n\n  getValue() {\n    return this.token;\n  }\n\n  getOwnerStrategyName() {\n    return this.ownerStrategyName;\n  }\n  /**\n   * Is non empty and valid\n   * @returns {boolean}\n   */\n\n\n  isValid() {\n    return !!this.getValue();\n  }\n  /**\n   * Validate value and convert to string, if value is not valid return empty string\n   * @returns {string}\n   */\n\n\n  toString() {\n    return !!this.token ? this.token : '';\n  }\n\n}\n\nNbAuthSimpleToken.NAME = 'nb:auth:simple:token';\n/**\n * Wrapper for JWT token with additional methods.\n */\n\nclass NbAuthJWTToken extends NbAuthSimpleToken {\n  /**\n   * for JWT token, the iat (issued at) field of the token payload contains the creation Date\n   */\n  prepareCreatedAt(date) {\n    const decoded = this.getPayload();\n    return decoded && decoded.iat ? new Date(Number(decoded.iat) * 1000) : super.prepareCreatedAt(date);\n  }\n  /**\n   * Returns payload object\n   * @returns any\n   */\n\n\n  parsePayload() {\n    if (!this.token) {\n      throw new NbAuthTokenNotFoundError('Token not found. ');\n    }\n\n    this.payload = decodeJwtPayload(this.token);\n  }\n  /**\n   * Returns expiration date\n   * @returns Date\n   */\n\n\n  getTokenExpDate() {\n    const decoded = this.getPayload();\n\n    if (decoded && !decoded.hasOwnProperty('exp')) {\n      return null;\n    }\n\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp); // 'cause jwt token are set in seconds\n\n    return date;\n  }\n  /**\n   * Is data expired\n   * @returns {boolean}\n   */\n\n\n  isValid() {\n    return super.isValid() && (!this.getTokenExpDate() || new Date() < this.getTokenExpDate());\n  }\n\n}\n\nNbAuthJWTToken.NAME = 'nb:auth:jwt:token';\n\nconst prepareOAuth2Token = data => {\n  if (typeof data === 'string') {\n    try {\n      return JSON.parse(data);\n    } catch (e) {}\n  }\n\n  return data;\n};\n/**\n * Wrapper for OAuth2 token whose access_token is a JWT Token\n */\n\n\nclass NbAuthOAuth2Token extends NbAuthSimpleToken {\n  constructor(data = {}, ownerStrategyName, createdAt) {\n    // we may get it as string when retrieving from a storage\n    super(prepareOAuth2Token(data), ownerStrategyName, createdAt);\n  }\n  /**\n   * Returns the token value\n   * @returns string\n   */\n\n\n  getValue() {\n    return this.token.access_token;\n  }\n  /**\n   * Returns the refresh token\n   * @returns string\n   */\n\n\n  getRefreshToken() {\n    return this.token.refresh_token;\n  }\n  /**\n   *  put refreshToken in the token payload\n    * @param refreshToken\n   */\n\n\n  setRefreshToken(refreshToken) {\n    this.token.refresh_token = refreshToken;\n  }\n  /**\n   * Parses token payload\n   * @returns any\n   */\n\n\n  parsePayload() {\n    if (!this.token) {\n      throw new NbAuthTokenNotFoundError('Token not found.');\n    } else {\n      if (!Object.keys(this.token).length) {\n        throw new NbAuthEmptyTokenError('Cannot extract payload from an empty token.');\n      }\n    }\n\n    this.payload = this.token;\n  }\n  /**\n   * Returns the token type\n   * @returns string\n   */\n\n\n  getType() {\n    return this.token.token_type;\n  }\n  /**\n   * Is data expired\n   * @returns {boolean}\n   */\n\n\n  isValid() {\n    return super.isValid() && (!this.getTokenExpDate() || new Date() < this.getTokenExpDate());\n  }\n  /**\n   * Returns expiration date\n   * @returns Date\n   */\n\n\n  getTokenExpDate() {\n    if (!this.token.hasOwnProperty('expires_in')) {\n      return null;\n    }\n\n    return new Date(this.createdAt.getTime() + Number(this.token.expires_in) * 1000);\n  }\n  /**\n   * Convert to string\n   * @returns {string}\n   */\n\n\n  toString() {\n    return JSON.stringify(this.token);\n  }\n\n}\n\nNbAuthOAuth2Token.NAME = 'nb:auth:oauth2:token';\n/**\n * Wrapper for OAuth2 token embedding JWT tokens\n */\n\nclass NbAuthOAuth2JWTToken extends NbAuthOAuth2Token {\n  parsePayload() {\n    super.parsePayload();\n    this.parseAccessTokenPayload();\n  }\n\n  parseAccessTokenPayload() {\n    const accessToken = this.getValue();\n\n    if (!accessToken) {\n      throw new NbAuthTokenNotFoundError('access_token key not found.');\n    }\n\n    this.accessTokenPayload = decodeJwtPayload(accessToken);\n  }\n  /**\n   * Returns access token payload\n   * @returns any\n   */\n\n\n  getAccessTokenPayload() {\n    return this.accessTokenPayload;\n  }\n  /**\n   * for Oauth2 JWT token, the iat (issued at) field of the access_token payload\n   */\n\n\n  prepareCreatedAt(date) {\n    const payload = this.accessTokenPayload;\n    return payload && payload.iat ? new Date(Number(payload.iat) * 1000) : super.prepareCreatedAt(date);\n  }\n  /**\n   * Is token valid\n   * @returns {boolean}\n   */\n\n\n  isValid() {\n    return this.accessTokenPayload && super.isValid();\n  }\n  /**\n   * Returns expiration date :\n   * - exp if set,\n   * - super.getExpDate() otherwise\n   * @returns Date\n   */\n\n\n  getTokenExpDate() {\n    if (this.accessTokenPayload && this.accessTokenPayload.hasOwnProperty('exp')) {\n      const date = new Date(0);\n      date.setUTCSeconds(this.accessTokenPayload.exp);\n      return date;\n    } else {\n      return super.getTokenExpDate();\n    }\n  }\n\n}\n\nNbAuthOAuth2JWTToken.NAME = 'nb:auth:oauth2:jwt:token';\nconst NB_AUTH_FALLBACK_TOKEN = new InjectionToken('Nebular Auth Options');\n/**\n * Creates a token parcel which could be stored/restored\n */\n\nclass NbAuthTokenParceler {\n  constructor(fallbackClass, tokenClasses) {\n    this.fallbackClass = fallbackClass;\n    this.tokenClasses = tokenClasses;\n  }\n\n  wrap(token) {\n    return JSON.stringify({\n      name: token.getName(),\n      ownerStrategyName: token.getOwnerStrategyName(),\n      createdAt: token.getCreatedAt().getTime(),\n      value: token.toString()\n    });\n  }\n\n  unwrap(value) {\n    let tokenClass = this.fallbackClass;\n    let tokenValue = '';\n    let tokenOwnerStrategyName = '';\n    let tokenCreatedAt = null;\n    const tokenPack = this.parseTokenPack(value);\n\n    if (tokenPack) {\n      tokenClass = this.getClassByName(tokenPack.name) || this.fallbackClass;\n      tokenValue = tokenPack.value;\n      tokenOwnerStrategyName = tokenPack.ownerStrategyName;\n      tokenCreatedAt = new Date(Number(tokenPack.createdAt));\n    }\n\n    return nbAuthCreateToken(tokenClass, tokenValue, tokenOwnerStrategyName, tokenCreatedAt);\n  } // TODO: this could be moved to a separate token registry\n\n\n  getClassByName(name) {\n    return this.tokenClasses.find(tokenClass => tokenClass.NAME === name);\n  }\n\n  parseTokenPack(value) {\n    try {\n      return JSON.parse(value);\n    } catch (e) {}\n\n    return null;\n  }\n\n}\n\nNbAuthTokenParceler.ɵfac = function NbAuthTokenParceler_Factory(t) {\n  return new (t || NbAuthTokenParceler)(i0.ɵɵinject(NB_AUTH_FALLBACK_TOKEN), i0.ɵɵinject(NB_AUTH_TOKENS));\n};\n\nNbAuthTokenParceler.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbAuthTokenParceler,\n  factory: NbAuthTokenParceler.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthTokenParceler, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_FALLBACK_TOKEN]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_TOKENS]\n      }]\n    }];\n  }, null);\n})();\n\nclass NbTokenStorage {}\n/**\n * Service that uses browser localStorage as a storage.\n *\n * The token storage is provided into auth module the following way:\n * ```ts\n * { provide: NbTokenStorage, useClass: NbTokenLocalStorage },\n * ```\n *\n * If you need to change the storage behaviour or provide your own - just extend your class from basic `NbTokenStorage`\n * or `NbTokenLocalStorage` and provide in your `app.module`:\n * ```ts\n * { provide: NbTokenStorage, useClass: NbTokenCustomStorage },\n * ```\n *\n */\n\n\nclass NbTokenLocalStorage extends NbTokenStorage {\n  constructor(parceler) {\n    super();\n    this.parceler = parceler;\n    this.key = 'auth_app_token';\n  }\n  /**\n   * Returns token from localStorage\n   * @returns {NbAuthToken}\n   */\n\n\n  get() {\n    const raw = localStorage.getItem(this.key);\n    return this.parceler.unwrap(raw);\n  }\n  /**\n   * Sets token to localStorage\n   * @param {NbAuthToken} token\n   */\n\n\n  set(token) {\n    const raw = this.parceler.wrap(token);\n    localStorage.setItem(this.key, raw);\n  }\n  /**\n   * Clears token from localStorage\n   */\n\n\n  clear() {\n    localStorage.removeItem(this.key);\n  }\n\n}\n\nNbTokenLocalStorage.ɵfac = function NbTokenLocalStorage_Factory(t) {\n  return new (t || NbTokenLocalStorage)(i0.ɵɵinject(NbAuthTokenParceler));\n};\n\nNbTokenLocalStorage.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbTokenLocalStorage,\n  factory: NbTokenLocalStorage.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbTokenLocalStorage, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NbAuthTokenParceler\n    }];\n  }, null);\n})();\n/**\n * Service that allows you to manage authentication token - get, set, clear and also listen to token changes over time.\n */\n\n\nclass NbTokenService {\n  constructor(tokenStorage) {\n    this.tokenStorage = tokenStorage;\n    this.token$ = new BehaviorSubject(null);\n    this.publishStoredToken();\n  }\n  /**\n   * Publishes token when it changes.\n   * @returns {Observable<NbAuthToken>}\n   */\n\n\n  tokenChange() {\n    return this.token$.pipe(filter(value => !!value), share());\n  }\n  /**\n   * Sets a token into the storage. This method is used by the NbAuthService automatically.\n   *\n   * @param {NbAuthToken} token\n   * @returns {Observable<any>}\n   */\n\n\n  set(token) {\n    this.tokenStorage.set(token);\n    this.publishStoredToken();\n    return of(null);\n  }\n  /**\n   * Returns observable of current token\n   * @returns {Observable<NbAuthToken>}\n   */\n\n\n  get() {\n    const token = this.tokenStorage.get();\n    return of(token);\n  }\n  /**\n   * Removes the token and published token value\n   *\n   * @returns {Observable<any>}\n   */\n\n\n  clear() {\n    this.tokenStorage.clear();\n    this.publishStoredToken();\n    return of(null);\n  }\n\n  publishStoredToken() {\n    this.token$.next(this.tokenStorage.get());\n  }\n\n}\n\nNbTokenService.ɵfac = function NbTokenService_Factory(t) {\n  return new (t || NbTokenService)(i0.ɵɵinject(NbTokenStorage));\n};\n\nNbTokenService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbTokenService,\n  factory: NbTokenService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbTokenService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NbTokenStorage\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Common authentication service.\n * Should be used to as an interlayer between UI Components and Auth Strategy.\n */\n\n\nclass NbAuthService {\n  constructor(tokenService, strategies) {\n    this.tokenService = tokenService;\n    this.strategies = strategies;\n  }\n  /**\n   * Retrieves current authenticated token stored\n   * @returns {Observable<any>}\n   */\n\n\n  getToken() {\n    return this.tokenService.get();\n  }\n  /**\n   * Returns true if auth token is present in the token storage\n   * @returns {Observable<boolean>}\n   */\n\n\n  isAuthenticated() {\n    return this.getToken().pipe(map(token => token.isValid()));\n  }\n  /**\n   * Returns true if valid auth token is present in the token storage.\n   * If not, calls the strategy refreshToken, and returns isAuthenticated() if success, false otherwise\n   * @returns {Observable<boolean>}\n   */\n\n\n  isAuthenticatedOrRefresh() {\n    return this.getToken().pipe(switchMap(token => {\n      if (token.getValue() && !token.isValid()) {\n        return this.refreshToken(token.getOwnerStrategyName(), token).pipe(switchMap(res => {\n          if (res.isSuccess()) {\n            return this.isAuthenticated();\n          } else {\n            return of(false);\n          }\n        }));\n      } else {\n        return of(token.isValid());\n      }\n    }));\n  }\n  /**\n   * Returns tokens stream\n   * @returns {Observable<NbAuthSimpleToken>}\n   */\n\n\n  onTokenChange() {\n    return this.tokenService.tokenChange();\n  }\n  /**\n   * Returns authentication status stream\n   * @returns {Observable<boolean>}\n   */\n\n\n  onAuthenticationChange() {\n    return this.onTokenChange().pipe(map(token => token.isValid()));\n  }\n  /**\n   * Authenticates with the selected strategy\n   * Stores received token in the token storage\n   *\n   * Example:\n   * authenticate('email', {email: 'email@example.com', password: 'test'})\n   *\n   * @param strategyName\n   * @param data\n   * @returns {Observable<NbAuthResult>}\n   */\n\n\n  authenticate(strategyName, data) {\n    return this.getStrategy(strategyName).authenticate(data).pipe(switchMap(result => {\n      return this.processResultToken(result);\n    }));\n  }\n  /**\n   * Registers with the selected strategy\n   * Stores received token in the token storage\n   *\n   * Example:\n   * register('email', {email: 'email@example.com', name: 'Some Name', password: 'test'})\n   *\n   * @param strategyName\n   * @param data\n   * @returns {Observable<NbAuthResult>}\n   */\n\n\n  register(strategyName, data) {\n    return this.getStrategy(strategyName).register(data).pipe(switchMap(result => {\n      return this.processResultToken(result);\n    }));\n  }\n  /**\n   * Sign outs with the selected strategy\n   * Removes token from the token storage\n   *\n   * Example:\n   * logout('email')\n   *\n   * @param strategyName\n   * @returns {Observable<NbAuthResult>}\n   */\n\n\n  logout(strategyName) {\n    return this.getStrategy(strategyName).logout().pipe(switchMap(result => {\n      if (result.isSuccess()) {\n        this.tokenService.clear().pipe(map(() => result));\n      }\n\n      return of(result);\n    }));\n  }\n  /**\n   * Sends forgot password request to the selected strategy\n   *\n   * Example:\n   * requestPassword('email', {email: 'email@example.com'})\n   *\n   * @param strategyName\n   * @param data\n   * @returns {Observable<NbAuthResult>}\n   */\n\n\n  requestPassword(strategyName, data) {\n    return this.getStrategy(strategyName).requestPassword(data);\n  }\n  /**\n   * Tries to reset password with the selected strategy\n   *\n   * Example:\n   * resetPassword('email', {newPassword: 'test'})\n   *\n   * @param strategyName\n   * @param data\n   * @returns {Observable<NbAuthResult>}\n   */\n\n\n  resetPassword(strategyName, data) {\n    return this.getStrategy(strategyName).resetPassword(data);\n  }\n  /**\n   * Sends a refresh token request\n   * Stores received token in the token storage\n   *\n   * Example:\n   * refreshToken('email', {token: token})\n   *\n   * @param {string} strategyName\n   * @param data\n   * @returns {Observable<NbAuthResult>}\n   */\n\n\n  refreshToken(strategyName, data) {\n    return this.getStrategy(strategyName).refreshToken(data).pipe(switchMap(result => {\n      return this.processResultToken(result);\n    }));\n  }\n  /**\n   * Get registered strategy by name\n   *\n   * Example:\n   * getStrategy('email')\n   *\n   * @param {string} provider\n   * @returns {NbAbstractAuthProvider}\n   */\n\n\n  getStrategy(strategyName) {\n    const found = this.strategies.find(strategy => strategy.getName() === strategyName);\n\n    if (!found) {\n      throw new TypeError(`There is no Auth Strategy registered under '${strategyName}' name`);\n    }\n\n    return found;\n  }\n\n  processResultToken(result) {\n    if (result.isSuccess() && result.getToken()) {\n      return this.tokenService.set(result.getToken()).pipe(map(token => {\n        return result;\n      }));\n    }\n\n    return of(result);\n  }\n\n}\n\nNbAuthService.ɵfac = function NbAuthService_Factory(t) {\n  return new (t || NbAuthService)(i0.ɵɵinject(NbTokenService), i0.ɵɵinject(NB_AUTH_STRATEGIES));\n};\n\nNbAuthService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbAuthService,\n  factory: NbAuthService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NbTokenService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_STRATEGIES]\n      }]\n    }];\n  }, null);\n})();\n\nclass NbAuthStrategy {\n  // we should keep this any and validation should be done in `register` method instead\n  // otherwise it won't be possible to pass an empty object\n  setOptions(options) {\n    this.options = deepExtend({}, this.defaultOptions, options);\n  }\n\n  getOption(key) {\n    return getDeepFromObject(this.options, key, null);\n  }\n\n  createToken(value, failWhenInvalidToken) {\n    const token = nbAuthCreateToken(this.getOption('token.class'), value, this.getName()); // At this point, nbAuthCreateToken failed with NbAuthIllegalTokenError which MUST be intercepted by strategies\n    // Or token is created. It MAY be created even if backend did not return any token, in this case it is !Valid\n\n    if (failWhenInvalidToken && !token.isValid()) {\n      // If we require a valid token (i.e. isValid), then we MUST throw NbAuthIllegalTokenError so that the strategies\n      // intercept it\n      throw new NbAuthIllegalTokenError('Token is empty or invalid.');\n    }\n\n    return token;\n  }\n\n  getName() {\n    return this.getOption('name');\n  }\n\n  createFailResponse(data) {\n    return new HttpResponse({\n      body: {},\n      status: 401\n    });\n  }\n\n  createSuccessResponse(data) {\n    return new HttpResponse({\n      body: {},\n      status: 200\n    });\n  }\n\n  getActionEndpoint(action) {\n    const actionEndpoint = this.getOption(`${action}.endpoint`);\n    const baseEndpoint = this.getOption('baseEndpoint');\n    return actionEndpoint ? baseEndpoint + actionEndpoint : '';\n  }\n\n  getHeaders() {\n    const customHeaders = this.getOption('headers') ?? {};\n\n    if (customHeaders instanceof HttpHeaders) {\n      return customHeaders;\n    }\n\n    let headers = new HttpHeaders();\n    Object.entries(customHeaders).forEach(([key, value]) => {\n      headers = headers.append(key, value);\n    });\n    return headers;\n  }\n\n}\n\nclass NbAuthResult {\n  // TODO: better pass object\n  constructor(success, response, redirect, errors, messages, token = null) {\n    this.success = success;\n    this.response = response;\n    this.redirect = redirect;\n    this.errors = [];\n    this.messages = [];\n    this.errors = this.errors.concat([errors]);\n\n    if (errors instanceof Array) {\n      this.errors = errors;\n    }\n\n    this.messages = this.messages.concat([messages]);\n\n    if (messages instanceof Array) {\n      this.messages = messages;\n    }\n\n    this.token = token;\n  }\n\n  getResponse() {\n    return this.response;\n  }\n\n  getToken() {\n    return this.token;\n  }\n\n  getRedirect() {\n    return this.redirect;\n  }\n\n  getErrors() {\n    return this.errors.filter(val => !!val);\n  }\n\n  getMessages() {\n    return this.messages.filter(val => !!val);\n  }\n\n  isSuccess() {\n    return this.success;\n  }\n\n  isFailure() {\n    return !this.success;\n  }\n\n}\n\nclass NbAuthStrategyOptions {}\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbDummyAuthStrategyOptions extends NbAuthStrategyOptions {\n  constructor() {\n    super(...arguments);\n    this.token = {\n      class: NbAuthSimpleToken\n    };\n    this.delay = 1000;\n    this.alwaysFail = false;\n  }\n\n}\n\nconst dummyStrategyOptions = new NbDummyAuthStrategyOptions();\n/**\n * Dummy auth strategy. Could be useful for auth setup when backend is not available yet.\n *\n *\n * Strategy settings.\n *\n * ```ts\n * export class NbDummyAuthStrategyOptions extends NbAuthStrategyOptions {\n *   name = 'dummy';\n *   token = {\n *     class: NbAuthSimpleToken,\n *   };\n *   delay? = 1000;\n *   alwaysFail? = false;\n * }\n * ```\n */\n\nclass NbDummyAuthStrategy extends NbAuthStrategy {\n  constructor() {\n    super(...arguments);\n    this.defaultOptions = dummyStrategyOptions;\n  }\n\n  static setup(options) {\n    return [NbDummyAuthStrategy, options];\n  }\n\n  authenticate(data) {\n    return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n  }\n\n  register(data) {\n    return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n  }\n\n  requestPassword(data) {\n    return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n  }\n\n  resetPassword(data) {\n    return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n  }\n\n  logout(data) {\n    return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n  }\n\n  refreshToken(data) {\n    return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n  }\n\n  createDummyResult(data) {\n    if (this.getOption('alwaysFail')) {\n      return new NbAuthResult(false, this.createFailResponse(data), null, ['Something went wrong.']);\n    }\n\n    try {\n      const token = this.createToken('test token', true);\n      return new NbAuthResult(true, this.createSuccessResponse(data), '/', [], ['Successfully logged in.'], token);\n    } catch (err) {\n      return new NbAuthResult(false, this.createFailResponse(data), null, [err.message]);\n    }\n  }\n\n}\n\nNbDummyAuthStrategy.ɵfac = /* @__PURE__ */function () {\n  let ɵNbDummyAuthStrategy_BaseFactory;\n  return function NbDummyAuthStrategy_Factory(t) {\n    return (ɵNbDummyAuthStrategy_BaseFactory || (ɵNbDummyAuthStrategy_BaseFactory = i0.ɵɵgetInheritedFactory(NbDummyAuthStrategy)))(t || NbDummyAuthStrategy);\n  };\n}();\n\nNbDummyAuthStrategy.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbDummyAuthStrategy,\n  factory: NbDummyAuthStrategy.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbDummyAuthStrategy, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nvar NbOAuth2ResponseType;\n\n(function (NbOAuth2ResponseType) {\n  NbOAuth2ResponseType[\"CODE\"] = \"code\";\n  NbOAuth2ResponseType[\"TOKEN\"] = \"token\";\n})(NbOAuth2ResponseType || (NbOAuth2ResponseType = {})); // TODO: client_credentials\n\n\nvar NbOAuth2GrantType;\n\n(function (NbOAuth2GrantType) {\n  NbOAuth2GrantType[\"AUTHORIZATION_CODE\"] = \"authorization_code\";\n  NbOAuth2GrantType[\"PASSWORD\"] = \"password\";\n  NbOAuth2GrantType[\"REFRESH_TOKEN\"] = \"refresh_token\";\n})(NbOAuth2GrantType || (NbOAuth2GrantType = {}));\n\nvar NbOAuth2ClientAuthMethod;\n\n(function (NbOAuth2ClientAuthMethod) {\n  NbOAuth2ClientAuthMethod[\"NONE\"] = \"none\";\n  NbOAuth2ClientAuthMethod[\"BASIC\"] = \"basic\";\n  NbOAuth2ClientAuthMethod[\"REQUEST_BODY\"] = \"request-body\";\n})(NbOAuth2ClientAuthMethod || (NbOAuth2ClientAuthMethod = {}));\n\nclass NbOAuth2AuthStrategyOptions extends NbAuthStrategyOptions {\n  constructor() {\n    super(...arguments);\n    this.baseEndpoint = '';\n    this.clientId = '';\n    this.clientSecret = '';\n    this.clientAuthMethod = NbOAuth2ClientAuthMethod.NONE;\n    this.redirect = {\n      success: '/',\n      failure: null\n    };\n    this.defaultErrors = ['Something went wrong, please try again.'];\n    this.defaultMessages = ['You have been successfully authenticated.'];\n    this.authorize = {\n      endpoint: 'authorize',\n      responseType: NbOAuth2ResponseType.CODE,\n      requireValidToken: true\n    };\n    this.token = {\n      endpoint: 'token',\n      grantType: NbOAuth2GrantType.AUTHORIZATION_CODE,\n      requireValidToken: true,\n      class: NbAuthOAuth2Token\n    };\n    this.refresh = {\n      endpoint: 'token',\n      grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n      requireValidToken: true\n    };\n  }\n\n}\n\nconst auth2StrategyOptions = new NbOAuth2AuthStrategyOptions();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * OAuth2 authentication strategy.\n *\n * Strategy settings:\n *\n * ```ts\n * export enum NbOAuth2ResponseType {\n *   CODE = 'code',\n *   TOKEN = 'token',\n * }\n *\n * export enum NbOAuth2GrantType {\n *   AUTHORIZATION_CODE = 'authorization_code',\n *   PASSWORD = 'password',\n *   REFRESH_TOKEN = 'refresh_token',\n * }\n *\n * export class NbOAuth2AuthStrategyOptions {\n *   name: string;\n *   baseEndpoint?: string = '';\n *   clientId: string = '';\n *   clientSecret: string = '';\n *   clientAuthMethod: string = NbOAuth2ClientAuthMethod.NONE;\n *   redirect?: { success?: string; failure?: string } = {\n *     success: '/',\n *     failure: null,\n *   };\n *   defaultErrors?: any[] = ['Something went wrong, please try again.'];\n *   defaultMessages?: any[] = ['You have been successfully authenticated.'];\n *   authorize?: {\n *     endpoint?: string;\n *     redirectUri?: string;\n *     responseType?: string;\n *     requireValidToken: true,\n *     scope?: string;\n *     state?: string;\n *     params?: { [key: string]: string };\n *   } = {\n *     endpoint: 'authorize',\n *     responseType: NbOAuth2ResponseType.CODE,\n *   };\n *   token?: {\n *     endpoint?: string;\n *     grantType?: string;\n *     requireValidToken: true,\n *     redirectUri?: string;\n *     scope?: string;\n *     class: NbAuthTokenClass,\n *   } = {\n *     endpoint: 'token',\n *     grantType: NbOAuth2GrantType.AUTHORIZATION_CODE,\n *     class: NbAuthOAuth2Token,\n *   };\n *   refresh?: {\n *     endpoint?: string;\n *     grantType?: string;\n *     scope?: string;\n *     requireValidToken: true,\n *   } = {\n *     endpoint: 'token',\n *     grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n *   };\n * }\n * ```\n *\n */\n\nclass NbOAuth2AuthStrategy extends NbAuthStrategy {\n  constructor(http, route, window) {\n    super();\n    this.http = http;\n    this.route = route;\n    this.window = window;\n    this.redirectResultHandlers = {\n      [NbOAuth2ResponseType.CODE]: () => {\n        return of(this.route.snapshot.queryParams).pipe(switchMap(params => {\n          if (params.code) {\n            return this.requestToken(params.code);\n          }\n\n          return of(new NbAuthResult(false, params, this.getOption('redirect.failure'), this.getOption('defaultErrors'), []));\n        }));\n      },\n      [NbOAuth2ResponseType.TOKEN]: () => {\n        const module = 'authorize';\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return of(this.route.snapshot.fragment).pipe(map(fragment => this.parseHashAsQueryParams(fragment)), map(params => {\n          if (!params.error) {\n            return new NbAuthResult(true, params, this.getOption('redirect.success'), [], this.getOption('defaultMessages'), this.createToken(params, requireValidToken));\n          }\n\n          return new NbAuthResult(false, params, this.getOption('redirect.failure'), this.getOption('defaultErrors'), []);\n        }), catchError(err => {\n          const errors = [];\n\n          if (err instanceof NbAuthIllegalTokenError) {\n            errors.push(err.message);\n          } else {\n            errors.push('Something went wrong.');\n          }\n\n          return of(new NbAuthResult(false, err, this.getOption('redirect.failure'), errors));\n        }));\n      }\n    };\n    this.redirectResults = {\n      [NbOAuth2ResponseType.CODE]: () => {\n        return of(this.route.snapshot.queryParams).pipe(map(params => !!(params && (params.code || params.error))));\n      },\n      [NbOAuth2ResponseType.TOKEN]: () => {\n        return of(this.route.snapshot.fragment).pipe(map(fragment => this.parseHashAsQueryParams(fragment)), map(params => !!(params && (params.access_token || params.error))));\n      }\n    };\n    this.defaultOptions = auth2StrategyOptions;\n  }\n\n  static setup(options) {\n    return [NbOAuth2AuthStrategy, options];\n  }\n\n  get responseType() {\n    return this.getOption('authorize.responseType');\n  }\n\n  get clientAuthMethod() {\n    return this.getOption('clientAuthMethod');\n  }\n\n  authenticate(data) {\n    if (this.getOption('token.grantType') === NbOAuth2GrantType.PASSWORD) {\n      return this.passwordToken(data.email, data.password);\n    } else {\n      return this.isRedirectResult().pipe(switchMap(result => {\n        if (!result) {\n          this.authorizeRedirect();\n          return of(new NbAuthResult(true));\n        }\n\n        return this.getAuthorizationResult();\n      }));\n    }\n  }\n\n  getAuthorizationResult() {\n    const redirectResultHandler = this.redirectResultHandlers[this.responseType];\n\n    if (redirectResultHandler) {\n      return redirectResultHandler.call(this);\n    }\n\n    throw new Error(`'${this.responseType}' responseType is not supported,\n                      only 'token' and 'code' are supported now`);\n  }\n\n  refreshToken(token) {\n    const module = 'refresh';\n    const url = this.getActionEndpoint(module);\n    const requireValidToken = this.getOption(`${module}.requireValidToken`);\n    return this.http.post(url, this.buildRefreshRequestData(token), {\n      headers: this.getHeaders()\n    }).pipe(map(res => {\n      return new NbAuthResult(true, res, this.getOption('redirect.success'), [], this.getOption('defaultMessages'), this.createRefreshedToken(res, token, requireValidToken));\n    }), catchError(res => this.handleResponseError(res)));\n  }\n\n  passwordToken(username, password) {\n    const module = 'token';\n    const url = this.getActionEndpoint(module);\n    const requireValidToken = this.getOption(`${module}.requireValidToken`);\n    return this.http.post(url, this.buildPasswordRequestData(username, password), {\n      headers: this.getHeaders()\n    }).pipe(map(res => {\n      return new NbAuthResult(true, res, this.getOption('redirect.success'), [], this.getOption('defaultMessages'), this.createToken(res, requireValidToken));\n    }), catchError(res => this.handleResponseError(res)));\n  }\n\n  authorizeRedirect() {\n    this.window.location.href = this.buildRedirectUrl();\n  }\n\n  isRedirectResult() {\n    return this.redirectResults[this.responseType].call(this);\n  }\n\n  requestToken(code) {\n    const module = 'token';\n    const url = this.getActionEndpoint(module);\n    const requireValidToken = this.getOption(`${module}.requireValidToken`);\n    return this.http.post(url, this.buildCodeRequestData(code), {\n      headers: this.getHeaders()\n    }).pipe(map(res => {\n      return new NbAuthResult(true, res, this.getOption('redirect.success'), [], this.getOption('defaultMessages'), this.createToken(res, requireValidToken));\n    }), catchError(res => this.handleResponseError(res)));\n  }\n\n  buildCodeRequestData(code) {\n    const params = {\n      grant_type: this.getOption('token.grantType'),\n      code: code,\n      redirect_uri: this.getOption('token.redirectUri'),\n      client_id: this.getOption('clientId')\n    };\n    return this.urlEncodeParameters(this.cleanParams(this.addCredentialsToParams(params)));\n  }\n\n  buildRefreshRequestData(token) {\n    const params = {\n      grant_type: this.getOption('refresh.grantType'),\n      refresh_token: token.getRefreshToken(),\n      scope: this.getOption('refresh.scope'),\n      client_id: this.getOption('clientId')\n    };\n    return this.urlEncodeParameters(this.cleanParams(this.addCredentialsToParams(params)));\n  }\n\n  buildPasswordRequestData(username, password) {\n    const params = {\n      grant_type: this.getOption('token.grantType'),\n      username: username,\n      password: password,\n      scope: this.getOption('token.scope')\n    };\n    return this.urlEncodeParameters(this.cleanParams(this.addCredentialsToParams(params)));\n  }\n\n  buildAuthHeader() {\n    if (this.clientAuthMethod === NbOAuth2ClientAuthMethod.BASIC) {\n      if (this.getOption('clientId') && this.getOption('clientSecret')) {\n        return new HttpHeaders({\n          Authorization: 'Basic ' + btoa(this.getOption('clientId') + ':' + this.getOption('clientSecret'))\n        });\n      } else {\n        throw Error('For basic client authentication method, please provide both clientId & clientSecret.');\n      }\n    }\n\n    return undefined;\n  }\n\n  getHeaders() {\n    let headers = super.getHeaders();\n    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n    const authHeaders = this.buildAuthHeader();\n\n    if (authHeaders === undefined) {\n      return headers;\n    }\n\n    for (const headerKey of authHeaders.keys()) {\n      for (const headerValue of authHeaders.getAll(headerKey)) {\n        headers = headers.append(headerKey, headerValue);\n      }\n    }\n\n    return headers;\n  }\n\n  cleanParams(params) {\n    Object.entries(params).forEach(([key, val]) => !val && delete params[key]);\n    return params;\n  }\n\n  addCredentialsToParams(params) {\n    if (this.clientAuthMethod === NbOAuth2ClientAuthMethod.REQUEST_BODY) {\n      if (this.getOption('clientId') && this.getOption('clientSecret')) {\n        return { ...params,\n          client_id: this.getOption('clientId'),\n          client_secret: this.getOption('clientSecret')\n        };\n      } else {\n        throw Error('For request body client authentication method, please provide both clientId & clientSecret.');\n      }\n    }\n\n    return params;\n  }\n\n  handleResponseError(res) {\n    let errors = [];\n\n    if (res instanceof HttpErrorResponse) {\n      if (res.error.error_description) {\n        errors.push(res.error.error_description);\n      } else {\n        errors = this.getOption('defaultErrors');\n      }\n    } else if (res instanceof NbAuthIllegalTokenError) {\n      errors.push(res.message);\n    } else {\n      errors.push('Something went wrong.');\n    }\n\n    return of(new NbAuthResult(false, res, this.getOption('redirect.failure'), errors, []));\n  }\n\n  buildRedirectUrl() {\n    const params = {\n      response_type: this.getOption('authorize.responseType'),\n      client_id: this.getOption('clientId'),\n      redirect_uri: this.getOption('authorize.redirectUri'),\n      scope: this.getOption('authorize.scope'),\n      state: this.getOption('authorize.state'),\n      ...this.getOption('authorize.params')\n    };\n    const endpoint = this.getActionEndpoint('authorize');\n    const query = this.urlEncodeParameters(this.cleanParams(params));\n    return `${endpoint}?${query}`;\n  }\n\n  parseHashAsQueryParams(hash) {\n    return hash ? hash.split('&').reduce((acc, part) => {\n      const item = part.split('=');\n      acc[item[0]] = decodeURIComponent(item[1]);\n      return acc;\n    }, {}) : {};\n  }\n\n  urlEncodeParameters(params) {\n    return Object.keys(params).map(k => {\n      return `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`;\n    }).join('&');\n  }\n\n  createRefreshedToken(res, existingToken, requireValidToken) {\n    const refreshedToken = this.createToken(res, requireValidToken);\n\n    if (!refreshedToken.getRefreshToken() && existingToken.getRefreshToken()) {\n      refreshedToken.setRefreshToken(existingToken.getRefreshToken());\n    }\n\n    return refreshedToken;\n  }\n\n  register(data) {\n    throw new Error('`register` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n  }\n\n  requestPassword(data) {\n    throw new Error('`requestPassword` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n  }\n\n  resetPassword(data = {}) {\n    throw new Error('`resetPassword` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n  }\n\n  logout() {\n    return of(new NbAuthResult(true));\n  }\n\n}\n\nNbOAuth2AuthStrategy.ɵfac = function NbOAuth2AuthStrategy_Factory(t) {\n  return new (t || NbOAuth2AuthStrategy)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ActivatedRoute), i0.ɵɵinject(NB_WINDOW));\n};\n\nNbOAuth2AuthStrategy.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbOAuth2AuthStrategy,\n  factory: NbOAuth2AuthStrategy.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbOAuth2AuthStrategy, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: i2.ActivatedRoute\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_WINDOW]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbPasswordAuthStrategyOptions extends NbAuthStrategyOptions {\n  constructor() {\n    super(...arguments);\n    this.baseEndpoint = '/api/auth/';\n    this.login = {\n      alwaysFail: false,\n      endpoint: 'login',\n      method: 'post',\n      requireValidToken: true,\n      redirect: {\n        success: '/',\n        failure: null\n      },\n      defaultErrors: ['Login/Email combination is not correct, please try again.'],\n      defaultMessages: ['You have been successfully logged in.']\n    };\n    this.register = {\n      alwaysFail: false,\n      endpoint: 'register',\n      method: 'post',\n      requireValidToken: true,\n      redirect: {\n        success: '/',\n        failure: null\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['You have been successfully registered.']\n    };\n    this.requestPass = {\n      endpoint: 'request-pass',\n      method: 'post',\n      redirect: {\n        success: '/',\n        failure: null\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['Reset password instructions have been sent to your email.']\n    };\n    this.resetPass = {\n      endpoint: 'reset-pass',\n      method: 'put',\n      redirect: {\n        success: '/',\n        failure: null\n      },\n      resetPasswordTokenKey: 'reset_password_token',\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['Your password has been successfully changed.']\n    };\n    this.logout = {\n      alwaysFail: false,\n      endpoint: 'logout',\n      method: 'delete',\n      redirect: {\n        success: '/',\n        failure: null\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['You have been successfully logged out.']\n    };\n    this.refreshToken = {\n      endpoint: 'refresh-token',\n      method: 'post',\n      requireValidToken: true,\n      redirect: {\n        success: null,\n        failure: null\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['Your token has been successfully refreshed.']\n    };\n    this.token = {\n      class: NbAuthSimpleToken,\n      key: 'data.token',\n      getter: (module, res, options) => getDeepFromObject(res.body, options.token.key)\n    };\n    this.errors = {\n      key: 'data.errors',\n      getter: (module, res, options) => getDeepFromObject(res.error, options.errors.key, options[module].defaultErrors)\n    };\n    this.messages = {\n      key: 'data.messages',\n      getter: (module, res, options) => getDeepFromObject(res.body, options.messages.key, options[module].defaultMessages)\n    };\n  }\n\n}\n\nconst passwordStrategyOptions = new NbPasswordAuthStrategyOptions();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * The most common authentication provider for email/password strategy.\n *\n * Strategy settings. Note, there is no need to copy over the whole object to change the settings you need.\n * Also, this.getOption call won't work outside of the default options declaration\n * (which is inside of the `NbPasswordAuthStrategy` class), so you have to replace it with a custom helper function\n * if you need it.\n *\n * ```ts\n *export class NbPasswordAuthStrategyOptions extends NbAuthStrategyOptions {\n *  name: string;\n *  baseEndpoint? = '/api/auth/';\n *  login?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    endpoint: 'login',\n *    method: 'post',\n *    requireValidToken: true,\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Login/Email combination is not correct, please try again.'],\n *    defaultMessages: ['You have been successfully logged in.'],\n *  };\n *  register?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    endpoint: 'register',\n *    method: 'post',\n *    requireValidToken: true,\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully registered.'],\n *  };\n *  requestPass?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'request-pass',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Reset password instructions have been sent to your email.'],\n *  };\n *  resetPass?: boolean | NbPasswordStrategyReset = {\n *    endpoint: 'reset-pass',\n *    method: 'put',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    resetPasswordTokenKey: 'reset_password_token',\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your password has been successfully changed.'],\n *  };\n *  logout?: boolean | NbPasswordStrategyReset = {\n *    alwaysFail: false,\n *    endpoint: 'logout',\n *    method: 'delete',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully logged out.'],\n *  };\n *  refreshToken?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'refresh-token',\n *    method: 'post',\n *    requireValidToken: true,\n *    redirect: {\n *      success: null,\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your token has been successfully refreshed.'],\n *  };\n *  token?: NbPasswordStrategyToken = {\n *    class: NbAuthSimpleToken,\n *    key: 'data.token',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.token.key,\n *    ),\n *  };\n *  errors?: NbPasswordStrategyMessage = {\n *    key: 'data.errors',\n *    getter: (module: string, res: HttpErrorResponse, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.error,\n *      options.errors.key,\n *      options[module].defaultErrors,\n *    ),\n *  };\n *  messages?: NbPasswordStrategyMessage = {\n *    key: 'data.messages',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.messages.key,\n *      options[module].defaultMessages,\n *    ),\n *  };\n *  validation?: {\n *    password?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *    email?: {\n *      required?: boolean;\n *      regexp?: string | null;\n *    };\n *    fullName?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *  };\n *}\n * ```\n */\n\nclass NbPasswordAuthStrategy extends NbAuthStrategy {\n  constructor(http, route) {\n    super();\n    this.http = http;\n    this.route = route;\n    this.defaultOptions = passwordStrategyOptions;\n  }\n\n  static setup(options) {\n    return [NbPasswordAuthStrategy, options];\n  }\n\n  authenticate(data) {\n    const module = 'login';\n    const method = this.getOption(`${module}.method`);\n    const url = this.getActionEndpoint(module);\n    const requireValidToken = this.getOption(`${module}.requireValidToken`);\n    return this.http.request(method, url, {\n      body: data,\n      observe: 'response',\n      headers: this.getHeaders()\n    }).pipe(map(res => {\n      if (this.getOption(`${module}.alwaysFail`)) {\n        throw this.createFailResponse(data);\n      }\n\n      return res;\n    }), map(res => {\n      return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options), this.createToken(this.getOption('token.getter')(module, res, this.options), requireValidToken));\n    }), catchError(res => {\n      return this.handleResponseError(res, module);\n    }));\n  }\n\n  register(data) {\n    const module = 'register';\n    const method = this.getOption(`${module}.method`);\n    const url = this.getActionEndpoint(module);\n    const requireValidToken = this.getOption(`${module}.requireValidToken`);\n    return this.http.request(method, url, {\n      body: data,\n      observe: 'response',\n      headers: this.getHeaders()\n    }).pipe(map(res => {\n      if (this.getOption(`${module}.alwaysFail`)) {\n        throw this.createFailResponse(data);\n      }\n\n      return res;\n    }), map(res => {\n      return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options), this.createToken(this.getOption('token.getter')('login', res, this.options), requireValidToken));\n    }), catchError(res => {\n      return this.handleResponseError(res, module);\n    }));\n  }\n\n  requestPassword(data) {\n    const module = 'requestPass';\n    const method = this.getOption(`${module}.method`);\n    const url = this.getActionEndpoint(module);\n    return this.http.request(method, url, {\n      body: data,\n      observe: 'response',\n      headers: this.getHeaders()\n    }).pipe(map(res => {\n      if (this.getOption(`${module}.alwaysFail`)) {\n        throw this.createFailResponse();\n      }\n\n      return res;\n    }), map(res => {\n      return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options));\n    }), catchError(res => {\n      return this.handleResponseError(res, module);\n    }));\n  }\n\n  resetPassword(data = {}) {\n    const module = 'resetPass';\n    const method = this.getOption(`${module}.method`);\n    const url = this.getActionEndpoint(module);\n    const tokenKey = this.getOption(`${module}.resetPasswordTokenKey`);\n    data[tokenKey] = this.route.snapshot.queryParams[tokenKey];\n    return this.http.request(method, url, {\n      body: data,\n      observe: 'response',\n      headers: this.getHeaders()\n    }).pipe(map(res => {\n      if (this.getOption(`${module}.alwaysFail`)) {\n        throw this.createFailResponse();\n      }\n\n      return res;\n    }), map(res => {\n      return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options));\n    }), catchError(res => {\n      return this.handleResponseError(res, module);\n    }));\n  }\n\n  logout() {\n    const module = 'logout';\n    const method = this.getOption(`${module}.method`);\n    const url = this.getActionEndpoint(module);\n    return of({}).pipe(switchMap(res => {\n      if (!url) {\n        return of(res);\n      }\n\n      return this.http.request(method, url, {\n        observe: 'response',\n        headers: this.getHeaders()\n      });\n    }), map(res => {\n      if (this.getOption(`${module}.alwaysFail`)) {\n        throw this.createFailResponse();\n      }\n\n      return res;\n    }), map(res => {\n      return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options));\n    }), catchError(res => {\n      return this.handleResponseError(res, module);\n    }));\n  }\n\n  refreshToken(data) {\n    const module = 'refreshToken';\n    const method = this.getOption(`${module}.method`);\n    const url = this.getActionEndpoint(module);\n    const requireValidToken = this.getOption(`${module}.requireValidToken`);\n    return this.http.request(method, url, {\n      body: data,\n      observe: 'response',\n      headers: this.getHeaders()\n    }).pipe(map(res => {\n      if (this.getOption(`${module}.alwaysFail`)) {\n        throw this.createFailResponse(data);\n      }\n\n      return res;\n    }), map(res => {\n      return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options), this.createToken(this.getOption('token.getter')(module, res, this.options), requireValidToken));\n    }), catchError(res => {\n      return this.handleResponseError(res, module);\n    }));\n  }\n\n  handleResponseError(res, module) {\n    let errors = [];\n\n    if (res instanceof HttpErrorResponse) {\n      errors = this.getOption('errors.getter')(module, res, this.options);\n    } else if (res instanceof NbAuthIllegalTokenError) {\n      errors.push(res.message);\n    } else {\n      errors.push('Something went wrong.');\n    }\n\n    return of(new NbAuthResult(false, res, this.getOption(`${module}.redirect.failure`), errors));\n  }\n\n}\n\nNbPasswordAuthStrategy.ɵfac = function NbPasswordAuthStrategy_Factory(t) {\n  return new (t || NbPasswordAuthStrategy)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ActivatedRoute));\n};\n\nNbPasswordAuthStrategy.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbPasswordAuthStrategy,\n  factory: NbPasswordAuthStrategy.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbPasswordAuthStrategy, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: i2.ActivatedRoute\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbAuthBlockComponent {}\n\nNbAuthBlockComponent.ɵfac = function NbAuthBlockComponent_Factory(t) {\n  return new (t || NbAuthBlockComponent)();\n};\n\nNbAuthBlockComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbAuthBlockComponent,\n  selectors: [[\"nb-auth-block\"]],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function NbAuthBlockComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  styles: [\"[_nghost-%COMP%]{display:block;width:100%;max-width:35rem}[_nghost-%COMP%]     form{width:100%}[_nghost-%COMP%]     .label{display:block;margin-bottom:.5rem}[_nghost-%COMP%]     .forgot-password{text-decoration:none;margin-bottom:.5rem}[_nghost-%COMP%]     .caption{margin-top:.5rem}[_nghost-%COMP%]     .alert{text-align:center}[_nghost-%COMP%]     .title{margin-top:0;margin-bottom:.75rem;text-align:center}[_nghost-%COMP%]     .sub-title{margin-bottom:2rem;text-align:center}[_nghost-%COMP%]     .form-control-group{margin-bottom:2rem}[_nghost-%COMP%]     .form-control-group.accept-group{display:flex;justify-content:space-between;margin:2rem 0}[_nghost-%COMP%]     .label-with-link{display:flex;justify-content:space-between}[_nghost-%COMP%]     .links{text-align:center;margin-top:1.75rem}[_nghost-%COMP%]     .links .socials{margin-top:1.5rem}[_nghost-%COMP%]     .links .socials a{margin:0 1rem;text-decoration:none;vertical-align:middle}[_nghost-%COMP%]     .links .socials a.with-icon{font-size:2rem}[_nghost-%COMP%]     .another-action{margin-top:2rem;text-align:center}[_nghost-%COMP%]     .sign-in-or-up{margin-top:2rem;display:flex;justify-content:space-between}[_nghost-%COMP%]     nb-alert .alert-title, [_nghost-%COMP%]     nb-alert .alert-message{margin:0 0 .5rem}[_nghost-%COMP%]     nb-alert .alert-message-list{list-style-type:none;padding:0;margin:0}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthBlockComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-auth-block',\n      template: `\n    <ng-content></ng-content>\n  `,\n      styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host{display:block;width:100%;max-width:35rem}:host ::ng-deep form{width:100%}:host ::ng-deep .label{display:block;margin-bottom:.5rem}:host ::ng-deep .forgot-password{text-decoration:none;margin-bottom:.5rem}:host ::ng-deep .caption{margin-top:.5rem}:host ::ng-deep .alert{text-align:center}:host ::ng-deep .title{margin-top:0;margin-bottom:.75rem;text-align:center}:host ::ng-deep .sub-title{margin-bottom:2rem;text-align:center}:host ::ng-deep .form-control-group{margin-bottom:2rem}:host ::ng-deep .form-control-group.accept-group{display:flex;justify-content:space-between;margin:2rem 0}:host ::ng-deep .label-with-link{display:flex;justify-content:space-between}:host ::ng-deep .links{text-align:center;margin-top:1.75rem}:host ::ng-deep .links .socials{margin-top:1.5rem}:host ::ng-deep .links .socials a{margin:0 1rem;text-decoration:none;vertical-align:middle}:host ::ng-deep .links .socials a.with-icon{font-size:2rem}:host ::ng-deep .another-action{margin-top:2rem;text-align:center}:host ::ng-deep .sign-in-or-up{margin-top:2rem;display:flex;justify-content:space-between}:host ::ng-deep nb-alert .alert-title,:host ::ng-deep nb-alert .alert-message{margin:0 0 .5rem}:host ::ng-deep nb-alert .alert-message-list{list-style-type:none;padding:0;margin:0}\\n\"]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbAuthComponent {\n  // showcase of how to use the onAuthenticationChange method\n  constructor(auth, location) {\n    this.auth = auth;\n    this.location = location;\n    this.destroy$ = new Subject();\n    this.authenticated = false;\n    this.token = '';\n    this.subscription = auth.onAuthenticationChange().pipe(takeUntil(this.destroy$)).subscribe(authenticated => {\n      this.authenticated = authenticated;\n    });\n  }\n\n  back() {\n    this.location.back();\n    return false;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n}\n\nNbAuthComponent.ɵfac = function NbAuthComponent_Factory(t) {\n  return new (t || NbAuthComponent)(i0.ɵɵdirectiveInject(NbAuthService), i0.ɵɵdirectiveInject(i4.Location));\n};\n\nNbAuthComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbAuthComponent,\n  selectors: [[\"nb-auth\"]],\n  decls: 10,\n  vars: 0,\n  consts: [[1, \"navigation\"], [\"href\", \"#\", \"aria-label\", \"Back\", 1, \"link\", \"back-link\", 3, \"click\"], [\"icon\", \"arrow-back\"]],\n  template: function NbAuthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nb-layout\");\n      i0.ɵɵelementStart(1, \"nb-layout-column\");\n      i0.ɵɵelementStart(2, \"nb-card\");\n      i0.ɵɵelementStart(3, \"nb-card-header\");\n      i0.ɵɵelementStart(4, \"nav\", 0);\n      i0.ɵɵelementStart(5, \"a\", 1);\n      i0.ɵɵlistener(\"click\", function NbAuthComponent_Template_a_click_5_listener() {\n        return ctx.back();\n      });\n      i0.ɵɵelement(6, \"nb-icon\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"nb-card-body\");\n      i0.ɵɵelementStart(8, \"nb-auth-block\");\n      i0.ɵɵelement(9, \"router-outlet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n  },\n  directives: [i3.NbLayoutComponent, i3.NbLayoutColumnComponent, i3.NbCardComponent, i3.NbCardHeaderComponent, i3.NbIconComponent, i3.NbCardBodyComponent, NbAuthBlockComponent, i2.RouterOutlet],\n  styles: [\".visually-hidden[_ngcontent-%COMP%]{position:absolute!important;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px)}.cdk-overlay-container[_ngcontent-%COMP%], .cdk-global-overlay-wrapper[_ngcontent-%COMP%]{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container[_ngcontent-%COMP%]{position:fixed;z-index:1000}.cdk-overlay-container[_ngcontent-%COMP%]:empty{display:none}.cdk-global-overlay-wrapper[_ngcontent-%COMP%]{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane[_ngcontent-%COMP%]{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop[_ngcontent-%COMP%]{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing[_ngcontent-%COMP%]{opacity:1}.cdk-high-contrast-active[_ngcontent-%COMP%]   .cdk-overlay-backdrop.cdk-overlay-backdrop-showing[_ngcontent-%COMP%]{opacity:.6}.cdk-overlay-dark-backdrop[_ngcontent-%COMP%]{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop[_ngcontent-%COMP%], .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing[_ngcontent-%COMP%]{opacity:0}.cdk-overlay-connected-position-bounding-box[_ngcontent-%COMP%]{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock[_ngcontent-%COMP%]{position:fixed;width:100%;overflow-y:scroll}.nb-global-scrollblock[_ngcontent-%COMP%]{position:static;width:auto;overflow:hidden}html[_ngcontent-%COMP%]{box-sizing:border-box}*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:inherit}html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{margin:0;padding:0}html[_ngcontent-%COMP%]{line-height:1.15;-webkit-text-size-adjust:100%}body[_ngcontent-%COMP%]{margin:0}h1[_ngcontent-%COMP%]{font-size:2em;margin:.67em 0}hr[_ngcontent-%COMP%]{box-sizing:content-box;height:0;overflow:visible}pre[_ngcontent-%COMP%]{font-family:monospace,monospace;font-size:1em}a[_ngcontent-%COMP%]{background-color:transparent}abbr[title][_ngcontent-%COMP%]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b[_ngcontent-%COMP%], strong[_ngcontent-%COMP%]{font-weight:bolder}code[_ngcontent-%COMP%], kbd[_ngcontent-%COMP%], samp[_ngcontent-%COMP%]{font-family:monospace,monospace;font-size:1em}small[_ngcontent-%COMP%]{font-size:80%}sub[_ngcontent-%COMP%], sup[_ngcontent-%COMP%]{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub[_ngcontent-%COMP%]{bottom:-.25em}sup[_ngcontent-%COMP%]{top:-.5em}img[_ngcontent-%COMP%]{border-style:none}button[_ngcontent-%COMP%], input[_ngcontent-%COMP%], optgroup[_ngcontent-%COMP%], select[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button[_ngcontent-%COMP%], input[_ngcontent-%COMP%]{overflow:visible}button[_ngcontent-%COMP%], select[_ngcontent-%COMP%]{text-transform:none}button[_ngcontent-%COMP%], [type=button][_ngcontent-%COMP%], [type=reset][_ngcontent-%COMP%], [type=submit][_ngcontent-%COMP%]{-webkit-appearance:button}button[_ngcontent-%COMP%]::-moz-focus-inner, [type=button][_ngcontent-%COMP%]::-moz-focus-inner, [type=reset][_ngcontent-%COMP%]::-moz-focus-inner, [type=submit][_ngcontent-%COMP%]::-moz-focus-inner{border-style:none;padding:0}button[_ngcontent-%COMP%]:-moz-focusring, [type=button][_ngcontent-%COMP%]:-moz-focusring, [type=reset][_ngcontent-%COMP%]:-moz-focusring, [type=submit][_ngcontent-%COMP%]:-moz-focusring{outline:1px dotted ButtonText}fieldset[_ngcontent-%COMP%]{padding:.35em .75em .625em}legend[_ngcontent-%COMP%]{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress[_ngcontent-%COMP%]{vertical-align:baseline}textarea[_ngcontent-%COMP%]{overflow:auto}[type=checkbox][_ngcontent-%COMP%], [type=radio][_ngcontent-%COMP%]{box-sizing:border-box;padding:0}[type=number][_ngcontent-%COMP%]::-webkit-inner-spin-button, [type=number][_ngcontent-%COMP%]::-webkit-outer-spin-button{height:auto}[type=search][_ngcontent-%COMP%]{-webkit-appearance:textfield;outline-offset:-2px}[type=search][_ngcontent-%COMP%]::-webkit-search-decoration{-webkit-appearance:none}[_ngcontent-%COMP%]::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details[_ngcontent-%COMP%]{display:block}summary[_ngcontent-%COMP%]{display:list-item}template[_ngcontent-%COMP%], [hidden][_ngcontent-%COMP%]{display:none}[_nghost-%COMP%]   nb-card[_ngcontent-%COMP%]{margin:0;height:calc(100vh - 5rem)}[_nghost-%COMP%]   .navigation[_ngcontent-%COMP%]   .link[_ngcontent-%COMP%]{display:inline-block;text-decoration:none}[_nghost-%COMP%]   .navigation[_ngcontent-%COMP%]   .link[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%]{font-size:2rem;vertical-align:middle}[_nghost-%COMP%]   .links[_ngcontent-%COMP%]   nb-icon[_ngcontent-%COMP%]{font-size:2.5rem}[_nghost-%COMP%]   nb-card-body[_ngcontent-%COMP%]{display:flex;width:100%}[_nghost-%COMP%]   nb-auth-block[_ngcontent-%COMP%]{margin:auto}@media (max-width: 767.98px){[_nghost-%COMP%]   nb-card[_ngcontent-%COMP%]{border-radius:0;height:100vh}}[_nghost-%COMP%]     nb-layout .layout .layout-container .content .columns nb-layout-column{padding:2.5rem}@media (max-width: 767.98px){[_nghost-%COMP%]     nb-layout .layout .layout-container .content .columns nb-layout-column{padding:0}}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-auth',\n      template: `\n    <nb-layout>\n      <nb-layout-column>\n        <nb-card>\n          <nb-card-header>\n            <nav class=\"navigation\">\n              <a href=\"#\" (click)=\"back()\" class=\"link back-link\" aria-label=\"Back\">\n                <nb-icon icon=\"arrow-back\"></nb-icon>\n              </a>\n            </nav>\n          </nb-card-header>\n          <nb-card-body>\n            <nb-auth-block>\n              <router-outlet></router-outlet>\n            </nb-auth-block>\n          </nb-card-body>\n        </nb-card>\n      </nb-layout-column>\n    </nb-layout>\n  `,\n      styles: [\"/*!\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */.visually-hidden{position:absolute!important;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px)}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}.nb-global-scrollblock{position:static;width:auto;overflow:hidden}/*\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n *//*!\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}html,body{margin:0;padding:0}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template,[hidden]{display:none}/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host nb-card{margin:0;height:calc(100vh - 5rem)}:host .navigation .link{display:inline-block;text-decoration:none}:host .navigation .link nb-icon{font-size:2rem;vertical-align:middle}:host .links nb-icon{font-size:2.5rem}:host nb-card-body{display:flex;width:100%}:host nb-auth-block{margin:auto}@media (max-width: 767.98px){:host nb-card{border-radius:0;height:100vh}}:host ::ng-deep nb-layout .layout .layout-container .content .columns nb-layout-column{padding:2.5rem}@media (max-width: 767.98px){:host ::ng-deep nb-layout .layout .layout-container .content .columns nb-layout-column{padding:0}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NbAuthService\n    }, {\n      type: i4.Location\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbLoginComponent {\n  constructor(service, options = {}, cd, router) {\n    this.service = service;\n    this.options = options;\n    this.cd = cd;\n    this.router = router;\n    this.redirectDelay = 0;\n    this.showMessages = {};\n    this.strategy = '';\n    this.errors = [];\n    this.messages = [];\n    this.user = {};\n    this.submitted = false;\n    this.socialLinks = [];\n    this.rememberMe = false;\n    this.redirectDelay = this.getConfigValue('forms.login.redirectDelay');\n    this.showMessages = this.getConfigValue('forms.login.showMessages');\n    this.strategy = this.getConfigValue('forms.login.strategy');\n    this.socialLinks = this.getConfigValue('forms.login.socialLinks');\n    this.rememberMe = this.getConfigValue('forms.login.rememberMe');\n  }\n\n  login() {\n    this.errors = [];\n    this.messages = [];\n    this.submitted = true;\n    this.service.authenticate(this.strategy, this.user).subscribe(result => {\n      this.submitted = false;\n\n      if (result.isSuccess()) {\n        this.messages = result.getMessages();\n      } else {\n        this.errors = result.getErrors();\n      }\n\n      const redirect = result.getRedirect();\n\n      if (redirect) {\n        setTimeout(() => {\n          return this.router.navigateByUrl(redirect);\n        }, this.redirectDelay);\n      }\n\n      this.cd.detectChanges();\n    });\n  }\n\n  getConfigValue(key) {\n    return getDeepFromObject(this.options, key, null);\n  }\n\n}\n\nNbLoginComponent.ɵfac = function NbLoginComponent_Factory(t) {\n  return new (t || NbLoginComponent)(i0.ɵɵdirectiveInject(NbAuthService), i0.ɵɵdirectiveInject(NB_AUTH_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nNbLoginComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbLoginComponent,\n  selectors: [[\"nb-login\"]],\n  decls: 32,\n  vars: 19,\n  consts: [[\"id\", \"title\", 1, \"title\"], [1, \"sub-title\"], [\"outline\", \"danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"outline\", \"success\", \"role\", \"alert\", 4, \"ngIf\"], [\"aria-labelledby\", \"title\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-control-group\"], [\"for\", \"input-email\", 1, \"label\"], [\"nbInput\", \"\", \"fullWidth\", \"\", \"name\", \"email\", \"id\", \"input-email\", \"pattern\", \".+@.+\\\\..+\", \"placeholder\", \"Email address\", \"fieldSize\", \"large\", \"autofocus\", \"\", 3, \"ngModel\", \"status\", \"required\", \"ngModelChange\"], [\"email\", \"ngModel\"], [4, \"ngIf\"], [1, \"label-with-link\"], [\"for\", \"input-password\", 1, \"label\"], [\"routerLink\", \"../request-password\", 1, \"forgot-password\", \"caption-2\"], [\"nbInput\", \"\", \"fullWidth\", \"\", \"name\", \"password\", \"type\", \"password\", \"id\", \"input-password\", \"placeholder\", \"Password\", \"fieldSize\", \"large\", 3, \"ngModel\", \"status\", \"required\", \"minlength\", \"maxlength\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"form-control-group\", \"accept-group\"], [\"name\", \"rememberMe\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [\"nbButton\", \"\", \"fullWidth\", \"\", \"status\", \"primary\", \"size\", \"large\", 3, \"disabled\"], [\"class\", \"links\", \"aria-label\", \"Social sign in\", 4, \"ngIf\"], [\"aria-label\", \"Register\", 1, \"another-action\"], [\"routerLink\", \"../register\", 1, \"text-link\"], [\"outline\", \"danger\", \"role\", \"alert\"], [1, \"alert-title\"], [1, \"alert-message-list\"], [\"class\", \"alert-message\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert-message\"], [\"outline\", \"success\", \"role\", \"alert\"], [\"class\", \"caption status-danger\", 4, \"ngIf\"], [1, \"caption\", \"status-danger\"], [\"name\", \"rememberMe\", 3, \"ngModel\", \"ngModelChange\"], [\"aria-label\", \"Social sign in\", 1, \"links\"], [1, \"socials\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\", \"with-icon\", 4, \"ngIf\"], [3, \"with-icon\", 4, \"ngIf\"], [3, \"routerLink\"], [3, \"icon\", 4, \"ngIf\", \"ngIfElse\"], [\"title\", \"\"], [3, \"icon\"]],\n  template: function NbLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\", 1);\n      i0.ɵɵtext(3, \"Hello! Log in with your email.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, NbLoginComponent_nb_alert_4_Template, 6, 1, \"nb-alert\", 2);\n      i0.ɵɵtemplate(5, NbLoginComponent_nb_alert_5_Template, 6, 1, \"nb-alert\", 3);\n      i0.ɵɵelementStart(6, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function NbLoginComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵelementStart(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Email address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function NbLoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, NbLoginComponent_ng_container_13_Template, 3, 2, \"ng-container\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 6);\n      i0.ɵɵelementStart(15, \"span\", 11);\n      i0.ɵɵelementStart(16, \"label\", 12);\n      i0.ɵɵtext(17, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"a\", 13);\n      i0.ɵɵtext(19, \"Forgot Password?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function NbLoginComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, NbLoginComponent_ng_container_22_Template, 3, 2, \"ng-container\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 16);\n      i0.ɵɵtemplate(24, NbLoginComponent_nb_checkbox_24_Template, 2, 1, \"nb-checkbox\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"button\", 18);\n      i0.ɵɵtext(26, \" Log In \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(27, NbLoginComponent_section_27_Template, 4, 1, \"section\", 19);\n      i0.ɵɵelementStart(28, \"section\", 20);\n      i0.ɵɵtext(29, \" Don't have an account? \");\n      i0.ɵɵelementStart(30, \"a\", 21);\n      i0.ɵɵtext(31, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(7);\n\n      const _r3 = i0.ɵɵreference(12);\n\n      const _r5 = i0.ɵɵreference(21);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.error && (ctx.errors == null ? null : ctx.errors.length) && !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.success && (ctx.messages == null ? null : ctx.messages.length) && !ctx.submitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email)(\"status\", _r3.dirty ? _r3.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.email.required\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r3.invalid && _r3.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password)(\"status\", _r5.dirty ? _r5.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.password.required\"))(\"minlength\", ctx.getConfigValue(\"forms.validation.password.minLength\"))(\"maxlength\", ctx.getConfigValue(\"forms.validation.password.maxLength\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r5.invalid && _r5.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r5.invalid && _r5.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.rememberMe);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"btn-pulse\", ctx.submitted);\n      i0.ɵɵproperty(\"disabled\", ctx.submitted || !_r2.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.socialLinks && ctx.socialLinks.length > 0);\n    }\n  },\n  directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i3.NbInputDirective, i5.DefaultValueAccessor, i5.PatternValidator, i5.NgControlStatus, i5.NgModel, i5.RequiredValidator, i2.RouterLinkWithHref, i5.MinLengthValidator, i5.MaxLengthValidator, i3.NbButtonComponent, i3.NbAlertComponent, i4.NgForOf, i3.NbCheckboxComponent, i3.NbIconComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbLoginComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-login',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Login</h1>\\n<p class=\\\"sub-title\\\">Hello! Log in with your email.</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"login()\\\" #form=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Email address:</label>\\n    <input nbInput\\n           fullWidth\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           name=\\\"email\\\"\\n           id=\\\"input-email\\\"\\n           pattern=\\\".+@.+\\\\..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           fieldSize=\\\"large\\\"\\n           autofocus\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <span class=\\\"label-with-link\\\">\\n      <label class=\\\"label\\\" for=\\\"input-password\\\">Password:</label>\\n      <a class=\\\"forgot-password caption-2\\\" routerLink=\\\"../request-password\\\">Forgot Password?</a>\\n    </span>\\n    <input nbInput\\n           fullWidth\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           name=\\\"password\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           placeholder=\\\"Password\\\"\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched \\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contain\\n        from {{ getConfigValue('forms.validation.password.minLength') }}\\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group accept-group\\\">\\n    <nb-checkbox name=\\\"rememberMe\\\" [(ngModel)]=\\\"user.rememberMe\\\" *ngIf=\\\"rememberMe\\\">Remember me</nb-checkbox>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !form.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Log In\\n  </button>\\n</form>\\n\\n<section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\n  or enter with:\\n  <div class=\\\"socials\\\">\\n    <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n      <a *ngIf=\\\"socialLink.link\\\"\\n         [routerLink]=\\\"socialLink.link\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n      <a *ngIf=\\\"socialLink.url\\\"\\n         [attr.href]=\\\"socialLink.url\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n\\n<section class=\\\"another-action\\\" aria-label=\\\"Register\\\">\\n  Don't have an account? <a class=\\\"text-link\\\" routerLink=\\\"../register\\\">Register</a>\\n</section>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: NbAuthService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_OPTIONS]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Router\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbRegisterComponent {\n  constructor(service, options = {}, cd, router) {\n    this.service = service;\n    this.options = options;\n    this.cd = cd;\n    this.router = router;\n    this.redirectDelay = 0;\n    this.showMessages = {};\n    this.strategy = '';\n    this.submitted = false;\n    this.errors = [];\n    this.messages = [];\n    this.user = {};\n    this.socialLinks = [];\n    this.redirectDelay = this.getConfigValue('forms.register.redirectDelay');\n    this.showMessages = this.getConfigValue('forms.register.showMessages');\n    this.strategy = this.getConfigValue('forms.register.strategy');\n    this.socialLinks = this.getConfigValue('forms.login.socialLinks');\n  }\n\n  register() {\n    this.errors = this.messages = [];\n    this.submitted = true;\n    this.service.register(this.strategy, this.user).subscribe(result => {\n      this.submitted = false;\n\n      if (result.isSuccess()) {\n        this.messages = result.getMessages();\n      } else {\n        this.errors = result.getErrors();\n      }\n\n      const redirect = result.getRedirect();\n\n      if (redirect) {\n        setTimeout(() => {\n          return this.router.navigateByUrl(redirect);\n        }, this.redirectDelay);\n      }\n\n      this.cd.detectChanges();\n    });\n  }\n\n  getConfigValue(key) {\n    return getDeepFromObject(this.options, key, null);\n  }\n\n}\n\nNbRegisterComponent.ɵfac = function NbRegisterComponent_Factory(t) {\n  return new (t || NbRegisterComponent)(i0.ɵɵdirectiveInject(NbAuthService), i0.ɵɵdirectiveInject(NB_AUTH_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nNbRegisterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbRegisterComponent,\n  selectors: [[\"nb-register\"]],\n  decls: 38,\n  vars: 31,\n  consts: [[\"id\", \"title\", 1, \"title\"], [\"outline\", \"danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"outline\", \"success\", \"role\", \"alert\", 4, \"ngIf\"], [\"aria-labelledby\", \"title\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-control-group\"], [\"for\", \"input-name\", 1, \"label\"], [\"nbInput\", \"\", \"id\", \"input-name\", \"name\", \"fullName\", \"placeholder\", \"Full name\", \"autofocus\", \"\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 3, \"ngModel\", \"status\", \"required\", \"minlength\", \"maxlength\", \"ngModelChange\"], [\"fullName\", \"ngModel\"], [4, \"ngIf\"], [\"for\", \"input-email\", 1, \"label\"], [\"nbInput\", \"\", \"id\", \"input-email\", \"name\", \"email\", \"pattern\", \".+@.+..+\", \"placeholder\", \"Email address\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 3, \"ngModel\", \"status\", \"required\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"for\", \"input-password\", 1, \"label\"], [\"nbInput\", \"\", \"type\", \"password\", \"id\", \"input-password\", \"name\", \"password\", \"placeholder\", \"Password\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 3, \"ngModel\", \"status\", \"required\", \"minlength\", \"maxlength\", \"ngModelChange\"], [\"password\", \"ngModel\"], [\"for\", \"input-re-password\", 1, \"label\"], [\"nbInput\", \"\", \"type\", \"password\", \"id\", \"input-re-password\", \"name\", \"rePass\", \"placeholder\", \"Confirm Password\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 3, \"ngModel\", \"status\", \"required\", \"ngModelChange\"], [\"rePass\", \"ngModel\"], [\"class\", \"form-control-group accept-group\", 4, \"ngIf\"], [\"nbButton\", \"\", \"fullWidth\", \"\", \"status\", \"primary\", \"size\", \"large\", 3, \"disabled\"], [\"class\", \"links\", \"aria-label\", \"Social sign in\", 4, \"ngIf\"], [\"aria-label\", \"Sign in\", 1, \"another-action\"], [\"routerLink\", \"../login\", 1, \"text-link\"], [\"outline\", \"danger\", \"role\", \"alert\"], [1, \"alert-title\"], [1, \"alert-message-list\"], [\"class\", \"alert-message\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert-message\"], [\"outline\", \"success\", \"role\", \"alert\"], [\"class\", \"caption status-danger\", 4, \"ngIf\"], [1, \"caption\", \"status-danger\"], [1, \"form-control-group\", \"accept-group\"], [\"name\", \"terms\", 3, \"ngModel\", \"required\", \"ngModelChange\"], [\"href\", \"#\", \"target\", \"_blank\"], [\"aria-label\", \"Social sign in\", 1, \"links\"], [1, \"socials\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\", \"with-icon\", 4, \"ngIf\"], [3, \"with-icon\", 4, \"ngIf\"], [3, \"routerLink\"], [3, \"icon\", 4, \"ngIf\", \"ngIfElse\"], [\"title\", \"\"], [3, \"icon\"]],\n  template: function NbRegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, NbRegisterComponent_nb_alert_2_Template, 6, 1, \"nb-alert\", 1);\n      i0.ɵɵtemplate(3, NbRegisterComponent_nb_alert_3_Template, 6, 1, \"nb-alert\", 2);\n      i0.ɵɵelementStart(4, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function NbRegisterComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵelementStart(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Full name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 7, 8);\n      i0.ɵɵlistener(\"ngModelChange\", function NbRegisterComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.user.fullName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, NbRegisterComponent_ng_container_11_Template, 3, 2, \"ng-container\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 5);\n      i0.ɵɵelementStart(13, \"label\", 10);\n      i0.ɵɵtext(14, \"Email address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function NbRegisterComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, NbRegisterComponent_ng_container_17_Template, 3, 2, \"ng-container\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 5);\n      i0.ɵɵelementStart(19, \"label\", 13);\n      i0.ɵɵtext(20, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function NbRegisterComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(23, NbRegisterComponent_ng_container_23_Template, 3, 2, \"ng-container\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 5);\n      i0.ɵɵelementStart(25, \"label\", 16);\n      i0.ɵɵtext(26, \"Repeat password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 17, 18);\n      i0.ɵɵlistener(\"ngModelChange\", function NbRegisterComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.user.confirmPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(29, NbRegisterComponent_ng_container_29_Template, 3, 2, \"ng-container\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, NbRegisterComponent_div_30_Template, 6, 2, \"div\", 19);\n      i0.ɵɵelementStart(31, \"button\", 20);\n      i0.ɵɵtext(32, \" Register \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(33, NbRegisterComponent_section_33_Template, 4, 1, \"section\", 21);\n      i0.ɵɵelementStart(34, \"section\", 22);\n      i0.ɵɵtext(35, \" Already have an account? \");\n      i0.ɵɵelementStart(36, \"a\", 23);\n      i0.ɵɵtext(37, \"Log in\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(5);\n\n      const _r3 = i0.ɵɵreference(10);\n\n      const _r5 = i0.ɵɵreference(16);\n\n      const _r7 = i0.ɵɵreference(22);\n\n      const _r9 = i0.ɵɵreference(28);\n\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.error && (ctx.errors == null ? null : ctx.errors.length) && !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.success && (ctx.messages == null ? null : ctx.messages.length) && !ctx.submitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.fullName)(\"status\", _r3.dirty ? _r3.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.fullName.required\"))(\"minlength\", ctx.getConfigValue(\"forms.validation.fullName.minLength\"))(\"maxlength\", ctx.getConfigValue(\"forms.validation.fullName.maxLength\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r3.invalid && _r3.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email)(\"status\", _r5.dirty ? _r5.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.email.required\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r5.invalid && _r5.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r5.invalid && _r5.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password)(\"status\", _r7.dirty ? _r7.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.password.required\"))(\"minlength\", ctx.getConfigValue(\"forms.validation.password.minLength\"))(\"maxlength\", ctx.getConfigValue(\"forms.validation.password.maxLength\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r7.invalid && _r7.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r7.invalid && _r7.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.confirmPassword)(\"status\", _r9.dirty ? _r9.invalid || _r7.value != _r9.value ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.password.required\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r9.invalid && _r9.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r9.invalid && _r9.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.getConfigValue(\"forms.register.terms\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"btn-pulse\", ctx.submitted);\n      i0.ɵɵproperty(\"disabled\", ctx.submitted || !_r2.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.socialLinks && ctx.socialLinks.length > 0);\n    }\n  },\n  directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i3.NbInputDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i5.RequiredValidator, i5.MinLengthValidator, i5.MaxLengthValidator, i5.PatternValidator, i3.NbButtonComponent, i2.RouterLinkWithHref, i3.NbAlertComponent, i4.NgForOf, i3.NbCheckboxComponent, i3.NbIconComponent],\n  styles: [\"[_nghost-%COMP%]   .title[_ngcontent-%COMP%]{margin-bottom:2rem}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbRegisterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-register',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Register</h1>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"register()\\\" #form=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-name\\\">Full name:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.fullName\\\"\\n           #fullName=\\\"ngModel\\\"\\n           id=\\\"input-name\\\"\\n           name=\\\"fullName\\\"\\n           placeholder=\\\"Full name\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"fullName.dirty ? (fullName.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.fullName.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.fullName.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.fullName.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"fullName.invalid && fullName.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"fullName.invalid && fullName.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"fullName.errors?.required\\\">\\n        Full name is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"fullName.errors?.minlength || fullName.errors?.maxlength\\\">\\n        Full name should contains\\n        from {{getConfigValue('forms.validation.fullName.minLength')}}\\n        to {{getConfigValue('forms.validation.fullName.maxLength')}}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Email address:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           id=\\\"input-email\\\"\\n           name=\\\"email\\\"\\n           pattern=\\\".+@.+..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-password\\\">Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           name=\\\"password\\\"\\n           placeholder=\\\"Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contain\\n        from {{ getConfigValue('forms.validation.password.minLength') }}\\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-re-password\\\">Repeat password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.confirmPassword\\\"\\n           #rePass=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-re-password\\\"\\n           name=\\\"rePass\\\"\\n           placeholder=\\\"Confirm Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"rePass.dirty ? (rePass.invalid || password.value != rePass.value  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [attr.aria-invalid]=\\\"rePass.invalid && rePass.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"rePass.invalid && rePass.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"rePass.errors?.required\\\">\\n        Password confirmation is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.value != rePass.value && !rePass.errors?.required\\\">\\n        Password does not match the confirm password.\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group accept-group\\\" *ngIf=\\\"getConfigValue('forms.register.terms')\\\">\\n    <nb-checkbox name=\\\"terms\\\" [(ngModel)]=\\\"user.terms\\\" [required]=\\\"getConfigValue('forms.register.terms')\\\">\\n      Agree to <a href=\\\"#\\\" target=\\\"_blank\\\"><strong>Terms & Conditions</strong></a>\\n    </nb-checkbox>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !form.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Register\\n  </button>\\n</form>\\n\\n<section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\n  or enter with:\\n  <div class=\\\"socials\\\">\\n    <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n      <a *ngIf=\\\"socialLink.link\\\"\\n         [routerLink]=\\\"socialLink.link\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n      <a *ngIf=\\\"socialLink.url\\\"\\n         [attr.href]=\\\"socialLink.url\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n\\n<section class=\\\"another-action\\\" aria-label=\\\"Sign in\\\">\\n  Already have an account? <a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Log in</a>\\n</section>\\n\",\n      styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .title{margin-bottom:2rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NbAuthService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_OPTIONS]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Router\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbLogoutComponent {\n  constructor(service, options = {}, router) {\n    this.service = service;\n    this.options = options;\n    this.router = router;\n    this.redirectDelay = 0;\n    this.strategy = '';\n    this.redirectDelay = this.getConfigValue('forms.logout.redirectDelay');\n    this.strategy = this.getConfigValue('forms.logout.strategy');\n  }\n\n  ngOnInit() {\n    this.logout(this.strategy);\n  }\n\n  logout(strategy) {\n    this.service.logout(strategy).subscribe(result => {\n      const redirect = result.getRedirect();\n\n      if (redirect) {\n        setTimeout(() => {\n          return this.router.navigateByUrl(redirect);\n        }, this.redirectDelay);\n      }\n    });\n  }\n\n  getConfigValue(key) {\n    return getDeepFromObject(this.options, key, null);\n  }\n\n}\n\nNbLogoutComponent.ɵfac = function NbLogoutComponent_Factory(t) {\n  return new (t || NbLogoutComponent)(i0.ɵɵdirectiveInject(NbAuthService), i0.ɵɵdirectiveInject(NB_AUTH_OPTIONS), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nNbLogoutComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbLogoutComponent,\n  selectors: [[\"nb-logout\"]],\n  decls: 2,\n  vars: 0,\n  template: function NbLogoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtext(1, \"Logging out, please wait...\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbLogoutComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-logout',\n      template: \"<div>Logging out, please wait...</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: NbAuthService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_OPTIONS]\n      }]\n    }, {\n      type: i2.Router\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbRequestPasswordComponent {\n  constructor(service, options = {}, cd, router) {\n    this.service = service;\n    this.options = options;\n    this.cd = cd;\n    this.router = router;\n    this.redirectDelay = 0;\n    this.showMessages = {};\n    this.strategy = '';\n    this.submitted = false;\n    this.errors = [];\n    this.messages = [];\n    this.user = {};\n    this.redirectDelay = this.getConfigValue('forms.requestPassword.redirectDelay');\n    this.showMessages = this.getConfigValue('forms.requestPassword.showMessages');\n    this.strategy = this.getConfigValue('forms.requestPassword.strategy');\n  }\n\n  requestPass() {\n    this.errors = this.messages = [];\n    this.submitted = true;\n    this.service.requestPassword(this.strategy, this.user).subscribe(result => {\n      this.submitted = false;\n\n      if (result.isSuccess()) {\n        this.messages = result.getMessages();\n      } else {\n        this.errors = result.getErrors();\n      }\n\n      const redirect = result.getRedirect();\n\n      if (redirect) {\n        setTimeout(() => {\n          return this.router.navigateByUrl(redirect);\n        }, this.redirectDelay);\n      }\n\n      this.cd.detectChanges();\n    });\n  }\n\n  getConfigValue(key) {\n    return getDeepFromObject(this.options, key, null);\n  }\n\n}\n\nNbRequestPasswordComponent.ɵfac = function NbRequestPasswordComponent_Factory(t) {\n  return new (t || NbRequestPasswordComponent)(i0.ɵɵdirectiveInject(NbAuthService), i0.ɵɵdirectiveInject(NB_AUTH_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nNbRequestPasswordComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbRequestPasswordComponent,\n  selectors: [[\"nb-request-password-page\"]],\n  decls: 23,\n  vars: 10,\n  consts: [[\"id\", \"title\", 1, \"title\"], [1, \"sub-title\"], [\"outline\", \"danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"outline\", \"success\", \"role\", \"alert\", 4, \"ngIf\"], [\"aria-labelledby\", \"title\", 3, \"ngSubmit\"], [\"requestPassForm\", \"ngForm\"], [1, \"form-control-group\"], [\"for\", \"input-email\", 1, \"label\"], [\"nbInput\", \"\", \"id\", \"input-email\", \"name\", \"email\", \"pattern\", \".+@.+\\\\..+\", \"placeholder\", \"Email address\", \"autofocus\", \"\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 3, \"ngModel\", \"status\", \"required\", \"ngModelChange\"], [\"email\", \"ngModel\"], [4, \"ngIf\"], [\"nbButton\", \"\", \"fullWidth\", \"\", \"status\", \"primary\", \"size\", \"large\", 3, \"disabled\"], [\"aria-label\", \"Sign in or sign up\", 1, \"sign-in-or-up\"], [\"routerLink\", \"../login\", 1, \"text-link\"], [\"routerLink\", \"../register\", 1, \"text-link\"], [\"outline\", \"danger\", \"role\", \"alert\"], [1, \"alert-title\"], [1, \"alert-message-list\"], [\"class\", \"alert-message\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert-message\"], [\"outline\", \"success\", \"role\", \"alert\"], [\"class\", \"caption status-danger\", 4, \"ngIf\"], [1, \"caption\", \"status-danger\"]],\n  template: function NbRequestPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Forgot Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\", 1);\n      i0.ɵɵtext(3, \"Enter your email address and we\\u2019ll send a link to reset your password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, NbRequestPasswordComponent_nb_alert_4_Template, 6, 1, \"nb-alert\", 2);\n      i0.ɵɵtemplate(5, NbRequestPasswordComponent_nb_alert_5_Template, 6, 1, \"nb-alert\", 3);\n      i0.ɵɵelementStart(6, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function NbRequestPasswordComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.requestPass();\n      });\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵelementStart(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Enter your email address:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function NbRequestPasswordComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.user.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, NbRequestPasswordComponent_ng_container_13_Template, 3, 2, \"ng-container\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 11);\n      i0.ɵɵtext(15, \" Request password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"section\", 12);\n      i0.ɵɵelementStart(17, \"p\");\n      i0.ɵɵelementStart(18, \"a\", 13);\n      i0.ɵɵtext(19, \"Back to Log In\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"p\");\n      i0.ɵɵelementStart(21, \"a\", 14);\n      i0.ɵɵtext(22, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(7);\n\n      const _r3 = i0.ɵɵreference(12);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.error && (ctx.errors == null ? null : ctx.errors.length) && !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.success && (ctx.messages == null ? null : ctx.messages.length) && !ctx.submitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.email)(\"status\", _r3.dirty ? _r3.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.email.required\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r3.invalid && _r3.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"btn-pulse\", ctx.submitted);\n      i0.ɵɵproperty(\"disabled\", ctx.submitted || !_r2.valid);\n    }\n  },\n  directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i3.NbInputDirective, i5.DefaultValueAccessor, i5.PatternValidator, i5.NgControlStatus, i5.NgModel, i5.RequiredValidator, i3.NbButtonComponent, i2.RouterLinkWithHref, i3.NbAlertComponent, i4.NgForOf],\n  styles: [\"[_nghost-%COMP%]   .form-group[_ngcontent-%COMP%]:last-of-type{margin-bottom:3rem}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbRequestPasswordComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-request-password-page',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Forgot Password</h1>\\n<p class=\\\"sub-title\\\">Enter your email address and we\\u2019ll send a link to reset your password</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"requestPass()\\\" #requestPassForm=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Enter your email address:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           id=\\\"input-email\\\"\\n           name=\\\"email\\\"\\n           pattern=\\\".+@.+\\\\..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !requestPassForm.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Request password\\n  </button>\\n</form>\\n\\n<section class=\\\"sign-in-or-up\\\" aria-label=\\\"Sign in or sign up\\\">\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Back to Log In</a></p>\\n  <p><a routerLink=\\\"../register\\\" class=\\\"text-link\\\">Register</a></p>\\n</section>\\n\",\n      styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .form-group:last-of-type{margin-bottom:3rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NbAuthService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_OPTIONS]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Router\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nclass NbResetPasswordComponent {\n  constructor(service, options = {}, cd, router) {\n    this.service = service;\n    this.options = options;\n    this.cd = cd;\n    this.router = router;\n    this.redirectDelay = 0;\n    this.showMessages = {};\n    this.strategy = '';\n    this.submitted = false;\n    this.errors = [];\n    this.messages = [];\n    this.user = {};\n    this.redirectDelay = this.getConfigValue('forms.resetPassword.redirectDelay');\n    this.showMessages = this.getConfigValue('forms.resetPassword.showMessages');\n    this.strategy = this.getConfigValue('forms.resetPassword.strategy');\n  }\n\n  resetPass() {\n    this.errors = this.messages = [];\n    this.submitted = true;\n    this.service.resetPassword(this.strategy, this.user).subscribe(result => {\n      this.submitted = false;\n\n      if (result.isSuccess()) {\n        this.messages = result.getMessages();\n      } else {\n        this.errors = result.getErrors();\n      }\n\n      const redirect = result.getRedirect();\n\n      if (redirect) {\n        setTimeout(() => {\n          return this.router.navigateByUrl(redirect);\n        }, this.redirectDelay);\n      }\n\n      this.cd.detectChanges();\n    });\n  }\n\n  getConfigValue(key) {\n    return getDeepFromObject(this.options, key, null);\n  }\n\n}\n\nNbResetPasswordComponent.ɵfac = function NbResetPasswordComponent_Factory(t) {\n  return new (t || NbResetPasswordComponent)(i0.ɵɵdirectiveInject(NbAuthService), i0.ɵɵdirectiveInject(NB_AUTH_OPTIONS), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nNbResetPasswordComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NbResetPasswordComponent,\n  selectors: [[\"nb-reset-password-page\"]],\n  decls: 29,\n  vars: 17,\n  consts: [[\"id\", \"title\", 1, \"title\"], [1, \"sub-title\"], [\"outline\", \"danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"outline\", \"success\", \"role\", \"alert\", 4, \"ngIf\"], [\"aria-labelledby\", \"title\", 3, \"ngSubmit\"], [\"resetPassForm\", \"ngForm\"], [1, \"form-control-group\"], [\"for\", \"input-password\", 1, \"label\"], [\"nbInput\", \"\", \"type\", \"password\", \"id\", \"input-password\", \"name\", \"password\", \"placeholder\", \"New Password\", \"autofocus\", \"\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 1, \"first\", 3, \"ngModel\", \"status\", \"required\", \"minlength\", \"maxlength\", \"ngModelChange\"], [\"password\", \"ngModel\"], [4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"input-re-password\", 1, \"label\"], [\"nbInput\", \"\", \"id\", \"input-re-password\", \"name\", \"rePass\", \"type\", \"password\", \"placeholder\", \"Confirm Password\", \"fullWidth\", \"\", \"fieldSize\", \"large\", 1, \"last\", 3, \"ngModel\", \"status\", \"required\", \"ngModelChange\"], [\"rePass\", \"ngModel\"], [\"nbButton\", \"\", \"status\", \"primary\", \"fullWidth\", \"\", \"size\", \"large\", 3, \"disabled\"], [\"aria-label\", \"Sign in or sign up\", 1, \"sign-in-or-up\"], [\"routerLink\", \"../login\", 1, \"text-link\"], [\"routerLink\", \"../register\", 1, \"text-link\"], [\"outline\", \"danger\", \"role\", \"alert\"], [1, \"alert-title\"], [1, \"alert-message-list\"], [\"class\", \"alert-message\", 4, \"ngFor\", \"ngForOf\"], [1, \"alert-message\"], [\"outline\", \"success\", \"role\", \"alert\"], [\"class\", \"caption status-danger\", 4, \"ngIf\"], [1, \"caption\", \"status-danger\"]],\n  template: function NbResetPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Change password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\", 1);\n      i0.ɵɵtext(3, \"Please set a new password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, NbResetPasswordComponent_nb_alert_4_Template, 6, 1, \"nb-alert\", 2);\n      i0.ɵɵtemplate(5, NbResetPasswordComponent_nb_alert_5_Template, 6, 1, \"nb-alert\", 3);\n      i0.ɵɵelementStart(6, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function NbResetPasswordComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.resetPass();\n      });\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵelementStart(9, \"label\", 7);\n      i0.ɵɵtext(10, \"New Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 8, 9);\n      i0.ɵɵlistener(\"ngModelChange\", function NbResetPasswordComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.user.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(13, NbResetPasswordComponent_ng_container_13_Template, 3, 2, \"ng-container\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 11);\n      i0.ɵɵelementStart(15, \"label\", 12);\n      i0.ɵɵtext(16, \"Confirm Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 13, 14);\n      i0.ɵɵlistener(\"ngModelChange\", function NbResetPasswordComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.user.confirmPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, NbResetPasswordComponent_ng_container_19_Template, 3, 2, \"ng-container\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 15);\n      i0.ɵɵtext(21, \" Change password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"section\", 16);\n      i0.ɵɵelementStart(23, \"p\");\n      i0.ɵɵelementStart(24, \"a\", 17);\n      i0.ɵɵtext(25, \"Back to Log In\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"p\");\n      i0.ɵɵelementStart(27, \"a\", 18);\n      i0.ɵɵtext(28, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(7);\n\n      const _r3 = i0.ɵɵreference(12);\n\n      const _r5 = i0.ɵɵreference(18);\n\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.error && (ctx.errors == null ? null : ctx.errors.length) && !ctx.submitted);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showMessages.success && (ctx.messages == null ? null : ctx.messages.length) && !ctx.submitted);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password)(\"status\", _r3.dirty ? _r3.invalid ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.password.required\"))(\"minlength\", ctx.getConfigValue(\"forms.validation.password.minLength\"))(\"maxlength\", ctx.getConfigValue(\"forms.validation.password.maxLength\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r3.invalid && _r3.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.confirmPassword)(\"status\", _r5.touched ? _r5.invalid || _r3.value != _r5.value ? \"danger\" : \"success\" : \"basic\")(\"required\", ctx.getConfigValue(\"forms.validation.password.required\"));\n      i0.ɵɵattribute(\"aria-invalid\", _r5.invalid && _r5.touched ? true : null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r5.touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"btn-pulse\", ctx.submitted);\n      i0.ɵɵproperty(\"disabled\", ctx.submitted || !_r2.valid);\n    }\n  },\n  directives: [i4.NgIf, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i3.NbInputDirective, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i5.RequiredValidator, i5.MinLengthValidator, i5.MaxLengthValidator, i3.NbButtonComponent, i2.RouterLinkWithHref, i3.NbAlertComponent, i4.NgForOf],\n  styles: [_c1],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbResetPasswordComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nb-reset-password-page',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Change password</h1>\\n<p class=\\\"sub-title\\\">Please set a new password</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"resetPass()\\\" #resetPassForm=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-password\\\">New Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           name=\\\"password\\\"\\n           class=\\\"first\\\"\\n           placeholder=\\\"New Password\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contains\\n        from {{getConfigValue('forms.validation.password.minLength')}}\\n        to {{getConfigValue('forms.validation.password.maxLength')}}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-re-password\\\">Confirm Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.confirmPassword\\\"\\n           #rePass=\\\"ngModel\\\"\\n           id=\\\"input-re-password\\\"\\n           name=\\\"rePass\\\"\\n           type=\\\"password\\\"\\n           class=\\\"last\\\"\\n           placeholder=\\\"Confirm Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"rePass.touched\\n               ? (rePass.invalid || password.value != rePass.value ? 'danger' : 'success')\\n               : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [attr.aria-invalid]=\\\"rePass.invalid && rePass.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"rePass.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"rePass.invalid && rePass.errors?.required\\\">\\n        Password confirmation is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.value != rePass.value && !rePass.errors?.required\\\">\\n        Password does not match the confirm password.\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <button nbButton\\n          status=\\\"primary\\\"\\n          fullWidth\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !resetPassForm.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Change password\\n  </button>\\n</form>\\n\\n<section class=\\\"sign-in-or-up\\\" aria-label=\\\"Sign in or sign up\\\">\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Back to Log In</a></p>\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../register\\\">Register</a></p>\\n</section>\\n\",\n      styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .form-group:last-of-type{margin-bottom:3rem}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: NbAuthService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_OPTIONS]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i2.Router\n    }];\n  }, null);\n})();\n\nfunction nbStrategiesFactory(options, injector) {\n  const strategies = [];\n  options.strategies.forEach(([strategyClass, strategyOptions]) => {\n    const strategy = injector.get(strategyClass);\n    strategy.setOptions(strategyOptions);\n    strategies.push(strategy);\n  });\n  return strategies;\n}\n\nfunction nbTokensFactory(strategies) {\n  const tokens = [];\n  strategies.forEach(strategy => {\n    tokens.push(strategy.getOption('token.class'));\n  });\n  return tokens;\n}\n\nfunction nbOptionsFactory(options) {\n  return deepExtend(defaultAuthOptions, options);\n}\n\nfunction nbNoOpInterceptorFilter(req) {\n  return true;\n}\n\nclass NbAuthModule {\n  static forRoot(nbAuthOptions) {\n    return {\n      ngModule: NbAuthModule,\n      providers: [{\n        provide: NB_AUTH_USER_OPTIONS,\n        useValue: nbAuthOptions\n      }, {\n        provide: NB_AUTH_OPTIONS,\n        useFactory: nbOptionsFactory,\n        deps: [NB_AUTH_USER_OPTIONS]\n      }, {\n        provide: NB_AUTH_STRATEGIES,\n        useFactory: nbStrategiesFactory,\n        deps: [NB_AUTH_OPTIONS, Injector]\n      }, {\n        provide: NB_AUTH_TOKENS,\n        useFactory: nbTokensFactory,\n        deps: [NB_AUTH_STRATEGIES]\n      }, {\n        provide: NB_AUTH_FALLBACK_TOKEN,\n        useValue: NbAuthSimpleToken\n      }, {\n        provide: NB_AUTH_INTERCEPTOR_HEADER,\n        useValue: 'Authorization'\n      }, {\n        provide: NB_AUTH_TOKEN_INTERCEPTOR_FILTER,\n        useValue: nbNoOpInterceptorFilter\n      }, {\n        provide: NbTokenStorage,\n        useClass: NbTokenLocalStorage\n      }, NbAuthTokenParceler, NbAuthService, NbTokenService, NbDummyAuthStrategy, NbPasswordAuthStrategy, NbOAuth2AuthStrategy]\n    };\n  }\n\n}\n\nNbAuthModule.ɵfac = function NbAuthModule_Factory(t) {\n  return new (t || NbAuthModule)();\n};\n\nNbAuthModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NbAuthModule\n});\nNbAuthModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, NbLayoutModule, NbCardModule, NbCheckboxModule, NbAlertModule, NbInputModule, NbButtonModule, RouterModule, FormsModule, NbIconModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NbLayoutModule, NbCardModule, NbCheckboxModule, NbAlertModule, NbInputModule, NbButtonModule, RouterModule, FormsModule, NbIconModule],\n      declarations: [NbAuthComponent, NbAuthBlockComponent, NbLoginComponent, NbRegisterComponent, NbRequestPasswordComponent, NbResetPasswordComponent, NbLogoutComponent],\n      exports: [NbAuthComponent, NbAuthBlockComponent, NbLoginComponent, NbRegisterComponent, NbRequestPasswordComponent, NbResetPasswordComponent, NbLogoutComponent]\n    }]\n  }], null, null);\n})();\n\nconst routes = [{\n  path: 'auth',\n  component: NbAuthComponent,\n  children: [{\n    path: '',\n    component: NbLoginComponent\n  }, {\n    path: 'login',\n    component: NbLoginComponent\n  }, {\n    path: 'register',\n    component: NbRegisterComponent\n  }, {\n    path: 'logout',\n    component: NbLogoutComponent\n  }, {\n    path: 'request-password',\n    component: NbRequestPasswordComponent\n  }, {\n    path: 'reset-password',\n    component: NbResetPasswordComponent\n  }]\n}];\n\nclass NbAuthJWTInterceptor {\n  constructor(injector, filter) {\n    this.injector = injector;\n    this.filter = filter;\n  }\n\n  intercept(req, next) {\n    // do not intercept request whose urls are filtered by the injected filter\n    if (!this.filter(req)) {\n      return this.authService.isAuthenticatedOrRefresh().pipe(switchMap(authenticated => {\n        if (authenticated) {\n          return this.authService.getToken().pipe(switchMap(token => {\n            const JWT = `Bearer ${token.getValue()}`;\n            req = req.clone({\n              setHeaders: {\n                Authorization: JWT\n              }\n            });\n            return next.handle(req);\n          }));\n        } else {\n          // Request is sent to server without authentication so that the client code\n          // receives the 401/403 error and can act as desired ('session expired', redirect to login, aso)\n          return next.handle(req);\n        }\n      }));\n    } else {\n      return next.handle(req);\n    }\n  }\n\n  get authService() {\n    return this.injector.get(NbAuthService);\n  }\n\n}\n\nNbAuthJWTInterceptor.ɵfac = function NbAuthJWTInterceptor_Factory(t) {\n  return new (t || NbAuthJWTInterceptor)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(NB_AUTH_TOKEN_INTERCEPTOR_FILTER));\n};\n\nNbAuthJWTInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbAuthJWTInterceptor,\n  factory: NbAuthJWTInterceptor.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthJWTInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_TOKEN_INTERCEPTOR_FILTER]\n      }]\n    }];\n  }, null);\n})();\n\nclass NbAuthSimpleInterceptor {\n  constructor(injector, headerName = 'Authorization') {\n    this.injector = injector;\n    this.headerName = headerName;\n  }\n\n  intercept(req, next) {\n    return this.authService.getToken().pipe(switchMap(token => {\n      if (token && token.getValue()) {\n        req = req.clone({\n          setHeaders: {\n            [this.headerName]: token.getValue()\n          }\n        });\n      }\n\n      return next.handle(req);\n    }));\n  }\n\n  get authService() {\n    return this.injector.get(NbAuthService);\n  }\n\n}\n\nNbAuthSimpleInterceptor.ɵfac = function NbAuthSimpleInterceptor_Factory(t) {\n  return new (t || NbAuthSimpleInterceptor)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(NB_AUTH_INTERCEPTOR_HEADER));\n};\n\nNbAuthSimpleInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NbAuthSimpleInterceptor,\n  factory: NbAuthSimpleInterceptor.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NbAuthSimpleInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NB_AUTH_INTERCEPTOR_HEADER]\n      }]\n    }];\n  }, null);\n})();\n\nclass NbUser {\n  constructor(id, email, password, rememberMe, terms, confirmPassword, fullName) {\n    this.id = id;\n    this.email = email;\n    this.password = password;\n    this.rememberMe = rememberMe;\n    this.terms = terms;\n    this.confirmPassword = confirmPassword;\n    this.fullName = fullName;\n  }\n\n}\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NB_AUTH_FALLBACK_TOKEN, NB_AUTH_INTERCEPTOR_HEADER, NB_AUTH_OPTIONS, NB_AUTH_STRATEGIES, NB_AUTH_TOKENS, NB_AUTH_TOKEN_INTERCEPTOR_FILTER, NB_AUTH_USER_OPTIONS, NbAuthBlockComponent, NbAuthComponent, NbAuthEmptyTokenError, NbAuthIllegalJWTTokenError, NbAuthIllegalTokenError, NbAuthJWTInterceptor, NbAuthJWTToken, NbAuthModule, NbAuthOAuth2JWTToken, NbAuthOAuth2Token, NbAuthResult, NbAuthService, NbAuthSimpleInterceptor, NbAuthSimpleToken, NbAuthStrategy, NbAuthStrategyOptions, NbAuthToken, NbAuthTokenNotFoundError, NbAuthTokenParceler, NbDummyAuthStrategy, NbDummyAuthStrategyOptions, NbLoginComponent, NbLogoutComponent, NbOAuth2AuthStrategy, NbOAuth2AuthStrategyOptions, NbOAuth2ClientAuthMethod, NbOAuth2GrantType, NbOAuth2ResponseType, NbPasswordAuthStrategy, NbPasswordAuthStrategyOptions, NbRegisterComponent, NbRequestPasswordComponent, NbResetPasswordComponent, NbTokenLocalStorage, NbTokenService, NbTokenStorage, NbUser, auth2StrategyOptions, b64DecodeUnicode, b64decode, decodeJwtPayload, deepExtend, defaultAuthOptions, dummyStrategyOptions, getDeepFromObject, nbAuthCreateToken, nbNoOpInterceptorFilter, nbOptionsFactory, nbStrategiesFactory, nbTokensFactory, passwordStrategyOptions, routes, urlBase64Decode };","map":{"version":3,"sources":["F:/Mockup3/FontEnd/mockup1_team03_frontend/mockup1_team03_frontend/node_modules/@nebular/auth/fesm2020/nebular-auth.mjs"],"names":["i0","InjectionToken","Injectable","Inject","Component","ChangeDetectionStrategy","Injector","NgModule","i4","CommonModule","i2","RouterModule","i5","FormsModule","i3","NB_WINDOW","NbLayoutModule","NbCardModule","NbCheckboxModule","NbAlertModule","NbInputModule","NbButtonModule","NbIconModule","BehaviorSubject","of","Subject","filter","share","map","switchMap","delay","catchError","takeUntil","i1","HttpResponse","HttpHeaders","HttpErrorResponse","socialLinks","defaultAuthOptions","strategies","forms","login","redirectDelay","strategy","rememberMe","showMessages","success","error","register","terms","requestPassword","resetPassword","logout","validation","password","required","minLength","maxLength","email","fullName","NB_AUTH_OPTIONS","NB_AUTH_USER_OPTIONS","NB_AUTH_STRATEGIES","NB_AUTH_TOKENS","NB_AUTH_INTERCEPTOR_HEADER","NB_AUTH_TOKEN_INTERCEPTOR_FILTER","deepExtend","objects","arguments","length","target","args","Array","prototype","slice","call","val","src","forEach","obj","isArray","Object","keys","key","deepCloneArray","isSpecificValue","cloneSpecificValue","Date","RegExp","getTime","Error","arr","clone","item","index","getDeepFromObject","object","name","defaultValue","split","level","k","undefined","urlBase64Decode","str","output","replace","b64DecodeUnicode","b64decode","chars","String","bc","bs","buffer","idx","charAt","fromCharCode","indexOf","decodeURIComponent","c","charCodeAt","toString","join","NbAuthToken","constructor","payload","getName","NAME","getPayload","NbAuthTokenNotFoundError","message","setPrototypeOf","new","NbAuthIllegalTokenError","NbAuthEmptyTokenError","NbAuthIllegalJWTTokenError","nbAuthCreateToken","tokenClass","token","ownerStrategyName","createdAt","decodeJwtPayload","parts","decoded","e","JSON","parse","NbAuthSimpleToken","parsePayload","err","prepareCreatedAt","date","getCreatedAt","getValue","getOwnerStrategyName","isValid","NbAuthJWTToken","iat","Number","getTokenExpDate","hasOwnProperty","setUTCSeconds","exp","prepareOAuth2Token","data","NbAuthOAuth2Token","access_token","getRefreshToken","refresh_token","setRefreshToken","refreshToken","getType","token_type","expires_in","stringify","NbAuthOAuth2JWTToken","parseAccessTokenPayload","accessToken","accessTokenPayload","getAccessTokenPayload","NB_AUTH_FALLBACK_TOKEN","NbAuthTokenParceler","fallbackClass","tokenClasses","wrap","value","unwrap","tokenValue","tokenOwnerStrategyName","tokenCreatedAt","tokenPack","parseTokenPack","getClassByName","find","ɵfac","ɵprov","type","decorators","NbTokenStorage","NbTokenLocalStorage","parceler","get","raw","localStorage","getItem","set","setItem","clear","removeItem","NbTokenService","tokenStorage","token$","publishStoredToken","tokenChange","pipe","next","NbAuthService","tokenService","getToken","isAuthenticated","isAuthenticatedOrRefresh","res","isSuccess","onTokenChange","onAuthenticationChange","authenticate","strategyName","getStrategy","result","processResultToken","found","TypeError","NbAuthStrategy","setOptions","options","defaultOptions","getOption","createToken","failWhenInvalidToken","createFailResponse","body","status","createSuccessResponse","getActionEndpoint","action","actionEndpoint","baseEndpoint","getHeaders","customHeaders","headers","entries","append","NbAuthResult","response","redirect","errors","messages","concat","getResponse","getRedirect","getErrors","getMessages","isFailure","NbAuthStrategyOptions","NbDummyAuthStrategyOptions","class","alwaysFail","dummyStrategyOptions","NbDummyAuthStrategy","setup","createDummyResult","NbOAuth2ResponseType","NbOAuth2GrantType","NbOAuth2ClientAuthMethod","NbOAuth2AuthStrategyOptions","clientId","clientSecret","clientAuthMethod","NONE","failure","defaultErrors","defaultMessages","authorize","endpoint","responseType","CODE","requireValidToken","grantType","AUTHORIZATION_CODE","refresh","REFRESH_TOKEN","auth2StrategyOptions","NbOAuth2AuthStrategy","http","route","window","redirectResultHandlers","snapshot","queryParams","params","code","requestToken","TOKEN","module","fragment","parseHashAsQueryParams","push","redirectResults","PASSWORD","passwordToken","isRedirectResult","authorizeRedirect","getAuthorizationResult","redirectResultHandler","url","post","buildRefreshRequestData","createRefreshedToken","handleResponseError","username","buildPasswordRequestData","location","href","buildRedirectUrl","buildCodeRequestData","grant_type","redirect_uri","client_id","urlEncodeParameters","cleanParams","addCredentialsToParams","scope","buildAuthHeader","BASIC","Authorization","btoa","authHeaders","headerKey","headerValue","getAll","REQUEST_BODY","client_secret","error_description","response_type","state","query","hash","reduce","acc","part","encodeURIComponent","existingToken","refreshedToken","HttpClient","ActivatedRoute","NbPasswordAuthStrategyOptions","method","requestPass","resetPass","resetPasswordTokenKey","getter","passwordStrategyOptions","NbPasswordAuthStrategy","request","observe","tokenKey","NbAuthBlockComponent","ɵcmp","selector","template","styles","NbAuthComponent","auth","destroy$","authenticated","subscription","subscribe","back","ngOnDestroy","complete","Location","NbLayoutComponent","NbLayoutColumnComponent","NbCardComponent","NbCardHeaderComponent","NbIconComponent","NbCardBodyComponent","RouterOutlet","NbLoginComponent","service","cd","router","user","submitted","getConfigValue","setTimeout","navigateByUrl","detectChanges","ChangeDetectorRef","Router","NgIf","ɵNgNoValidate","NgControlStatusGroup","NgForm","NbInputDirective","DefaultValueAccessor","PatternValidator","NgControlStatus","NgModel","RequiredValidator","RouterLinkWithHref","MinLengthValidator","MaxLengthValidator","NbButtonComponent","NbAlertComponent","NgForOf","NbCheckboxComponent","changeDetection","OnPush","NbRegisterComponent","NbLogoutComponent","ngOnInit","NbRequestPasswordComponent","NbResetPasswordComponent","nbStrategiesFactory","injector","strategyClass","strategyOptions","nbTokensFactory","tokens","nbOptionsFactory","nbNoOpInterceptorFilter","req","NbAuthModule","forRoot","nbAuthOptions","ngModule","providers","provide","useValue","useFactory","deps","useClass","ɵmod","ɵinj","imports","declarations","exports","routes","path","component","children","NbAuthJWTInterceptor","intercept","authService","JWT","setHeaders","handle","NbAuthSimpleInterceptor","headerName","NbUser","id","confirmPassword"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,MAArC,EAA6CC,SAA7C,EAAwDC,uBAAxD,EAAiFC,QAAjF,EAA2FC,QAA3F,QAA2G,eAA3G;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,YAApC,EAAkDC,gBAAlD,EAAoEC,aAApE,EAAmFC,aAAnF,EAAkGC,cAAlG,EAAkHC,YAAlH,QAAsI,gBAAtI;AACA,SAASC,eAAT,EAA0BC,EAA1B,EAA8BC,OAA9B,QAA6C,MAA7C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6BC,SAA7B,EAAwCC,KAAxC,EAA+CC,UAA/C,EAA2DC,SAA3D,QAA4E,gBAA5E;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,iBAApC,QAA6D,sBAA7D;;;;;AAskBsGpC,IAAAA,EAu1C0W,4B;AAv1C1WA,IAAAA,EAu1Cqa,U;AAv1CraA,IAAAA,EAu1Cgb,e;;;;;AAv1ChbA,IAAAA,EAu1Cqa,a;AAv1CraA,IAAAA,EAu1Cqa,6B;;;;;;AAv1CraA,IAAAA,EAu1CsK,kC;AAv1CtKA,IAAAA,EAu1CmR,2B;AAv1CnRA,IAAAA,EAu1C4S,uB;AAv1C5SA,IAAAA,EAu1C+S,sB;AAv1C/SA,IAAAA,EAu1CuT,e;AAv1CvTA,IAAAA,EAu1C2T,e;AAv1C3TA,IAAAA,EAu1CmU,4B;AAv1CnUA,IAAAA,EAu1C0W,yE;AAv1C1WA,IAAAA,EAu1Cyb,e;AAv1CzbA,IAAAA,EAu1Cgc,e;;;;mBAv1ChcA,E;AAAAA,IAAAA,EAu1CiY,a;AAv1CjYA,IAAAA,EAu1CiY,qC;;;;;;AAv1CjYA,IAAAA,EAu1CupB,4B;AAv1CvpBA,IAAAA,EAu1CstB,U;AAv1CttBA,IAAAA,EAu1CmuB,e;;;;;AAv1CnuBA,IAAAA,EAu1CstB,a;AAv1CttBA,IAAAA,EAu1CstB,+B;;;;;;AAv1CttBA,IAAAA,EAu1C+c,kC;AAv1C/cA,IAAAA,EAu1CikB,2B;AAv1CjkBA,IAAAA,EAu1C0lB,uB;AAv1C1lBA,IAAAA,EAu1C6lB,qB;AAv1C7lBA,IAAAA,EAu1ComB,e;AAv1CpmBA,IAAAA,EAu1CwmB,e;AAv1CxmBA,IAAAA,EAu1CgnB,4B;AAv1ChnBA,IAAAA,EAu1CupB,yE;AAv1CvpBA,IAAAA,EAu1C4uB,e;AAv1C5uBA,IAAAA,EAu1CmvB,e;;;;mBAv1CnvBA,E;AAAAA,IAAAA,EAu1CgrB,a;AAv1ChrBA,IAAAA,EAu1CgrB,uC;;;;;;AAv1ChrBA,IAAAA,EAu1CmiD,2B;AAv1CniDA,IAAAA,EAu1CinD,kC;AAv1CjnDA,IAAAA,EAu1C2oD,e;;;;;;AAv1C3oDA,IAAAA,EAu1CupD,2B;AAv1CvpDA,IAAAA,EAu1CouD,6C;AAv1CpuDA,IAAAA,EAu1CywD,e;;;;;;AAv1CzwDA,IAAAA,EAu1Co+C,2B;AAv1Cp+CA,IAAAA,EAu1CmiD,4E;AAv1CniDA,IAAAA,EAu1CupD,4E;AAv1CvpDA,IAAAA,EAu1CmxD,wB;;;;AAv1CnxDA,IAAAA,E;;gBAAAA,E;;AAAAA,IAAAA,EAu1CukD,a;AAv1CvkDA,IAAAA,EAu1CukD,oE;AAv1CvkDA,IAAAA,EAu1C2rD,a;AAv1C3rDA,IAAAA,EAu1C2rD,mE;;;;;;AAv1C3rDA,IAAAA,EAu1Co0F,2B;AAv1Cp0FA,IAAAA,EAu1Cq5F,qC;AAv1Cr5FA,IAAAA,EAu1Ck7F,e;;;;;;AAv1Cl7FA,IAAAA,EAu1C87F,2B;AAv1C97FA,IAAAA,EAu1C8iG,U;AAv1C9iGA,IAAAA,EAu1CmvG,e;;;;oBAv1CnvGA,E;AAAAA,IAAAA,EAu1C8iG,a;AAv1C9iGA,IAAAA,EAu1C8iG,2M;;;;;;AAv1C9iGA,IAAAA,EAu1C8vF,2B;AAv1C9vFA,IAAAA,EAu1Co0F,4E;AAv1Cp0FA,IAAAA,EAu1C87F,4E;AAv1C97FA,IAAAA,EAu1C6vG,wB;;;;AAv1C7vGA,IAAAA,E;;gBAAAA,E;;AAAAA,IAAAA,EAu1Cw2F,a;AAv1Cx2FA,IAAAA,EAu1Cw2F,oE;AAv1Cx2FA,IAAAA,EAu1Ck+F,a;AAv1Cl+FA,IAAAA,EAu1Ck+F,6H;;;;;;iBAv1Cl+FA,E;;AAAAA,IAAAA,EAu1Ci1G,qC;AAv1Cj1GA,IAAAA,EAu1Ck3G;AAv1Cl3GA,MAAAA,EAu1Ck3G;AAAA,sBAv1Cl3GA,EAu1Ck3G;AAAA;AAAA,M;AAv1Cl3GA,IAAAA,EAu1Cu6G,yB;AAv1Cv6GA,IAAAA,EAu1Ck7G,e;;;;mBAv1Cl7GA,E;AAAAA,IAAAA,EAu1Ck3G,8C;;;;;;AAv1Cl3GA,IAAAA,EAu1CsmI,4B;;;;2BAv1CtmIA,E;AAAAA,IAAAA,EAu1CqpI,wC;;;;;;AAv1CrpIA,IAAAA,EAu1CwtI,U;;;;2BAv1CxtIA,E;AAAAA,IAAAA,EAu1CwtI,wC;;;;;;AAv1CxtIA,IAAAA,EAu1C24H,2B;AAv1C34HA,IAAAA,EAu1CsmI,sG;AAv1CtmIA,IAAAA,EAu1CosI,qHAv1CpsIA,EAu1CosI,wB;AAv1CpsIA,IAAAA,EAu1CowI,e;;;;iBAv1CpwIA,E;;2BAAAA,E;AAAAA,IAAAA,EAu1CsjI,8C;AAv1CtjIA,IAAAA,EAu1Ck7H,8C;AAv1Cl7HA,IAAAA,EAu1C69H,2E;AAv1C79HA,IAAAA,EAu1CgnI,a;AAv1ChnIA,IAAAA,EAu1CgnI,0D;;;;;;AAv1ChnIA,IAAAA,EAu1Cw+I,4B;;;;2BAv1Cx+IA,E;AAAAA,IAAAA,EAu1CuhJ,wC;;;;;;AAv1CvhJA,IAAAA,EAu1C0lJ,U;;;;2BAv1C1lJA,E;AAAAA,IAAAA,EAu1C0lJ,wC;;;;;;AAv1C1lJA,IAAAA,EAu1CgxI,uB;AAv1ChxIA,IAAAA,EAu1Cw+I,sG;AAv1Cx+IA,IAAAA,EAu1CskJ,qHAv1CtkJA,EAu1CskJ,wB;AAv1CtkJA,IAAAA,EAu1CsoJ,e;;;;iBAv1CtoJA,E;;2BAAAA,E;AAAAA,IAAAA,EAu1Cw7I,8C;AAv1Cx7IA,IAAAA,EAu1CszI,yCAv1CtzIA,EAu1CszI,8E;AAv1CtzIA,IAAAA,EAu1Ck/I,a;AAv1Cl/IA,IAAAA,EAu1Ck/I,0D;;;;;;AAv1Cl/IA,IAAAA,EAu1C40H,2B;AAv1C50HA,IAAAA,EAu1C24H,sF;AAv1C34HA,IAAAA,EAu1CgxI,sF;AAv1ChxIA,IAAAA,EAu1CgpJ,wB;;;;;AAv1ChpJA,IAAAA,EAu1C+4H,a;AAv1C/4HA,IAAAA,EAu1C+4H,wC;AAv1C/4HA,IAAAA,EAu1CoxI,a;AAv1CpxIA,IAAAA,EAu1CoxI,uC;;;;;;AAv1CpxIA,IAAAA,EAu1CkrH,iC;AAv1ClrHA,IAAAA,EAu1C6xH,8B;AAv1C7xHA,IAAAA,EAu1C+yH,6B;AAv1C/yHA,IAAAA,EAu1C40H,6F;AAv1C50HA,IAAAA,EAu1CmqJ,e;AAv1CnqJA,IAAAA,EAu1C2qJ,e;;;;mBAv1C3qJA,E;AAAAA,IAAAA,EAu1Ck3H,a;AAv1Cl3HA,IAAAA,EAu1Ck3H,0C;;;;;;AAv1Cl3HA,IAAAA,EAi5C2T,4B;AAj5C3TA,IAAAA,EAi5CsX,U;AAj5CtXA,IAAAA,EAi5CiY,e;;;;;AAj5CjYA,IAAAA,EAi5CsX,a;AAj5CtXA,IAAAA,EAi5CsX,6B;;;;;;AAj5CtXA,IAAAA,EAi5CuH,kC;AAj5CvHA,IAAAA,EAi5CoO,2B;AAj5CpOA,IAAAA,EAi5C6P,uB;AAj5C7PA,IAAAA,EAi5CgQ,sB;AAj5ChQA,IAAAA,EAi5CwQ,e;AAj5CxQA,IAAAA,EAi5C4Q,e;AAj5C5QA,IAAAA,EAi5CoR,4B;AAj5CpRA,IAAAA,EAi5C2T,4E;AAj5C3TA,IAAAA,EAi5C0Y,e;AAj5C1YA,IAAAA,EAi5CiZ,e;;;;mBAj5CjZA,E;AAAAA,IAAAA,EAi5CkV,a;AAj5ClVA,IAAAA,EAi5CkV,qC;;;;;;AAj5ClVA,IAAAA,EAi5CwmB,4B;AAj5CxmBA,IAAAA,EAi5CuqB,U;AAj5CvqBA,IAAAA,EAi5CorB,e;;;;;AAj5CprBA,IAAAA,EAi5CuqB,a;AAj5CvqBA,IAAAA,EAi5CuqB,+B;;;;;;AAj5CvqBA,IAAAA,EAi5Cga,kC;AAj5ChaA,IAAAA,EAi5CkhB,2B;AAj5ClhBA,IAAAA,EAi5C2iB,uB;AAj5C3iBA,IAAAA,EAi5C8iB,qB;AAj5C9iBA,IAAAA,EAi5CqjB,e;AAj5CrjBA,IAAAA,EAi5CyjB,e;AAj5CzjBA,IAAAA,EAi5CikB,4B;AAj5CjkBA,IAAAA,EAi5CwmB,4E;AAj5CxmBA,IAAAA,EAi5C6rB,e;AAj5C7rBA,IAAAA,EAi5CosB,e;;;;mBAj5CpsBA,E;AAAAA,IAAAA,EAi5CioB,a;AAj5CjoBA,IAAAA,EAi5CioB,uC;;;;;;AAj5CjoBA,IAAAA,EAi5C4oD,2B;AAj5C5oDA,IAAAA,EAi5C6tD,sC;AAj5C7tDA,IAAAA,EAi5C2vD,e;;;;;;AAj5C3vDA,IAAAA,EAi5CuwD,2B;AAj5CvwDA,IAAAA,EAi5Cu3D,U;AAj5Cv3DA,IAAAA,EAi5C0jE,e;;;;oBAj5C1jEA,E;AAAAA,IAAAA,EAi5Cu3D,a;AAj5Cv3DA,IAAAA,EAi5Cu3D,6M;;;;;;AAj5Cv3DA,IAAAA,EAi5CukD,2B;AAj5CvkDA,IAAAA,EAi5C4oD,+E;AAj5C5oDA,IAAAA,EAi5CuwD,+E;AAj5CvwDA,IAAAA,EAi5CokE,wB;;;;AAj5CpkEA,IAAAA,E;;gBAAAA,E;;AAAAA,IAAAA,EAi5CgrD,a;AAj5ChrDA,IAAAA,EAi5CgrD,oE;AAj5ChrDA,IAAAA,EAi5C2yD,a;AAj5C3yDA,IAAAA,EAi5C2yD,6H;;;;;;AAj5C3yDA,IAAAA,EAi5C8xF,2B;AAj5C9xFA,IAAAA,EAi5C42F,kC;AAj5C52FA,IAAAA,EAi5Cs4F,e;;;;;;AAj5Ct4FA,IAAAA,EAi5Ck5F,2B;AAj5Cl5FA,IAAAA,EAi5C+9F,6C;AAj5C/9FA,IAAAA,EAi5CogG,e;;;;;;AAj5CpgGA,IAAAA,EAi5C+tF,2B;AAj5C/tFA,IAAAA,EAi5C8xF,+E;AAj5C9xFA,IAAAA,EAi5Ck5F,+E;AAj5Cl5FA,IAAAA,EAi5C8gG,wB;;;;AAj5C9gGA,IAAAA,E;;gBAAAA,E;;AAAAA,IAAAA,EAi5Ck0F,a;AAj5Cl0FA,IAAAA,EAi5Ck0F,oE;AAj5Cl0FA,IAAAA,EAi5Cs7F,a;AAj5Ct7FA,IAAAA,EAi5Cs7F,mE;;;;;;AAj5Ct7FA,IAAAA,EAi5Cm6H,2B;AAj5Cn6HA,IAAAA,EAi5Co/H,qC;AAj5Cp/HA,IAAAA,EAi5CihI,e;;;;;;AAj5CjhIA,IAAAA,EAi5C6hI,2B;AAj5C7hIA,IAAAA,EAi5C6oI,U;AAj5C7oIA,IAAAA,EAi5Ck1I,e;;;;oBAj5Cl1IA,E;AAAAA,IAAAA,EAi5C6oI,a;AAj5C7oIA,IAAAA,EAi5C6oI,2M;;;;;;AAj5C7oIA,IAAAA,EAi5C81H,2B;AAj5C91HA,IAAAA,EAi5Cm6H,+E;AAj5Cn6HA,IAAAA,EAi5C6hI,+E;AAj5C7hIA,IAAAA,EAi5C41I,wB;;;;AAj5C51IA,IAAAA,E;;gBAAAA,E;;AAAAA,IAAAA,EAi5Cu8H,a;AAj5Cv8HA,IAAAA,EAi5Cu8H,oE;AAj5Cv8HA,IAAAA,EAi5CikI,a;AAj5CjkIA,IAAAA,EAi5CikI,6H;;;;;;AAj5CjkIA,IAAAA,EAi5C2nK,2B;AAj5C3nKA,IAAAA,EAi5C0sK,kD;AAj5C1sKA,IAAAA,EAi5CovK,e;;;;;;AAj5CpvKA,IAAAA,EAi5CgwK,2B;AAj5ChwKA,IAAAA,EAi5Ck3K,6D;AAj5Cl3KA,IAAAA,EAi5Cu6K,e;;;;;;AAj5Cv6KA,IAAAA,EAi5C0jK,2B;AAj5C1jKA,IAAAA,EAi5C2nK,+E;AAj5C3nKA,IAAAA,EAi5CgwK,+E;AAj5ChwKA,IAAAA,EAi5Ci7K,wB;;;;AAj5Cj7KA,IAAAA,E;;gBAAAA,E;;gBAAAA,E;;AAAAA,IAAAA,EAi5C+pK,a;AAj5C/pKA,IAAAA,EAi5C+pK,oE;AAj5C/pKA,IAAAA,EAi5CoyK,a;AAj5CpyKA,IAAAA,EAi5CoyK,iG;;;;;;iBAj5CpyKA,E;;AAAAA,IAAAA,EAi5Cg9K,6B;AAj5Ch9KA,IAAAA,EAi5CsjL,qC;AAj5CtjLA,IAAAA,EAi5CklL;AAj5CllLA,MAAAA,EAi5CklL;AAAA,sBAj5CllLA,EAi5CklL;AAAA;AAAA,M;AAj5CllLA,IAAAA,EAi5C2qL,wB;AAj5C3qLA,IAAAA,EAi5CorL,2B;AAj5CprLA,IAAAA,EAi5CotL,4B;AAj5CptLA,IAAAA,EAi5C4tL,gC;AAj5C5tLA,IAAAA,EAi5C8uL,e;AAj5C9uLA,IAAAA,EAi5CuvL,e;AAj5CvvLA,IAAAA,EAi5CiwL,e;AAj5CjwLA,IAAAA,EAi5CmxL,e;;;;oBAj5CnxLA,E;AAAAA,IAAAA,EAi5CklL,a;AAj5CllLA,IAAAA,EAi5CklL,sG;;;;;;AAj5CllLA,IAAAA,EAi5Cu7M,4B;;;;2BAj5Cv7MA,E;AAAAA,IAAAA,EAi5Cs+M,wC;;;;;;AAj5Ct+MA,IAAAA,EAi5CyiN,U;;;;2BAj5CziNA,E;AAAAA,IAAAA,EAi5CyiN,wC;;;;;;AAj5CziNA,IAAAA,EAi5C4tM,2B;AAj5C5tMA,IAAAA,EAi5Cu7M,yG;AAj5Cv7MA,IAAAA,EAi5CqhN,wHAj5CrhNA,EAi5CqhN,wB;AAj5CrhNA,IAAAA,EAi5CqlN,e;;;;iBAj5CrlNA,E;;2BAAAA,E;AAAAA,IAAAA,EAi5Cu4M,8C;AAj5Cv4MA,IAAAA,EAi5CmwM,8C;AAj5CnwMA,IAAAA,EAi5C8yM,2E;AAj5C9yMA,IAAAA,EAi5Ci8M,a;AAj5Cj8MA,IAAAA,EAi5Ci8M,0D;;;;;;AAj5Cj8MA,IAAAA,EAi5CyzN,4B;;;;2BAj5CzzNA,E;AAAAA,IAAAA,EAi5Cw2N,wC;;;;;;AAj5Cx2NA,IAAAA,EAi5C26N,U;;;;2BAj5C36NA,E;AAAAA,IAAAA,EAi5C26N,wC;;;;;;AAj5C36NA,IAAAA,EAi5CimN,uB;AAj5CjmNA,IAAAA,EAi5CyzN,yG;AAj5CzzNA,IAAAA,EAi5Cu5N,wHAj5Cv5NA,EAi5Cu5N,wB;AAj5Cv5NA,IAAAA,EAi5Cu9N,e;;;;iBAj5Cv9NA,E;;2BAAAA,E;AAAAA,IAAAA,EAi5CywN,8C;AAj5CzwNA,IAAAA,EAi5CuoN,yCAj5CvoNA,EAi5CuoN,8E;AAj5CvoNA,IAAAA,EAi5Cm0N,a;AAj5Cn0NA,IAAAA,EAi5Cm0N,0D;;;;;;AAj5Cn0NA,IAAAA,EAi5C6pM,2B;AAj5C7pMA,IAAAA,EAi5C4tM,yF;AAj5C5tMA,IAAAA,EAi5CimN,yF;AAj5CjmNA,IAAAA,EAi5Ci+N,wB;;;;;AAj5Cj+NA,IAAAA,EAi5CguM,a;AAj5ChuMA,IAAAA,EAi5CguM,wC;AAj5ChuMA,IAAAA,EAi5CqmN,a;AAj5CrmNA,IAAAA,EAi5CqmN,uC;;;;;;AAj5CrmNA,IAAAA,EAi5CmgM,iC;AAj5CngMA,IAAAA,EAi5C8mM,8B;AAj5C9mMA,IAAAA,EAi5CgoM,6B;AAj5ChoMA,IAAAA,EAi5C6pM,gG;AAj5C7pMA,IAAAA,EAi5Co/N,e;AAj5Cp/NA,IAAAA,EAi5C4/N,e;;;;oBAj5C5/NA,E;AAAAA,IAAAA,EAi5CmsM,a;AAj5CnsMA,IAAAA,EAi5CmsM,2C;;;;;;AAj5CnsMA,IAAAA,EAm/Coc,4B;AAn/CpcA,IAAAA,EAm/C+f,U;AAn/C/fA,IAAAA,EAm/C0gB,e;;;;;AAn/C1gBA,IAAAA,EAm/C+f,a;AAn/C/fA,IAAAA,EAm/C+f,4B;;;;;;AAn/C/fA,IAAAA,EAm/CgQ,kC;AAn/ChQA,IAAAA,EAm/C6W,2B;AAn/C7WA,IAAAA,EAm/CsY,uB;AAn/CtYA,IAAAA,EAm/CyY,sB;AAn/CzYA,IAAAA,EAm/CiZ,e;AAn/CjZA,IAAAA,EAm/CqZ,e;AAn/CrZA,IAAAA,EAm/C6Z,4B;AAn/C7ZA,IAAAA,EAm/Coc,mF;AAn/CpcA,IAAAA,EAm/CmhB,e;AAn/CnhBA,IAAAA,EAm/C0hB,e;;;;mBAn/C1hBA,E;AAAAA,IAAAA,EAm/C2d,a;AAn/C3dA,IAAAA,EAm/C2d,qC;;;;;;AAn/C3dA,IAAAA,EAm/CivB,4B;AAn/CjvBA,IAAAA,EAm/CgzB,U;AAn/ChzBA,IAAAA,EAm/C6zB,e;;;;;AAn/C7zBA,IAAAA,EAm/CgzB,a;AAn/ChzBA,IAAAA,EAm/CgzB,8B;;;;;;AAn/ChzBA,IAAAA,EAm/CyiB,kC;AAn/CziBA,IAAAA,EAm/C2pB,2B;AAn/C3pBA,IAAAA,EAm/CorB,uB;AAn/CprBA,IAAAA,EAm/CurB,qB;AAn/CvrBA,IAAAA,EAm/C8rB,e;AAn/C9rBA,IAAAA,EAm/CksB,e;AAn/ClsBA,IAAAA,EAm/C0sB,4B;AAn/C1sBA,IAAAA,EAm/CivB,mF;AAn/CjvBA,IAAAA,EAm/Cs0B,e;AAn/Ct0BA,IAAAA,EAm/C60B,e;;;;mBAn/C70BA,E;AAAAA,IAAAA,EAm/C0wB,a;AAn/C1wBA,IAAAA,EAm/C0wB,uC;;;;;;AAn/C1wBA,IAAAA,EAm/CypD,2B;AAn/CzpDA,IAAAA,EAm/CuuD,kC;AAn/CvuDA,IAAAA,EAm/CiwD,e;;;;;;AAn/CjwDA,IAAAA,EAm/C6wD,2B;AAn/C7wDA,IAAAA,EAm/C01D,6C;AAn/C11DA,IAAAA,EAm/C+3D,e;;;;;;AAn/C/3DA,IAAAA,EAm/C0lD,2B;AAn/C1lDA,IAAAA,EAm/CypD,sF;AAn/CzpDA,IAAAA,EAm/C6wD,sF;AAn/C7wDA,IAAAA,EAm/Cy4D,wB;;;;AAn/Cz4DA,IAAAA,E;;gBAAAA,E;;AAAAA,IAAAA,EAm/C6rD,a;AAn/C7rDA,IAAAA,EAm/C6rD,oE;AAn/C7rDA,IAAAA,EAm/CizD,a;AAn/CjzDA,IAAAA,EAm/CizD,mE;;;;;;AAn/CjzDA,IAAAA,EA2iD6Y,4B;AA3iD7YA,IAAAA,EA2iDwc,U;AA3iDxcA,IAAAA,EA2iDmd,e;;;;;AA3iDndA,IAAAA,EA2iDwc,a;AA3iDxcA,IAAAA,EA2iDwc,4B;;;;;;AA3iDxcA,IAAAA,EA2iDyM,kC;AA3iDzMA,IAAAA,EA2iDsT,2B;AA3iDtTA,IAAAA,EA2iD+U,uB;AA3iD/UA,IAAAA,EA2iDkV,sB;AA3iDlVA,IAAAA,EA2iD0V,e;AA3iD1VA,IAAAA,EA2iD8V,e;AA3iD9VA,IAAAA,EA2iDsW,4B;AA3iDtWA,IAAAA,EA2iD6Y,iF;AA3iD7YA,IAAAA,EA2iD4d,e;AA3iD5dA,IAAAA,EA2iDme,e;;;;mBA3iDneA,E;AAAAA,IAAAA,EA2iDoa,a;AA3iDpaA,IAAAA,EA2iDoa,qC;;;;;;AA3iDpaA,IAAAA,EA2iD0rB,4B;AA3iD1rBA,IAAAA,EA2iDyvB,U;AA3iDzvBA,IAAAA,EA2iDswB,e;;;;;AA3iDtwBA,IAAAA,EA2iDyvB,a;AA3iDzvBA,IAAAA,EA2iDyvB,+B;;;;;;AA3iDzvBA,IAAAA,EA2iDkf,kC;AA3iDlfA,IAAAA,EA2iDomB,2B;AA3iDpmBA,IAAAA,EA2iD6nB,uB;AA3iD7nBA,IAAAA,EA2iDgoB,qB;AA3iDhoBA,IAAAA,EA2iDuoB,e;AA3iDvoBA,IAAAA,EA2iD2oB,e;AA3iD3oBA,IAAAA,EA2iDmpB,4B;AA3iDnpBA,IAAAA,EA2iD0rB,iF;AA3iD1rBA,IAAAA,EA2iD+wB,e;AA3iD/wBA,IAAAA,EA2iDsxB,e;;;;mBA3iDtxBA,E;AAAAA,IAAAA,EA2iDmtB,a;AA3iDntBA,IAAAA,EA2iDmtB,uC;;;;;;AA3iDntBA,IAAAA,EA2iDgzD,2B;AA3iDhzDA,IAAAA,EA2iDi4D,qC;AA3iDj4DA,IAAAA,EA2iD85D,e;;;;;;AA3iD95DA,IAAAA,EA2iD06D,2B;AA3iD16DA,IAAAA,EA2iD0hE,U;AA3iD1hEA,IAAAA,EA2iD4tE,e;;;;oBA3iD5tEA,E;AAAAA,IAAAA,EA2iD0hE,a;AA3iD1hEA,IAAAA,EA2iD0hE,4M;;;;;;AA3iD1hEA,IAAAA,EA2iD2uD,2B;AA3iD3uDA,IAAAA,EA2iDgzD,oF;AA3iDhzDA,IAAAA,EA2iD06D,oF;AA3iD16DA,IAAAA,EA2iDsuE,wB;;;;AA3iDtuEA,IAAAA,E;;gBAAAA,E;;AAAAA,IAAAA,EA2iDo1D,a;AA3iDp1DA,IAAAA,EA2iDo1D,oE;AA3iDp1DA,IAAAA,EA2iD88D,a;AA3iD98DA,IAAAA,EA2iD88D,6H;;;;;;AA3iD98DA,IAAAA,EA2iDwiG,2B;AA3iDxiGA,IAAAA,EA2iDyoG,kD;AA3iDzoGA,IAAAA,EA2iDmrG,e;;;;;;AA3iDnrGA,IAAAA,EA2iD+rG,2B;AA3iD/rGA,IAAAA,EA2iDizG,6D;AA3iDjzGA,IAAAA,EA2iDs2G,e;;;;;;AA3iDt2GA,IAAAA,EA2iDy/F,2B;AA3iDz/FA,IAAAA,EA2iDwiG,oF;AA3iDxiGA,IAAAA,EA2iD+rG,oF;AA3iD/rGA,IAAAA,EA2iDg3G,wB;;;;AA3iDh3GA,IAAAA,E;;gBAAAA,E;;gBAAAA,E;;AAAAA,IAAAA,EA2iD4kG,a;AA3iD5kGA,IAAAA,EA2iD4kG,qF;AA3iD5kGA,IAAAA,EA2iDmuG,a;AA3iDnuGA,IAAAA,EA2iDmuG,iG;;;;;AA/mEz0G,MAAMqC,WAAW,GAAG,EAApB;AACA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,UAAU,EAAE,EADW;AAEvBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE;AACHC,MAAAA,aAAa,EAAE,GADZ;AAEHC,MAAAA,QAAQ,EAAE,OAFP;AAGHC,MAAAA,UAAU,EAAE,IAHT;AAIHC,MAAAA,YAAY,EAAE;AACVC,QAAAA,OAAO,EAAE,IADC;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAJX;AAQHV,MAAAA,WAAW,EAAEA,WARV,CAQuB;;AARvB,KADJ;AAWHW,IAAAA,QAAQ,EAAE;AACNN,MAAAA,aAAa,EAAE,GADT;AAENC,MAAAA,QAAQ,EAAE,OAFJ;AAGNE,MAAAA,YAAY,EAAE;AACVC,QAAAA,OAAO,EAAE,IADC;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAHR;AAONE,MAAAA,KAAK,EAAE,IAPD;AAQNZ,MAAAA,WAAW,EAAEA;AARP,KAXP;AAqBHa,IAAAA,eAAe,EAAE;AACbR,MAAAA,aAAa,EAAE,GADF;AAEbC,MAAAA,QAAQ,EAAE,OAFG;AAGbE,MAAAA,YAAY,EAAE;AACVC,QAAAA,OAAO,EAAE,IADC;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAHD;AAObV,MAAAA,WAAW,EAAEA;AAPA,KArBd;AA8BHc,IAAAA,aAAa,EAAE;AACXT,MAAAA,aAAa,EAAE,GADJ;AAEXC,MAAAA,QAAQ,EAAE,OAFC;AAGXE,MAAAA,YAAY,EAAE;AACVC,QAAAA,OAAO,EAAE,IADC;AAEVC,QAAAA,KAAK,EAAE;AAFG,OAHH;AAOXV,MAAAA,WAAW,EAAEA;AAPF,KA9BZ;AAuCHe,IAAAA,MAAM,EAAE;AACJV,MAAAA,aAAa,EAAE,GADX;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAvCL;AA2CHU,IAAAA,UAAU,EAAE;AACRC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,QAAQ,EAAE,IADJ;AAENC,QAAAA,SAAS,EAAE,CAFL;AAGNC,QAAAA,SAAS,EAAE;AAHL,OADF;AAMRC,MAAAA,KAAK,EAAE;AACHH,QAAAA,QAAQ,EAAE;AADP,OANC;AASRI,MAAAA,QAAQ,EAAE;AACNJ,QAAAA,QAAQ,EAAE,KADJ;AAENC,QAAAA,SAAS,EAAE,CAFL;AAGNC,QAAAA,SAAS,EAAE;AAHL;AATF;AA3CT;AAFgB,CAA3B;AA8DA,MAAMG,eAAe,GAAG,IAAI3D,cAAJ,CAAmB,sBAAnB,CAAxB;AACA,MAAM4D,oBAAoB,GAAG,IAAI5D,cAAJ,CAAmB,2BAAnB,CAA7B;AACA,MAAM6D,kBAAkB,GAAG,IAAI7D,cAAJ,CAAmB,yBAAnB,CAA3B;AACA,MAAM8D,cAAc,GAAG,IAAI9D,cAAJ,CAAmB,qBAAnB,CAAvB;AACA,MAAM+D,0BAA0B,GAAG,IAAI/D,cAAJ,CAAmB,mCAAnB,CAAnC;AACA,MAAMgE,gCAAgC,GAAG,IAAIhE,cAAJ,CAAmB,4BAAnB,CAAzC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMiE,UAAU,GAAG,UAAU,GAAGC,OAAb,EAAsB;AACrC,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwB,OAAOD,SAAS,CAAC,CAAD,CAAhB,KAAwB,QAApD,EAA8D;AAC1D,WAAO,KAAP;AACH;;AACD,MAAIA,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACtB,WAAOD,SAAS,CAAC,CAAD,CAAhB;AACH;;AACD,QAAME,MAAM,GAAGF,SAAS,CAAC,CAAD,CAAxB,CAPqC,CAQrC;;AACA,QAAMG,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BP,SAA3B,EAAsC,CAAtC,CAAb;AACA,MAAIQ,GAAJ,EAASC,GAAT;AACAN,EAAAA,IAAI,CAACO,OAAL,CAAa,UAAUC,GAAV,EAAe;AACxB;AACA,QAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BP,KAAK,CAACQ,OAAN,CAAcD,GAAd,CAA/B,EAAmD;AAC/C;AACH;;AACDE,IAAAA,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBD,OAAjB,CAAyB,UAAUK,GAAV,EAAe;AACpCN,MAAAA,GAAG,GAAGP,MAAM,CAACa,GAAD,CAAZ,CADoC,CACjB;;AACnBP,MAAAA,GAAG,GAAGG,GAAG,CAACI,GAAD,CAAT,CAFoC,CAEpB;AAChB;;AACA,UAAIP,GAAG,KAAKN,MAAZ,EAAoB;AAChB;AACA;AAChB;AACA;AACA;AACa,OAND,MAOK,IAAI,OAAOM,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAvC,EAA6C;AAC9CN,QAAAA,MAAM,CAACa,GAAD,CAAN,GAAcP,GAAd;AACA,eAF8C,CAG9C;AACH,OAJI,MAKA,IAAIJ,KAAK,CAACQ,OAAN,CAAcJ,GAAd,CAAJ,EAAwB;AACzBN,QAAAA,MAAM,CAACa,GAAD,CAAN,GAAcC,cAAc,CAACR,GAAD,CAA5B;AACA,eAFyB,CAGzB;AACH,OAJI,MAKA,IAAIS,eAAe,CAACT,GAAD,CAAnB,EAA0B;AAC3BN,QAAAA,MAAM,CAACa,GAAD,CAAN,GAAcG,kBAAkB,CAACV,GAAD,CAAhC;AACA,eAF2B,CAG3B;AACH,OAJI,MAKA,IAAI,OAAOC,GAAP,KAAe,QAAf,IAA2BA,GAAG,KAAK,IAAnC,IAA2CL,KAAK,CAACQ,OAAN,CAAcH,GAAd,CAA/C,EAAmE;AACpEP,QAAAA,MAAM,CAACa,GAAD,CAAN,GAAcjB,UAAU,CAAC,EAAD,EAAKU,GAAL,CAAxB;AACA,eAFoE,CAGpE;AACH,OAJI,MAKA;AACDN,QAAAA,MAAM,CAACa,GAAD,CAAN,GAAcjB,UAAU,CAACW,GAAD,EAAMD,GAAN,CAAxB;AACA;AACH;AACJ,KAnCD;AAoCH,GAzCD;AA0CA,SAAON,MAAP;AACH,CAtDD;;AAuDA,SAASe,eAAT,CAAyBT,GAAzB,EAA8B;AAC1B,SAAQA,GAAG,YAAYW,IAAf,IACDX,GAAG,YAAYY,MADf,GACyB,IADzB,GACgC,KADvC;AAEH;;AACD,SAASF,kBAAT,CAA4BV,GAA5B,EAAiC;AAC7B,MAAIA,GAAG,YAAYW,IAAnB,EAAyB;AACrB,WAAO,IAAIA,IAAJ,CAASX,GAAG,CAACa,OAAJ,EAAT,CAAP;AACH,GAFD,MAGK,IAAIb,GAAG,YAAYY,MAAnB,EAA2B;AAC5B,WAAO,IAAIA,MAAJ,CAAWZ,GAAX,CAAP;AACH,GAFI,MAGA;AACD,UAAM,IAAIc,KAAJ,CAAU,0CAAV,CAAN;AACH;AACJ;AACD;AACA;AACA;;;AACA,SAASN,cAAT,CAAwBO,GAAxB,EAA6B;AACzB,QAAMC,KAAK,GAAG,EAAd;AACAD,EAAAA,GAAG,CAACb,OAAJ,CAAY,UAAUe,IAAV,EAAgBC,KAAhB,EAAuB;AAC/B,QAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAAzC,EAA+C;AAC3C,UAAIrB,KAAK,CAACQ,OAAN,CAAca,IAAd,CAAJ,EAAyB;AACrBD,QAAAA,KAAK,CAACE,KAAD,CAAL,GAAeV,cAAc,CAACS,IAAD,CAA7B;AACH,OAFD,MAGK,IAAIR,eAAe,CAACQ,IAAD,CAAnB,EAA2B;AAC5BD,QAAAA,KAAK,CAACE,KAAD,CAAL,GAAeR,kBAAkB,CAACO,IAAD,CAAjC;AACH,OAFI,MAGA;AACDD,QAAAA,KAAK,CAACE,KAAD,CAAL,GAAe5B,UAAU,CAAC,EAAD,EAAK2B,IAAL,CAAzB;AACH;AACJ,KAVD,MAWK;AACDD,MAAAA,KAAK,CAACE,KAAD,CAAL,GAAeD,IAAf;AACH;AACJ,GAfD;AAgBA,SAAOD,KAAP;AACH,C,CACD;;;AACA,SAASG,iBAAT,CAA2BC,MAAM,GAAG,EAApC,EAAwCC,IAAxC,EAA8CC,YAA9C,EAA4D;AACxD,QAAMhB,IAAI,GAAGe,IAAI,CAACE,KAAL,CAAW,GAAX,CAAb,CADwD,CAExD;;AACA,MAAIC,KAAK,GAAGlC,UAAU,CAAC,EAAD,EAAK8B,MAAM,IAAI,EAAf,CAAtB;AACAd,EAAAA,IAAI,CAACJ,OAAL,CAAcuB,CAAD,IAAO;AAChB,QAAID,KAAK,IAAI,OAAOA,KAAK,CAACC,CAAD,CAAZ,KAAoB,WAAjC,EAA8C;AAC1CD,MAAAA,KAAK,GAAGA,KAAK,CAACC,CAAD,CAAb;AACH,KAFD,MAGK;AACDD,MAAAA,KAAK,GAAGE,SAAR;AACH;AACJ,GAPD;AAQA,SAAO,OAAOF,KAAP,KAAiB,WAAjB,GAA+BF,YAA/B,GAA8CE,KAArD;AACH;;AACD,SAASG,eAAT,CAAyBC,GAAzB,EAA8B;AAC1B,MAAIC,MAAM,GAAGD,GAAG,CAACE,OAAJ,CAAY,IAAZ,EAAkB,GAAlB,EAAuBA,OAAvB,CAA+B,IAA/B,EAAqC,GAArC,CAAb;;AACA,UAAQD,MAAM,CAACpC,MAAP,GAAgB,CAAxB;AACI,SAAK,CAAL;AAAQ;AACJ;AACH;;AACD,SAAK,CAAL;AAAQ;AACJoC,QAAAA,MAAM,IAAI,IAAV;AACA;AACH;;AACD,SAAK,CAAL;AAAQ;AACJA,QAAAA,MAAM,IAAI,GAAV;AACA;AACH;;AACD;AAAS;AACL,cAAM,IAAIf,KAAJ,CAAU,2BAAV,CAAN;AACH;AAdL;;AAgBA,SAAOiB,gBAAgB,CAACF,MAAD,CAAvB;AACH;;AACD,SAASG,SAAT,CAAmBJ,GAAnB,EAAwB;AACpB,QAAMK,KAAK,GAAG,mEAAd;AACA,MAAIJ,MAAM,GAAG,EAAb;AACAD,EAAAA,GAAG,GAAGM,MAAM,CAACN,GAAD,CAAN,CAAYE,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,CAAN;;AACA,MAAIF,GAAG,CAACnC,MAAJ,GAAa,CAAb,KAAmB,CAAvB,EAA0B;AACtB,UAAM,IAAIqB,KAAJ,CAAW,mEAAX,CAAN;AACH;;AACD,QACA;AACA,MAAIqB,EAAE,GAAG,CAAT,EAAYC,EAAZ,EAAgBC,MAAhB,EAAwBC,GAAG,GAAG,CAF9B,EAGA;AACAD,EAAAA,MAAM,GAAGT,GAAG,CAACW,MAAJ,CAAWD,GAAG,EAAd,CAJT,EAKA;AACA,GAACD,MAAD,KAAYD,EAAE,GAAGD,EAAE,GAAG,CAAL,GAASC,EAAE,GAAG,EAAL,GAAUC,MAAnB,GAA4BA,MAAjC,EACR;AACA;AACAF,EAAAA,EAAE,KAAK,CAHX,IAGgBN,MAAM,IAAIK,MAAM,CAACM,YAAP,CAAoB,MAAMJ,EAAE,KAAK,CAAC,CAAD,GAAKD,EAAL,GAAU,CAAf,CAA5B,CAH1B,GAG2E,CAT3E,EAS8E;AAC1E;AACAE,IAAAA,MAAM,GAAGJ,KAAK,CAACQ,OAAN,CAAcJ,MAAd,CAAT;AACH;;AACD,SAAOR,MAAP;AACH,C,CACD;;;AACA,SAASE,gBAAT,CAA0BH,GAA1B,EAA+B;AAC3B,SAAOc,kBAAkB,CAAC9C,KAAK,CAACC,SAAN,CAAgB7C,GAAhB,CAAoB+C,IAApB,CAAyBiC,SAAS,CAACJ,GAAD,CAAlC,EAA0Ce,CAAD,IAAO;AACtE,WAAO,MAAM,CAAC,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAAR,EAAsC/C,KAAtC,CAA4C,CAAC,CAA7C,CAAb;AACH,GAFyB,EAEvBgD,IAFuB,CAElB,EAFkB,CAAD,CAAzB;AAGH;;AAED,MAAMC,WAAN,CAAkB;AACdC,EAAAA,WAAW,GAAG;AACV,SAAKC,OAAL,GAAe,IAAf;AACH;;AACDC,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKF,WAAL,CAAiBG,IAAxB;AACH;;AACDC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKH,OAAZ;AACH;;AATa;;AAWlB,MAAMI,wBAAN,SAAuCvC,KAAvC,CAA6C;AACzCkC,EAAAA,WAAW,CAACM,OAAD,EAAU;AACjB,UAAMA,OAAN;AACAjD,IAAAA,MAAM,CAACkD,cAAP,CAAsB,IAAtB,EAA4BC,GAAG,CAAC9D,MAAJ,CAAWG,SAAvC;AACH;;AAJwC;;AAM7C,MAAM4D,uBAAN,SAAsC3C,KAAtC,CAA4C;AACxCkC,EAAAA,WAAW,CAACM,OAAD,EAAU;AACjB,UAAMA,OAAN;AACAjD,IAAAA,MAAM,CAACkD,cAAP,CAAsB,IAAtB,EAA4BC,GAAG,CAAC9D,MAAJ,CAAWG,SAAvC;AACH;;AAJuC;;AAM5C,MAAM6D,qBAAN,SAAoCD,uBAApC,CAA4D;AACxDT,EAAAA,WAAW,CAACM,OAAD,EAAU;AACjB,UAAMA,OAAN;AACAjD,IAAAA,MAAM,CAACkD,cAAP,CAAsB,IAAtB,EAA4BC,GAAG,CAAC9D,MAAJ,CAAWG,SAAvC;AACH;;AAJuD;;AAM5D,MAAM8D,0BAAN,SAAyCF,uBAAzC,CAAiE;AAC7DT,EAAAA,WAAW,CAACM,OAAD,EAAU;AACjB,UAAMA,OAAN;AACAjD,IAAAA,MAAM,CAACkD,cAAP,CAAsB,IAAtB,EAA4BC,GAAG,CAAC9D,MAAJ,CAAWG,SAAvC;AACH;;AAJ4D;;AAMjE,SAAS+D,iBAAT,CAA2BC,UAA3B,EAAuCC,KAAvC,EAA8CC,iBAA9C,EAAiEC,SAAjE,EAA4E;AACxE,SAAO,IAAIH,UAAJ,CAAeC,KAAf,EAAsBC,iBAAtB,EAAyCC,SAAzC,CAAP;AACH;;AACD,SAASC,gBAAT,CAA0BhB,OAA1B,EAAmC;AAC/B,MAAIA,OAAO,CAACxD,MAAR,KAAmB,CAAvB,EAA0B;AACtB,UAAM,IAAIiE,qBAAJ,CAA0B,uCAA1B,CAAN;AACH;;AACD,QAAMQ,KAAK,GAAGjB,OAAO,CAAC1B,KAAR,CAAc,GAAd,CAAd;;AACA,MAAI2C,KAAK,CAACzE,MAAN,KAAiB,CAArB,EAAwB;AACpB,UAAM,IAAIkE,0BAAJ,CAAgC,eAAcV,OAAQ,4DAAtD,CAAN;AACH;;AACD,MAAIkB,OAAJ;;AACA,MAAI;AACAA,IAAAA,OAAO,GAAGxC,eAAe,CAACuC,KAAK,CAAC,CAAD,CAAN,CAAzB;AACH,GAFD,CAGA,OAAOE,CAAP,EAAU;AACN,UAAM,IAAIT,0BAAJ,CAAgC,eAAcV,OAAQ,iDAAtD,CAAN;AACH;;AACD,MAAI,CAACkB,OAAL,EAAc;AACV,UAAM,IAAIR,0BAAJ,CAAgC,eAAcV,OAAQ,kDAAtD,CAAN;AACH;;AACD,SAAOoB,IAAI,CAACC,KAAL,CAAWH,OAAX,CAAP;AACH;AACD;AACA;AACA;;;AACA,MAAMI,iBAAN,SAAgCxB,WAAhC,CAA4C;AACxCC,EAAAA,WAAW,CAACc,KAAD,EAAQC,iBAAR,EAA2BC,SAA3B,EAAsC;AAC7C;AACA,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKC,iBAAL,GAAyBA,iBAAzB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;;AACA,QAAI;AACA,WAAKQ,YAAL;AACH,KAFD,CAGA,OAAOC,GAAP,EAAY;AACR,UAAI,EAAEA,GAAG,YAAYpB,wBAAjB,CAAJ,EAAgD;AAC5C;AACA,cAAMoB,GAAN;AACH;AACJ;;AACD,SAAKT,SAAL,GAAiB,KAAKU,gBAAL,CAAsBV,SAAtB,CAAjB;AACH;;AACDQ,EAAAA,YAAY,GAAG;AACX,SAAKvB,OAAL,GAAe,IAAf;AACH;;AACDyB,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,WAAOA,IAAI,GAAGA,IAAH,GAAU,IAAIhE,IAAJ,EAArB;AACH;AACD;AACJ;AACA;AACA;;;AACIiE,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKZ,SAAZ;AACH;AACD;AACJ;AACA;AACA;;;AACIa,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKf,KAAZ;AACH;;AACDgB,EAAAA,oBAAoB,GAAG;AACnB,WAAO,KAAKf,iBAAZ;AACH;AACD;AACJ;AACA;AACA;;;AACIgB,EAAAA,OAAO,GAAG;AACN,WAAO,CAAC,CAAC,KAAKF,QAAL,EAAT;AACH;AACD;AACJ;AACA;AACA;;;AACIhC,EAAAA,QAAQ,GAAG;AACP,WAAO,CAAC,CAAC,KAAKiB,KAAP,GAAe,KAAKA,KAApB,GAA4B,EAAnC;AACH;;AArDuC;;AAuD5CS,iBAAiB,CAACpB,IAAlB,GAAyB,sBAAzB;AACA;AACA;AACA;;AACA,MAAM6B,cAAN,SAA6BT,iBAA7B,CAA+C;AAC3C;AACJ;AACA;AACIG,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,UAAMR,OAAO,GAAG,KAAKf,UAAL,EAAhB;AACA,WAAOe,OAAO,IAAIA,OAAO,CAACc,GAAnB,GAAyB,IAAItE,IAAJ,CAASuE,MAAM,CAACf,OAAO,CAACc,GAAT,CAAN,GAAsB,IAA/B,CAAzB,GAAgE,MAAMP,gBAAN,CAAuBC,IAAvB,CAAvE;AACH;AACD;AACJ;AACA;AACA;;;AACIH,EAAAA,YAAY,GAAG;AACX,QAAI,CAAC,KAAKV,KAAV,EAAiB;AACb,YAAM,IAAIT,wBAAJ,CAA6B,mBAA7B,CAAN;AACH;;AACD,SAAKJ,OAAL,GAAegB,gBAAgB,CAAC,KAAKH,KAAN,CAA/B;AACH;AACD;AACJ;AACA;AACA;;;AACIqB,EAAAA,eAAe,GAAG;AACd,UAAMhB,OAAO,GAAG,KAAKf,UAAL,EAAhB;;AACA,QAAIe,OAAO,IAAI,CAACA,OAAO,CAACiB,cAAR,CAAuB,KAAvB,CAAhB,EAA+C;AAC3C,aAAO,IAAP;AACH;;AACD,UAAMT,IAAI,GAAG,IAAIhE,IAAJ,CAAS,CAAT,CAAb;AACAgE,IAAAA,IAAI,CAACU,aAAL,CAAmBlB,OAAO,CAACmB,GAA3B,EANc,CAMmB;;AACjC,WAAOX,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACII,EAAAA,OAAO,GAAG;AACN,WAAO,MAAMA,OAAN,OAAoB,CAAC,KAAKI,eAAL,EAAD,IAA2B,IAAIxE,IAAJ,KAAa,KAAKwE,eAAL,EAA5D,CAAP;AACH;;AArC0C;;AAuC/CH,cAAc,CAAC7B,IAAf,GAAsB,mBAAtB;;AACA,MAAMoC,kBAAkB,GAAIC,IAAD,IAAU;AACjC,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B,QAAI;AACA,aAAOnB,IAAI,CAACC,KAAL,CAAWkB,IAAX,CAAP;AACH,KAFD,CAGA,OAAOpB,CAAP,EAAU,CAAG;AAChB;;AACD,SAAOoB,IAAP;AACH,CARD;AASA;AACA;AACA;;;AACA,MAAMC,iBAAN,SAAgClB,iBAAhC,CAAkD;AAC9CvB,EAAAA,WAAW,CAACwC,IAAI,GAAG,EAAR,EAAYzB,iBAAZ,EAA+BC,SAA/B,EAA0C;AACjD;AACA,UAAMuB,kBAAkB,CAACC,IAAD,CAAxB,EAAgCzB,iBAAhC,EAAmDC,SAAnD;AACH;AACD;AACJ;AACA;AACA;;;AACIa,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKf,KAAL,CAAW4B,YAAlB;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,eAAe,GAAG;AACd,WAAO,KAAK7B,KAAL,CAAW8B,aAAlB;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,eAAe,CAACC,YAAD,EAAe;AAC1B,SAAKhC,KAAL,CAAW8B,aAAX,GAA2BE,YAA3B;AACH;AACD;AACJ;AACA;AACA;;;AACItB,EAAAA,YAAY,GAAG;AACX,QAAI,CAAC,KAAKV,KAAV,EAAiB;AACb,YAAM,IAAIT,wBAAJ,CAA6B,kBAA7B,CAAN;AACH,KAFD,MAGK;AACD,UAAI,CAAChD,MAAM,CAACC,IAAP,CAAY,KAAKwD,KAAjB,EAAwBrE,MAA7B,EAAqC;AACjC,cAAM,IAAIiE,qBAAJ,CAA0B,6CAA1B,CAAN;AACH;AACJ;;AACD,SAAKT,OAAL,GAAe,KAAKa,KAApB;AACH;AACD;AACJ;AACA;AACA;;;AACIiC,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKjC,KAAL,CAAWkC,UAAlB;AACH;AACD;AACJ;AACA;AACA;;;AACIjB,EAAAA,OAAO,GAAG;AACN,WAAO,MAAMA,OAAN,OAAoB,CAAC,KAAKI,eAAL,EAAD,IAA2B,IAAIxE,IAAJ,KAAa,KAAKwE,eAAL,EAA5D,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIA,EAAAA,eAAe,GAAG;AACd,QAAI,CAAC,KAAKrB,KAAL,CAAWsB,cAAX,CAA0B,YAA1B,CAAL,EAA8C;AAC1C,aAAO,IAAP;AACH;;AACD,WAAO,IAAIzE,IAAJ,CAAS,KAAKqD,SAAL,CAAenD,OAAf,KAA2BqE,MAAM,CAAC,KAAKpB,KAAL,CAAWmC,UAAZ,CAAN,GAAgC,IAApE,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIpD,EAAAA,QAAQ,GAAG;AACP,WAAOwB,IAAI,CAAC6B,SAAL,CAAe,KAAKpC,KAApB,CAAP;AACH;;AAvE6C;;AAyElD2B,iBAAiB,CAACtC,IAAlB,GAAyB,sBAAzB;AACA;AACA;AACA;;AACA,MAAMgD,oBAAN,SAAmCV,iBAAnC,CAAqD;AACjDjB,EAAAA,YAAY,GAAG;AACX,UAAMA,YAAN;AACA,SAAK4B,uBAAL;AACH;;AACDA,EAAAA,uBAAuB,GAAG;AACtB,UAAMC,WAAW,GAAG,KAAKxB,QAAL,EAApB;;AACA,QAAI,CAACwB,WAAL,EAAkB;AACd,YAAM,IAAIhD,wBAAJ,CAA6B,6BAA7B,CAAN;AACH;;AACD,SAAKiD,kBAAL,GAA0BrC,gBAAgB,CAACoC,WAAD,CAA1C;AACH;AACD;AACJ;AACA;AACA;;;AACIE,EAAAA,qBAAqB,GAAG;AACpB,WAAO,KAAKD,kBAAZ;AACH;AACD;AACJ;AACA;;;AACI5B,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,UAAM1B,OAAO,GAAG,KAAKqD,kBAArB;AACA,WAAOrD,OAAO,IAAIA,OAAO,CAACgC,GAAnB,GAAyB,IAAItE,IAAJ,CAASuE,MAAM,CAACjC,OAAO,CAACgC,GAAT,CAAN,GAAsB,IAA/B,CAAzB,GAAgE,MAAMP,gBAAN,CAAuBC,IAAvB,CAAvE;AACH;AACD;AACJ;AACA;AACA;;;AACII,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKuB,kBAAL,IAA2B,MAAMvB,OAAN,EAAlC;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACII,EAAAA,eAAe,GAAG;AACd,QAAI,KAAKmB,kBAAL,IAA2B,KAAKA,kBAAL,CAAwBlB,cAAxB,CAAuC,KAAvC,CAA/B,EAA8E;AAC1E,YAAMT,IAAI,GAAG,IAAIhE,IAAJ,CAAS,CAAT,CAAb;AACAgE,MAAAA,IAAI,CAACU,aAAL,CAAmB,KAAKiB,kBAAL,CAAwBhB,GAA3C;AACA,aAAOX,IAAP;AACH,KAJD,MAKK;AACD,aAAO,MAAMQ,eAAN,EAAP;AACH;AACJ;;AAhDgD;;AAkDrDgB,oBAAoB,CAAChD,IAArB,GAA4B,0BAA5B;AAEA,MAAMqD,sBAAsB,GAAG,IAAInL,cAAJ,CAAmB,sBAAnB,CAA/B;AACA;AACA;AACA;;AACA,MAAMoL,mBAAN,CAA0B;AACtBzD,EAAAA,WAAW,CAAC0D,aAAD,EAAgBC,YAAhB,EAA8B;AACrC,SAAKD,aAAL,GAAqBA,aAArB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACH;;AACDC,EAAAA,IAAI,CAAC9C,KAAD,EAAQ;AACR,WAAOO,IAAI,CAAC6B,SAAL,CAAe;AAClB7E,MAAAA,IAAI,EAAEyC,KAAK,CAACZ,OAAN,EADY;AAElBa,MAAAA,iBAAiB,EAAED,KAAK,CAACgB,oBAAN,EAFD;AAGlBd,MAAAA,SAAS,EAAEF,KAAK,CAACc,YAAN,GAAqB/D,OAArB,EAHO;AAIlBgG,MAAAA,KAAK,EAAE/C,KAAK,CAACjB,QAAN;AAJW,KAAf,CAAP;AAMH;;AACDiE,EAAAA,MAAM,CAACD,KAAD,EAAQ;AACV,QAAIhD,UAAU,GAAG,KAAK6C,aAAtB;AACA,QAAIK,UAAU,GAAG,EAAjB;AACA,QAAIC,sBAAsB,GAAG,EAA7B;AACA,QAAIC,cAAc,GAAG,IAArB;AACA,UAAMC,SAAS,GAAG,KAAKC,cAAL,CAAoBN,KAApB,CAAlB;;AACA,QAAIK,SAAJ,EAAe;AACXrD,MAAAA,UAAU,GAAG,KAAKuD,cAAL,CAAoBF,SAAS,CAAC7F,IAA9B,KAAuC,KAAKqF,aAAzD;AACAK,MAAAA,UAAU,GAAGG,SAAS,CAACL,KAAvB;AACAG,MAAAA,sBAAsB,GAAGE,SAAS,CAACnD,iBAAnC;AACAkD,MAAAA,cAAc,GAAG,IAAItG,IAAJ,CAASuE,MAAM,CAACgC,SAAS,CAAClD,SAAX,CAAf,CAAjB;AACH;;AACD,WAAOJ,iBAAiB,CAACC,UAAD,EAAakD,UAAb,EAAyBC,sBAAzB,EAAiDC,cAAjD,CAAxB;AACH,GA1BqB,CA2BtB;;;AACAG,EAAAA,cAAc,CAAC/F,IAAD,EAAO;AACjB,WAAO,KAAKsF,YAAL,CAAkBU,IAAlB,CAAwBxD,UAAD,IAAgBA,UAAU,CAACV,IAAX,KAAoB9B,IAA3D,CAAP;AACH;;AACD8F,EAAAA,cAAc,CAACN,KAAD,EAAQ;AAClB,QAAI;AACA,aAAOxC,IAAI,CAACC,KAAL,CAAWuC,KAAX,CAAP;AACH,KAFD,CAGA,OAAOzC,CAAP,EAAU,CAAG;;AACb,WAAO,IAAP;AACH;;AArCqB;;AAuC1BqC,mBAAmB,CAACa,IAApB;AAAA,mBAAgHb,mBAAhH,EAAsGrL,EAAtG,UAAqJoL,sBAArJ,GAAsGpL,EAAtG,UAAwL+D,cAAxL;AAAA;;AACAsH,mBAAmB,CAACc,KAApB,kBADsGnM,EACtG;AAAA,SAAoHqL,mBAApH;AAAA,WAAoHA,mBAApH;AAAA;;AACA;AAAA,qDAFsGrL,EAEtG,mBAA2FqL,mBAA3F,EAA4H,CAAC;AACjHe,IAAAA,IAAI,EAAElM;AAD2G,GAAD,CAA5H,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEkM,MAAAA,IAAI,EAAE9F,SAAR;AAAmB+F,MAAAA,UAAU,EAAE,CAAC;AAC9DD,QAAAA,IAAI,EAAEjM,MADwD;AAE9DoE,QAAAA,IAAI,EAAE,CAAC6G,sBAAD;AAFwD,OAAD;AAA/B,KAAD,EAG3B;AAAEgB,MAAAA,IAAI,EAAE9F,SAAR;AAAmB+F,MAAAA,UAAU,EAAE,CAAC;AAClCD,QAAAA,IAAI,EAAEjM,MAD4B;AAElCoE,QAAAA,IAAI,EAAE,CAACR,cAAD;AAF4B,OAAD;AAA/B,KAH2B,CAAP;AAMlB,GARxB;AAAA;;AAUA,MAAMuI,cAAN,CAAqB;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,mBAAN,SAAkCD,cAAlC,CAAiD;AAC7C1E,EAAAA,WAAW,CAAC4E,QAAD,EAAW;AAClB;AACA,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKrH,GAAL,GAAW,gBAAX;AACH;AACD;AACJ;AACA;AACA;;;AACIsH,EAAAA,GAAG,GAAG;AACF,UAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAAKzH,GAA1B,CAAZ;AACA,WAAO,KAAKqH,QAAL,CAAcd,MAAd,CAAqBgB,GAArB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIG,EAAAA,GAAG,CAACnE,KAAD,EAAQ;AACP,UAAMgE,GAAG,GAAG,KAAKF,QAAL,CAAchB,IAAd,CAAmB9C,KAAnB,CAAZ;AACAiE,IAAAA,YAAY,CAACG,OAAb,CAAqB,KAAK3H,GAA1B,EAA+BuH,GAA/B;AACH;AACD;AACJ;AACA;;;AACIK,EAAAA,KAAK,GAAG;AACJJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,KAAK7H,GAA7B;AACH;;AA3B4C;;AA6BjDoH,mBAAmB,CAACL,IAApB;AAAA,mBAAgHK,mBAAhH,EA1DsGvM,EA0DtG,UAAqJqL,mBAArJ;AAAA;;AACAkB,mBAAmB,CAACJ,KAApB,kBA3DsGnM,EA2DtG;AAAA,SAAoHuM,mBAApH;AAAA,WAAoHA,mBAApH;AAAA;;AACA;AAAA,qDA5DsGvM,EA4DtG,mBAA2FuM,mBAA3F,EAA4H,CAAC;AACjHH,IAAAA,IAAI,EAAElM;AAD2G,GAAD,CAA5H,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEkM,MAAAA,IAAI,EAAEf;AAAR,KAAD,CAAP;AAAyC,GAFnF;AAAA;AAIA;AACA;AACA;;;AACA,MAAM4B,cAAN,CAAqB;AACjBrF,EAAAA,WAAW,CAACsF,YAAD,EAAe;AACtB,SAAKA,YAAL,GAAoBA,YAApB;AACA,SAAKC,MAAL,GAAc,IAAI5L,eAAJ,CAAoB,IAApB,CAAd;AACA,SAAK6L,kBAAL;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKF,MAAL,CACFG,IADE,CACG5L,MAAM,CAAC+J,KAAK,IAAI,CAAC,CAACA,KAAZ,CADT,EAC6B9J,KAAK,EADlC,CAAP;AAEH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIkL,EAAAA,GAAG,CAACnE,KAAD,EAAQ;AACP,SAAKwE,YAAL,CAAkBL,GAAlB,CAAsBnE,KAAtB;AACA,SAAK0E,kBAAL;AACA,WAAO5L,EAAE,CAAC,IAAD,CAAT;AACH;AACD;AACJ;AACA;AACA;;;AACIiL,EAAAA,GAAG,GAAG;AACF,UAAM/D,KAAK,GAAG,KAAKwE,YAAL,CAAkBT,GAAlB,EAAd;AACA,WAAOjL,EAAE,CAACkH,KAAD,CAAT;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIqE,EAAAA,KAAK,GAAG;AACJ,SAAKG,YAAL,CAAkBH,KAAlB;AACA,SAAKK,kBAAL;AACA,WAAO5L,EAAE,CAAC,IAAD,CAAT;AACH;;AACD4L,EAAAA,kBAAkB,GAAG;AACjB,SAAKD,MAAL,CAAYI,IAAZ,CAAiB,KAAKL,YAAL,CAAkBT,GAAlB,EAAjB;AACH;;AA7CgB;;AA+CrBQ,cAAc,CAACf,IAAf;AAAA,mBAA2Ge,cAA3G,EAlHsGjN,EAkHtG,UAA2IsM,cAA3I;AAAA;;AACAW,cAAc,CAACd,KAAf,kBAnHsGnM,EAmHtG;AAAA,SAA+GiN,cAA/G;AAAA,WAA+GA,cAA/G;AAAA;;AACA;AAAA,qDApHsGjN,EAoHtG,mBAA2FiN,cAA3F,EAAuH,CAAC;AAC5Gb,IAAAA,IAAI,EAAElM;AADsG,GAAD,CAAvH,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEkM,MAAAA,IAAI,EAAEE;AAAR,KAAD,CAAP;AAAoC,GAF9E;AAAA;AAIA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMkB,aAAN,CAAoB;AAChB5F,EAAAA,WAAW,CAAC6F,YAAD,EAAelL,UAAf,EAA2B;AAClC,SAAKkL,YAAL,GAAoBA,YAApB;AACA,SAAKlL,UAAL,GAAkBA,UAAlB;AACH;AACD;AACJ;AACA;AACA;;;AACImL,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKD,YAAL,CAAkBhB,GAAlB,EAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIkB,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKD,QAAL,GACFJ,IADE,CACG1L,GAAG,CAAE8G,KAAD,IAAWA,KAAK,CAACiB,OAAN,EAAZ,CADN,CAAP;AAEH;AACD;AACJ;AACA;AACA;AACA;;;AACIiE,EAAAA,wBAAwB,GAAG;AACvB,WAAO,KAAKF,QAAL,GACFJ,IADE,CACGzL,SAAS,CAAC6G,KAAK,IAAI;AACzB,UAAIA,KAAK,CAACe,QAAN,MAAoB,CAACf,KAAK,CAACiB,OAAN,EAAzB,EAA0C;AACtC,eAAO,KAAKe,YAAL,CAAkBhC,KAAK,CAACgB,oBAAN,EAAlB,EAAgDhB,KAAhD,EACF4E,IADE,CACGzL,SAAS,CAACgM,GAAG,IAAI;AACvB,cAAIA,GAAG,CAACC,SAAJ,EAAJ,EAAqB;AACjB,mBAAO,KAAKH,eAAL,EAAP;AACH,WAFD,MAGK;AACD,mBAAOnM,EAAE,CAAC,KAAD,CAAT;AACH;AACJ,SAPkB,CADZ,CAAP;AASH,OAVD,MAWK;AACD,eAAOA,EAAE,CAACkH,KAAK,CAACiB,OAAN,EAAD,CAAT;AACH;AACJ,KAfkB,CADZ,CAAP;AAiBH;AACD;AACJ;AACA;AACA;;;AACIoE,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKN,YAAL,CAAkBJ,WAAlB,EAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIW,EAAAA,sBAAsB,GAAG;AACrB,WAAO,KAAKD,aAAL,GACFT,IADE,CACG1L,GAAG,CAAE8G,KAAD,IAAWA,KAAK,CAACiB,OAAN,EAAZ,CADN,CAAP;AAEH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIsE,EAAAA,YAAY,CAACC,YAAD,EAAe9D,IAAf,EAAqB;AAC7B,WAAO,KAAK+D,WAAL,CAAiBD,YAAjB,EAA+BD,YAA/B,CAA4C7D,IAA5C,EACFkD,IADE,CACGzL,SAAS,CAAEuM,MAAD,IAAY;AAC5B,aAAO,KAAKC,kBAAL,CAAwBD,MAAxB,CAAP;AACH,KAFkB,CADZ,CAAP;AAIH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIpL,EAAAA,QAAQ,CAACkL,YAAD,EAAe9D,IAAf,EAAqB;AACzB,WAAO,KAAK+D,WAAL,CAAiBD,YAAjB,EAA+BlL,QAA/B,CAAwCoH,IAAxC,EACFkD,IADE,CACGzL,SAAS,CAAEuM,MAAD,IAAY;AAC5B,aAAO,KAAKC,kBAAL,CAAwBD,MAAxB,CAAP;AACH,KAFkB,CADZ,CAAP;AAIH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIhL,EAAAA,MAAM,CAAC8K,YAAD,EAAe;AACjB,WAAO,KAAKC,WAAL,CAAiBD,YAAjB,EAA+B9K,MAA/B,GACFkK,IADE,CACGzL,SAAS,CAAEuM,MAAD,IAAY;AAC5B,UAAIA,MAAM,CAACN,SAAP,EAAJ,EAAwB;AACpB,aAAKL,YAAL,CAAkBV,KAAlB,GACKO,IADL,CACU1L,GAAG,CAAC,MAAMwM,MAAP,CADb;AAEH;;AACD,aAAO5M,EAAE,CAAC4M,MAAD,CAAT;AACH,KANkB,CADZ,CAAP;AAQH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIlL,EAAAA,eAAe,CAACgL,YAAD,EAAe9D,IAAf,EAAqB;AAChC,WAAO,KAAK+D,WAAL,CAAiBD,YAAjB,EAA+BhL,eAA/B,CAA+CkH,IAA/C,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIjH,EAAAA,aAAa,CAAC+K,YAAD,EAAe9D,IAAf,EAAqB;AAC9B,WAAO,KAAK+D,WAAL,CAAiBD,YAAjB,EAA+B/K,aAA/B,CAA6CiH,IAA7C,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIM,EAAAA,YAAY,CAACwD,YAAD,EAAe9D,IAAf,EAAqB;AAC7B,WAAO,KAAK+D,WAAL,CAAiBD,YAAjB,EAA+BxD,YAA/B,CAA4CN,IAA5C,EACFkD,IADE,CACGzL,SAAS,CAAEuM,MAAD,IAAY;AAC5B,aAAO,KAAKC,kBAAL,CAAwBD,MAAxB,CAAP;AACH,KAFkB,CADZ,CAAP;AAIH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACID,EAAAA,WAAW,CAACD,YAAD,EAAe;AACtB,UAAMI,KAAK,GAAG,KAAK/L,UAAL,CAAgB0J,IAAhB,CAAsBtJ,QAAD,IAAcA,QAAQ,CAACmF,OAAT,OAAuBoG,YAA1D,CAAd;;AACA,QAAI,CAACI,KAAL,EAAY;AACR,YAAM,IAAIC,SAAJ,CAAe,+CAA8CL,YAAa,QAA1E,CAAN;AACH;;AACD,WAAOI,KAAP;AACH;;AACDD,EAAAA,kBAAkB,CAACD,MAAD,EAAS;AACvB,QAAIA,MAAM,CAACN,SAAP,MAAsBM,MAAM,CAACV,QAAP,EAA1B,EAA6C;AACzC,aAAO,KAAKD,YAAL,CAAkBZ,GAAlB,CAAsBuB,MAAM,CAACV,QAAP,EAAtB,EACFJ,IADE,CACG1L,GAAG,CAAE8G,KAAD,IAAW;AACrB,eAAO0F,MAAP;AACH,OAFY,CADN,CAAP;AAIH;;AACD,WAAO5M,EAAE,CAAC4M,MAAD,CAAT;AACH;;AApLe;;AAsLpBZ,aAAa,CAACtB,IAAd;AAAA,mBAA0GsB,aAA1G,EAvTsGxN,EAuTtG,UAAyIiN,cAAzI,GAvTsGjN,EAuTtG,UAAoK8D,kBAApK;AAAA;;AACA0J,aAAa,CAACrB,KAAd,kBAxTsGnM,EAwTtG;AAAA,SAA8GwN,aAA9G;AAAA,WAA8GA,aAA9G;AAAA;;AACA;AAAA,qDAzTsGxN,EAyTtG,mBAA2FwN,aAA3F,EAAsH,CAAC;AAC3GpB,IAAAA,IAAI,EAAElM;AADqG,GAAD,CAAtH,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEkM,MAAAA,IAAI,EAAEa;AAAR,KAAD,EAA2B;AAAEb,MAAAA,IAAI,EAAE9F,SAAR;AAAmB+F,MAAAA,UAAU,EAAE,CAAC;AACxFD,QAAAA,IAAI,EAAEjM,MADkF;AAExFoE,QAAAA,IAAI,EAAE,CAACT,kBAAD;AAFkF,OAAD;AAA/B,KAA3B,CAAP;AAGlB,GALxB;AAAA;;AAOA,MAAM0K,cAAN,CAAqB;AACjB;AACA;AACAC,EAAAA,UAAU,CAACC,OAAD,EAAU;AAChB,SAAKA,OAAL,GAAexK,UAAU,CAAC,EAAD,EAAK,KAAKyK,cAAV,EAA0BD,OAA1B,CAAzB;AACH;;AACDE,EAAAA,SAAS,CAACzJ,GAAD,EAAM;AACX,WAAOY,iBAAiB,CAAC,KAAK2I,OAAN,EAAevJ,GAAf,EAAoB,IAApB,CAAxB;AACH;;AACD0J,EAAAA,WAAW,CAACpD,KAAD,EAAQqD,oBAAR,EAA8B;AACrC,UAAMpG,KAAK,GAAGF,iBAAiB,CAAC,KAAKoG,SAAL,CAAe,aAAf,CAAD,EAAgCnD,KAAhC,EAAuC,KAAK3D,OAAL,EAAvC,CAA/B,CADqC,CAErC;AACA;;AACA,QAAIgH,oBAAoB,IAAI,CAACpG,KAAK,CAACiB,OAAN,EAA7B,EAA8C;AAC1C;AACA;AACA,YAAM,IAAItB,uBAAJ,CAA4B,4BAA5B,CAAN;AACH;;AACD,WAAOK,KAAP;AACH;;AACDZ,EAAAA,OAAO,GAAG;AACN,WAAO,KAAK8G,SAAL,CAAe,MAAf,CAAP;AACH;;AACDG,EAAAA,kBAAkB,CAAC3E,IAAD,EAAO;AACrB,WAAO,IAAIlI,YAAJ,CAAiB;AAAE8M,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAjB,CAAP;AACH;;AACDC,EAAAA,qBAAqB,CAAC9E,IAAD,EAAO;AACxB,WAAO,IAAIlI,YAAJ,CAAiB;AAAE8M,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAjB,CAAP;AACH;;AACDE,EAAAA,iBAAiB,CAACC,MAAD,EAAS;AACtB,UAAMC,cAAc,GAAG,KAAKT,SAAL,CAAgB,GAAEQ,MAAO,WAAzB,CAAvB;AACA,UAAME,YAAY,GAAG,KAAKV,SAAL,CAAe,cAAf,CAArB;AACA,WAAOS,cAAc,GAAGC,YAAY,GAAGD,cAAlB,GAAmC,EAAxD;AACH;;AACDE,EAAAA,UAAU,GAAG;AACT,UAAMC,aAAa,GAAG,KAAKZ,SAAL,CAAe,SAAf,KAA6B,EAAnD;;AACA,QAAIY,aAAa,YAAYrN,WAA7B,EAA0C;AACtC,aAAOqN,aAAP;AACH;;AACD,QAAIC,OAAO,GAAG,IAAItN,WAAJ,EAAd;AACA8C,IAAAA,MAAM,CAACyK,OAAP,CAAeF,aAAf,EAA8B1K,OAA9B,CAAsC,CAAC,CAACK,GAAD,EAAMsG,KAAN,CAAD,KAAkB;AACpDgE,MAAAA,OAAO,GAAGA,OAAO,CAACE,MAAR,CAAexK,GAAf,EAAoBsG,KAApB,CAAV;AACH,KAFD;AAGA,WAAOgE,OAAP;AACH;;AA5CgB;;AA+CrB,MAAMG,YAAN,CAAmB;AACf;AACAhI,EAAAA,WAAW,CAAC9E,OAAD,EAAU+M,QAAV,EAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,QAAtC,EAAgDtH,KAAK,GAAG,IAAxD,EAA8D;AACrE,SAAK5F,OAAL,GAAeA,OAAf;AACA,SAAK+M,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKD,MAAL,GAAc,KAAKA,MAAL,CAAYE,MAAZ,CAAmB,CAACF,MAAD,CAAnB,CAAd;;AACA,QAAIA,MAAM,YAAYvL,KAAtB,EAA6B;AACzB,WAAKuL,MAAL,GAAcA,MAAd;AACH;;AACD,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,MAAd,CAAqB,CAACD,QAAD,CAArB,CAAhB;;AACA,QAAIA,QAAQ,YAAYxL,KAAxB,EAA+B;AAC3B,WAAKwL,QAAL,GAAgBA,QAAhB;AACH;;AACD,SAAKtH,KAAL,GAAaA,KAAb;AACH;;AACDwH,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKL,QAAZ;AACH;;AACDnC,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKhF,KAAZ;AACH;;AACDyH,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKL,QAAZ;AACH;;AACDM,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKL,MAAL,CAAYrO,MAAZ,CAAmBkD,GAAG,IAAI,CAAC,CAACA,GAA5B,CAAP;AACH;;AACDyL,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKL,QAAL,CAActO,MAAd,CAAqBkD,GAAG,IAAI,CAAC,CAACA,GAA9B,CAAP;AACH;;AACDkJ,EAAAA,SAAS,GAAG;AACR,WAAO,KAAKhL,OAAZ;AACH;;AACDwN,EAAAA,SAAS,GAAG;AACR,WAAO,CAAC,KAAKxN,OAAb;AACH;;AAtCc;;AAyCnB,MAAMyN,qBAAN,CAA4B;AAG5B;AACA;AACA;AACA;AACA;;;AACA,MAAMC,0BAAN,SAAyCD,qBAAzC,CAA+D;AAC3D3I,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGxD,SAAT;AACA,SAAKsE,KAAL,GAAa;AACT+H,MAAAA,KAAK,EAAEtH;AADE,KAAb;AAGA,SAAKrH,KAAL,GAAa,IAAb;AACA,SAAK4O,UAAL,GAAkB,KAAlB;AACH;;AAR0D;;AAU/D,MAAMC,oBAAoB,GAAG,IAAIH,0BAAJ,EAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMI,mBAAN,SAAkCpC,cAAlC,CAAiD;AAC7C5G,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGxD,SAAT;AACA,SAAKuK,cAAL,GAAsBgC,oBAAtB;AACH;;AACW,SAALE,KAAK,CAACnC,OAAD,EAAU;AAClB,WAAO,CAACkC,mBAAD,EAAsBlC,OAAtB,CAAP;AACH;;AACDT,EAAAA,YAAY,CAAC7D,IAAD,EAAO;AACf,WAAO5I,EAAE,CAAC,KAAKsP,iBAAL,CAAuB1G,IAAvB,CAAD,CAAF,CAAiCkD,IAAjC,CAAsCxL,KAAK,CAAC,KAAK8M,SAAL,CAAe,OAAf,CAAD,CAA3C,CAAP;AACH;;AACD5L,EAAAA,QAAQ,CAACoH,IAAD,EAAO;AACX,WAAO5I,EAAE,CAAC,KAAKsP,iBAAL,CAAuB1G,IAAvB,CAAD,CAAF,CAAiCkD,IAAjC,CAAsCxL,KAAK,CAAC,KAAK8M,SAAL,CAAe,OAAf,CAAD,CAA3C,CAAP;AACH;;AACD1L,EAAAA,eAAe,CAACkH,IAAD,EAAO;AAClB,WAAO5I,EAAE,CAAC,KAAKsP,iBAAL,CAAuB1G,IAAvB,CAAD,CAAF,CAAiCkD,IAAjC,CAAsCxL,KAAK,CAAC,KAAK8M,SAAL,CAAe,OAAf,CAAD,CAA3C,CAAP;AACH;;AACDzL,EAAAA,aAAa,CAACiH,IAAD,EAAO;AAChB,WAAO5I,EAAE,CAAC,KAAKsP,iBAAL,CAAuB1G,IAAvB,CAAD,CAAF,CAAiCkD,IAAjC,CAAsCxL,KAAK,CAAC,KAAK8M,SAAL,CAAe,OAAf,CAAD,CAA3C,CAAP;AACH;;AACDxL,EAAAA,MAAM,CAACgH,IAAD,EAAO;AACT,WAAO5I,EAAE,CAAC,KAAKsP,iBAAL,CAAuB1G,IAAvB,CAAD,CAAF,CAAiCkD,IAAjC,CAAsCxL,KAAK,CAAC,KAAK8M,SAAL,CAAe,OAAf,CAAD,CAA3C,CAAP;AACH;;AACDlE,EAAAA,YAAY,CAACN,IAAD,EAAO;AACf,WAAO5I,EAAE,CAAC,KAAKsP,iBAAL,CAAuB1G,IAAvB,CAAD,CAAF,CAAiCkD,IAAjC,CAAsCxL,KAAK,CAAC,KAAK8M,SAAL,CAAe,OAAf,CAAD,CAA3C,CAAP;AACH;;AACDkC,EAAAA,iBAAiB,CAAC1G,IAAD,EAAO;AACpB,QAAI,KAAKwE,SAAL,CAAe,YAAf,CAAJ,EAAkC;AAC9B,aAAO,IAAIgB,YAAJ,CAAiB,KAAjB,EAAwB,KAAKb,kBAAL,CAAwB3E,IAAxB,CAAxB,EAAuD,IAAvD,EAA6D,CAAC,uBAAD,CAA7D,CAAP;AACH;;AACD,QAAI;AACA,YAAM1B,KAAK,GAAG,KAAKmG,WAAL,CAAiB,YAAjB,EAA+B,IAA/B,CAAd;AACA,aAAO,IAAIe,YAAJ,CAAiB,IAAjB,EAAuB,KAAKV,qBAAL,CAA2B9E,IAA3B,CAAvB,EAAyD,GAAzD,EAA8D,EAA9D,EAAkE,CAAC,yBAAD,CAAlE,EAA+F1B,KAA/F,CAAP;AACH,KAHD,CAIA,OAAOW,GAAP,EAAY;AACR,aAAO,IAAIuG,YAAJ,CAAiB,KAAjB,EAAwB,KAAKb,kBAAL,CAAwB3E,IAAxB,CAAxB,EAAuD,IAAvD,EAA6D,CAACf,GAAG,CAACnB,OAAL,CAA7D,CAAP;AACH;AACJ;;AArC4C;;AAuCjD0I,mBAAmB,CAAC1E,IAApB;AAAA;AAAA;AAAA,oFApesGlM,EAoetG,uBAAgH4Q,mBAAhH,SAAgHA,mBAAhH;AAAA;AAAA;;AACAA,mBAAmB,CAACzE,KAApB,kBAresGnM,EAqetG;AAAA,SAAoH4Q,mBAApH;AAAA,WAAoHA,mBAApH;AAAA;;AACA;AAAA,qDAtesG5Q,EAsetG,mBAA2F4Q,mBAA3F,EAA4H,CAAC;AACjHxE,IAAAA,IAAI,EAAElM;AAD2G,GAAD,CAA5H;AAAA;AAIA;AACA;AACA;AACA;AACA;;;AACA,IAAI6Q,oBAAJ;;AACA,CAAC,UAAUA,oBAAV,EAAgC;AAC7BA,EAAAA,oBAAoB,CAAC,MAAD,CAApB,GAA+B,MAA/B;AACAA,EAAAA,oBAAoB,CAAC,OAAD,CAApB,GAAgC,OAAhC;AACH,CAHD,EAGGA,oBAAoB,KAAKA,oBAAoB,GAAG,EAA5B,CAHvB,E,CAIA;;;AACA,IAAIC,iBAAJ;;AACA,CAAC,UAAUA,iBAAV,EAA6B;AAC1BA,EAAAA,iBAAiB,CAAC,oBAAD,CAAjB,GAA0C,oBAA1C;AACAA,EAAAA,iBAAiB,CAAC,UAAD,CAAjB,GAAgC,UAAhC;AACAA,EAAAA,iBAAiB,CAAC,eAAD,CAAjB,GAAqC,eAArC;AACH,CAJD,EAIGA,iBAAiB,KAAKA,iBAAiB,GAAG,EAAzB,CAJpB;;AAKA,IAAIC,wBAAJ;;AACA,CAAC,UAAUA,wBAAV,EAAoC;AACjCA,EAAAA,wBAAwB,CAAC,MAAD,CAAxB,GAAmC,MAAnC;AACAA,EAAAA,wBAAwB,CAAC,OAAD,CAAxB,GAAoC,OAApC;AACAA,EAAAA,wBAAwB,CAAC,cAAD,CAAxB,GAA2C,cAA3C;AACH,CAJD,EAIGA,wBAAwB,KAAKA,wBAAwB,GAAG,EAAhC,CAJ3B;;AAKA,MAAMC,2BAAN,SAA0CX,qBAA1C,CAAgE;AAC5D3I,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGxD,SAAT;AACA,SAAKkL,YAAL,GAAoB,EAApB;AACA,SAAK6B,QAAL,GAAgB,EAAhB;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKC,gBAAL,GAAwBJ,wBAAwB,CAACK,IAAjD;AACA,SAAKxB,QAAL,GAAgB;AACZhN,MAAAA,OAAO,EAAE,GADG;AAEZyO,MAAAA,OAAO,EAAE;AAFG,KAAhB;AAIA,SAAKC,aAAL,GAAqB,CAAC,yCAAD,CAArB;AACA,SAAKC,eAAL,GAAuB,CAAC,2CAAD,CAAvB;AACA,SAAKC,SAAL,GAAiB;AACbC,MAAAA,QAAQ,EAAE,WADG;AAEbC,MAAAA,YAAY,EAAEb,oBAAoB,CAACc,IAFtB;AAGbC,MAAAA,iBAAiB,EAAE;AAHN,KAAjB;AAKA,SAAKpJ,KAAL,GAAa;AACTiJ,MAAAA,QAAQ,EAAE,OADD;AAETI,MAAAA,SAAS,EAAEf,iBAAiB,CAACgB,kBAFpB;AAGTF,MAAAA,iBAAiB,EAAE,IAHV;AAITrB,MAAAA,KAAK,EAAEpG;AAJE,KAAb;AAMA,SAAK4H,OAAL,GAAe;AACXN,MAAAA,QAAQ,EAAE,OADC;AAEXI,MAAAA,SAAS,EAAEf,iBAAiB,CAACkB,aAFlB;AAGXJ,MAAAA,iBAAiB,EAAE;AAHR,KAAf;AAKH;;AA7B2D;;AA+BhE,MAAMK,oBAAoB,GAAG,IAAIjB,2BAAJ,EAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMkB,oBAAN,SAAmC5D,cAAnC,CAAkD;AAC9C5G,EAAAA,WAAW,CAACyK,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAsB;AAC7B;AACA,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,sBAAL,GAA8B;AAC1B,OAACzB,oBAAoB,CAACc,IAAtB,GAA6B,MAAM;AAC/B,eAAOrQ,EAAE,CAAC,KAAK8Q,KAAL,CAAWG,QAAX,CAAoBC,WAArB,CAAF,CAAoCpF,IAApC,CAAyCzL,SAAS,CAAE8Q,MAAD,IAAY;AAClE,cAAIA,MAAM,CAACC,IAAX,EAAiB;AACb,mBAAO,KAAKC,YAAL,CAAkBF,MAAM,CAACC,IAAzB,CAAP;AACH;;AACD,iBAAOpR,EAAE,CAAC,IAAIoO,YAAJ,CAAiB,KAAjB,EAAwB+C,MAAxB,EAAgC,KAAK/D,SAAL,CAAe,kBAAf,CAAhC,EAAoE,KAAKA,SAAL,CAAe,eAAf,CAApE,EAAqG,EAArG,CAAD,CAAT;AACH,SALwD,CAAlD,CAAP;AAMH,OARyB;AAS1B,OAACmC,oBAAoB,CAAC+B,KAAtB,GAA8B,MAAM;AAChC,cAAMC,MAAM,GAAG,WAAf;AACA,cAAMjB,iBAAiB,GAAG,KAAKlD,SAAL,CAAgB,GAAEmE,MAAO,oBAAzB,CAA1B;AACA,eAAOvR,EAAE,CAAC,KAAK8Q,KAAL,CAAWG,QAAX,CAAoBO,QAArB,CAAF,CAAiC1F,IAAjC,CAAsC1L,GAAG,CAAEoR,QAAD,IAAc,KAAKC,sBAAL,CAA4BD,QAA5B,CAAf,CAAzC,EAAgGpR,GAAG,CAAE+Q,MAAD,IAAY;AACnH,cAAI,CAACA,MAAM,CAAC5P,KAAZ,EAAmB;AACf,mBAAO,IAAI6M,YAAJ,CAAiB,IAAjB,EAAuB+C,MAAvB,EAA+B,KAAK/D,SAAL,CAAe,kBAAf,CAA/B,EAAmE,EAAnE,EAAuE,KAAKA,SAAL,CAAe,iBAAf,CAAvE,EAA0G,KAAKC,WAAL,CAAiB8D,MAAjB,EAAyBb,iBAAzB,CAA1G,CAAP;AACH;;AACD,iBAAO,IAAIlC,YAAJ,CAAiB,KAAjB,EAAwB+C,MAAxB,EAAgC,KAAK/D,SAAL,CAAe,kBAAf,CAAhC,EAAoE,KAAKA,SAAL,CAAe,eAAf,CAApE,EAAqG,EAArG,CAAP;AACH,SALyG,CAAnG,EAKH7M,UAAU,CAAEsH,GAAD,IAAS;AACpB,gBAAM0G,MAAM,GAAG,EAAf;;AACA,cAAI1G,GAAG,YAAYhB,uBAAnB,EAA4C;AACxC0H,YAAAA,MAAM,CAACmD,IAAP,CAAY7J,GAAG,CAACnB,OAAhB;AACH,WAFD,MAGK;AACD6H,YAAAA,MAAM,CAACmD,IAAP,CAAY,uBAAZ;AACH;;AACD,iBAAO1R,EAAE,CAAC,IAAIoO,YAAJ,CAAiB,KAAjB,EAAwBvG,GAAxB,EAA6B,KAAKuF,SAAL,CAAe,kBAAf,CAA7B,EAAiEmB,MAAjE,CAAD,CAAT;AACH,SATa,CALP,CAAP;AAeH;AA3ByB,KAA9B;AA6BA,SAAKoD,eAAL,GAAuB;AACnB,OAACpC,oBAAoB,CAACc,IAAtB,GAA6B,MAAM;AAC/B,eAAOrQ,EAAE,CAAC,KAAK8Q,KAAL,CAAWG,QAAX,CAAoBC,WAArB,CAAF,CAAoCpF,IAApC,CAAyC1L,GAAG,CAAE+Q,MAAD,IAAY,CAAC,EAAEA,MAAM,KAAKA,MAAM,CAACC,IAAP,IAAeD,MAAM,CAAC5P,KAA3B,CAAR,CAAd,CAA5C,CAAP;AACH,OAHkB;AAInB,OAACgO,oBAAoB,CAAC+B,KAAtB,GAA8B,MAAM;AAChC,eAAOtR,EAAE,CAAC,KAAK8Q,KAAL,CAAWG,QAAX,CAAoBO,QAArB,CAAF,CAAiC1F,IAAjC,CAAsC1L,GAAG,CAAEoR,QAAD,IAAc,KAAKC,sBAAL,CAA4BD,QAA5B,CAAf,CAAzC,EAAgGpR,GAAG,CAAE+Q,MAAD,IAAY,CAAC,EAAEA,MAAM,KAAKA,MAAM,CAACrI,YAAP,IAAuBqI,MAAM,CAAC5P,KAAnC,CAAR,CAAd,CAAnG,CAAP;AACH;AANkB,KAAvB;AAQA,SAAK4L,cAAL,GAAsBwD,oBAAtB;AACH;;AACW,SAALtB,KAAK,CAACnC,OAAD,EAAU;AAClB,WAAO,CAAC0D,oBAAD,EAAuB1D,OAAvB,CAAP;AACH;;AACe,MAAZkD,YAAY,GAAG;AACf,WAAO,KAAKhD,SAAL,CAAe,wBAAf,CAAP;AACH;;AACmB,MAAhByC,gBAAgB,GAAG;AACnB,WAAO,KAAKzC,SAAL,CAAe,kBAAf,CAAP;AACH;;AACDX,EAAAA,YAAY,CAAC7D,IAAD,EAAO;AACf,QAAI,KAAKwE,SAAL,CAAe,iBAAf,MAAsCoC,iBAAiB,CAACoC,QAA5D,EAAsE;AAClE,aAAO,KAAKC,aAAL,CAAmBjJ,IAAI,CAAC1G,KAAxB,EAA+B0G,IAAI,CAAC9G,QAApC,CAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAKgQ,gBAAL,GAAwBhG,IAAxB,CAA6BzL,SAAS,CAAEuM,MAAD,IAAY;AACtD,YAAI,CAACA,MAAL,EAAa;AACT,eAAKmF,iBAAL;AACA,iBAAO/R,EAAE,CAAC,IAAIoO,YAAJ,CAAiB,IAAjB,CAAD,CAAT;AACH;;AACD,eAAO,KAAK4D,sBAAL,EAAP;AACH,OAN4C,CAAtC,CAAP;AAOH;AACJ;;AACDA,EAAAA,sBAAsB,GAAG;AACrB,UAAMC,qBAAqB,GAAG,KAAKjB,sBAAL,CAA4B,KAAKZ,YAAjC,CAA9B;;AACA,QAAI6B,qBAAJ,EAA2B;AACvB,aAAOA,qBAAqB,CAAC9O,IAAtB,CAA2B,IAA3B,CAAP;AACH;;AACD,UAAM,IAAIe,KAAJ,CAAW,IAAG,KAAKkM,YAAa;AAC9C,gEADc,CAAN;AAEH;;AACDlH,EAAAA,YAAY,CAAChC,KAAD,EAAQ;AAChB,UAAMqK,MAAM,GAAG,SAAf;AACA,UAAMW,GAAG,GAAG,KAAKvE,iBAAL,CAAuB4D,MAAvB,CAAZ;AACA,UAAMjB,iBAAiB,GAAG,KAAKlD,SAAL,CAAgB,GAAEmE,MAAO,oBAAzB,CAA1B;AACA,WAAO,KAAKV,IAAL,CAAUsB,IAAV,CAAeD,GAAf,EAAoB,KAAKE,uBAAL,CAA6BlL,KAA7B,CAApB,EAAyD;AAAE+G,MAAAA,OAAO,EAAE,KAAKF,UAAL;AAAX,KAAzD,EAAyFjC,IAAzF,CAA8F1L,GAAG,CAAEiM,GAAD,IAAS;AAC9G,aAAO,IAAI+B,YAAJ,CAAiB,IAAjB,EAAuB/B,GAAvB,EAA4B,KAAKe,SAAL,CAAe,kBAAf,CAA5B,EAAgE,EAAhE,EAAoE,KAAKA,SAAL,CAAe,iBAAf,CAApE,EAAuG,KAAKiF,oBAAL,CAA0BhG,GAA1B,EAA+BnF,KAA/B,EAAsCoJ,iBAAtC,CAAvG,CAAP;AACH,KAFuG,CAAjG,EAEH/P,UAAU,CAAE8L,GAAD,IAAS,KAAKiG,mBAAL,CAAyBjG,GAAzB,CAAV,CAFP,CAAP;AAGH;;AACDwF,EAAAA,aAAa,CAACU,QAAD,EAAWzQ,QAAX,EAAqB;AAC9B,UAAMyP,MAAM,GAAG,OAAf;AACA,UAAMW,GAAG,GAAG,KAAKvE,iBAAL,CAAuB4D,MAAvB,CAAZ;AACA,UAAMjB,iBAAiB,GAAG,KAAKlD,SAAL,CAAgB,GAAEmE,MAAO,oBAAzB,CAA1B;AACA,WAAO,KAAKV,IAAL,CAAUsB,IAAV,CAAeD,GAAf,EAAoB,KAAKM,wBAAL,CAA8BD,QAA9B,EAAwCzQ,QAAxC,CAApB,EAAuE;AAAEmM,MAAAA,OAAO,EAAE,KAAKF,UAAL;AAAX,KAAvE,EAAuGjC,IAAvG,CAA4G1L,GAAG,CAAEiM,GAAD,IAAS;AAC5H,aAAO,IAAI+B,YAAJ,CAAiB,IAAjB,EAAuB/B,GAAvB,EAA4B,KAAKe,SAAL,CAAe,kBAAf,CAA5B,EAAgE,EAAhE,EAAoE,KAAKA,SAAL,CAAe,iBAAf,CAApE,EAAuG,KAAKC,WAAL,CAAiBhB,GAAjB,EAAsBiE,iBAAtB,CAAvG,CAAP;AACH,KAFqH,CAA/G,EAEH/P,UAAU,CAAE8L,GAAD,IAAS,KAAKiG,mBAAL,CAAyBjG,GAAzB,CAAV,CAFP,CAAP;AAGH;;AACD0F,EAAAA,iBAAiB,GAAG;AAChB,SAAKhB,MAAL,CAAY0B,QAAZ,CAAqBC,IAArB,GAA4B,KAAKC,gBAAL,EAA5B;AACH;;AACDb,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKH,eAAL,CAAqB,KAAKvB,YAA1B,EAAwCjN,IAAxC,CAA6C,IAA7C,CAAP;AACH;;AACDkO,EAAAA,YAAY,CAACD,IAAD,EAAO;AACf,UAAMG,MAAM,GAAG,OAAf;AACA,UAAMW,GAAG,GAAG,KAAKvE,iBAAL,CAAuB4D,MAAvB,CAAZ;AACA,UAAMjB,iBAAiB,GAAG,KAAKlD,SAAL,CAAgB,GAAEmE,MAAO,oBAAzB,CAA1B;AACA,WAAO,KAAKV,IAAL,CAAUsB,IAAV,CAAeD,GAAf,EAAoB,KAAKU,oBAAL,CAA0BxB,IAA1B,CAApB,EAAqD;AAAEnD,MAAAA,OAAO,EAAE,KAAKF,UAAL;AAAX,KAArD,EAAqFjC,IAArF,CAA0F1L,GAAG,CAAEiM,GAAD,IAAS;AAC1G,aAAO,IAAI+B,YAAJ,CAAiB,IAAjB,EAAuB/B,GAAvB,EAA4B,KAAKe,SAAL,CAAe,kBAAf,CAA5B,EAAgE,EAAhE,EAAoE,KAAKA,SAAL,CAAe,iBAAf,CAApE,EAAuG,KAAKC,WAAL,CAAiBhB,GAAjB,EAAsBiE,iBAAtB,CAAvG,CAAP;AACH,KAFmG,CAA7F,EAEH/P,UAAU,CAAE8L,GAAD,IAAS,KAAKiG,mBAAL,CAAyBjG,GAAzB,CAAV,CAFP,CAAP;AAGH;;AACDuG,EAAAA,oBAAoB,CAACxB,IAAD,EAAO;AACvB,UAAMD,MAAM,GAAG;AACX0B,MAAAA,UAAU,EAAE,KAAKzF,SAAL,CAAe,iBAAf,CADD;AAEXgE,MAAAA,IAAI,EAAEA,IAFK;AAGX0B,MAAAA,YAAY,EAAE,KAAK1F,SAAL,CAAe,mBAAf,CAHH;AAIX2F,MAAAA,SAAS,EAAE,KAAK3F,SAAL,CAAe,UAAf;AAJA,KAAf;AAMA,WAAO,KAAK4F,mBAAL,CAAyB,KAAKC,WAAL,CAAiB,KAAKC,sBAAL,CAA4B/B,MAA5B,CAAjB,CAAzB,CAAP;AACH;;AACDiB,EAAAA,uBAAuB,CAAClL,KAAD,EAAQ;AAC3B,UAAMiK,MAAM,GAAG;AACX0B,MAAAA,UAAU,EAAE,KAAKzF,SAAL,CAAe,mBAAf,CADD;AAEXpE,MAAAA,aAAa,EAAE9B,KAAK,CAAC6B,eAAN,EAFJ;AAGXoK,MAAAA,KAAK,EAAE,KAAK/F,SAAL,CAAe,eAAf,CAHI;AAIX2F,MAAAA,SAAS,EAAE,KAAK3F,SAAL,CAAe,UAAf;AAJA,KAAf;AAMA,WAAO,KAAK4F,mBAAL,CAAyB,KAAKC,WAAL,CAAiB,KAAKC,sBAAL,CAA4B/B,MAA5B,CAAjB,CAAzB,CAAP;AACH;;AACDqB,EAAAA,wBAAwB,CAACD,QAAD,EAAWzQ,QAAX,EAAqB;AACzC,UAAMqP,MAAM,GAAG;AACX0B,MAAAA,UAAU,EAAE,KAAKzF,SAAL,CAAe,iBAAf,CADD;AAEXmF,MAAAA,QAAQ,EAAEA,QAFC;AAGXzQ,MAAAA,QAAQ,EAAEA,QAHC;AAIXqR,MAAAA,KAAK,EAAE,KAAK/F,SAAL,CAAe,aAAf;AAJI,KAAf;AAMA,WAAO,KAAK4F,mBAAL,CAAyB,KAAKC,WAAL,CAAiB,KAAKC,sBAAL,CAA4B/B,MAA5B,CAAjB,CAAzB,CAAP;AACH;;AACDiC,EAAAA,eAAe,GAAG;AACd,QAAI,KAAKvD,gBAAL,KAA0BJ,wBAAwB,CAAC4D,KAAvD,EAA8D;AAC1D,UAAI,KAAKjG,SAAL,CAAe,UAAf,KAA8B,KAAKA,SAAL,CAAe,cAAf,CAAlC,EAAkE;AAC9D,eAAO,IAAIzM,WAAJ,CAAgB;AACnB2S,UAAAA,aAAa,EAAE,WAAWC,IAAI,CAAC,KAAKnG,SAAL,CAAe,UAAf,IAA6B,GAA7B,GAAmC,KAAKA,SAAL,CAAe,cAAf,CAApC;AADX,SAAhB,CAAP;AAGH,OAJD,MAKK;AACD,cAAMlJ,KAAK,CAAC,sFAAD,CAAX;AACH;AACJ;;AACD,WAAOY,SAAP;AACH;;AACDiJ,EAAAA,UAAU,GAAG;AACT,QAAIE,OAAO,GAAG,MAAMF,UAAN,EAAd;AACAE,IAAAA,OAAO,GAAGA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,mCAA/B,CAAV;AACA,UAAMqF,WAAW,GAAG,KAAKJ,eAAL,EAApB;;AACA,QAAII,WAAW,KAAK1O,SAApB,EAA+B;AAC3B,aAAOmJ,OAAP;AACH;;AACD,SAAK,MAAMwF,SAAX,IAAwBD,WAAW,CAAC9P,IAAZ,EAAxB,EAA4C;AACxC,WAAK,MAAMgQ,WAAX,IAA0BF,WAAW,CAACG,MAAZ,CAAmBF,SAAnB,CAA1B,EAAyD;AACrDxF,QAAAA,OAAO,GAAGA,OAAO,CAACE,MAAR,CAAesF,SAAf,EAA0BC,WAA1B,CAAV;AACH;AACJ;;AACD,WAAOzF,OAAP;AACH;;AACDgF,EAAAA,WAAW,CAAC9B,MAAD,EAAS;AAChB1N,IAAAA,MAAM,CAACyK,OAAP,CAAeiD,MAAf,EAAuB7N,OAAvB,CAA+B,CAAC,CAACK,GAAD,EAAMP,GAAN,CAAD,KAAgB,CAACA,GAAD,IAAQ,OAAO+N,MAAM,CAACxN,GAAD,CAApE;AACA,WAAOwN,MAAP;AACH;;AACD+B,EAAAA,sBAAsB,CAAC/B,MAAD,EAAS;AAC3B,QAAI,KAAKtB,gBAAL,KAA0BJ,wBAAwB,CAACmE,YAAvD,EAAqE;AACjE,UAAI,KAAKxG,SAAL,CAAe,UAAf,KAA8B,KAAKA,SAAL,CAAe,cAAf,CAAlC,EAAkE;AAC9D,eAAO,EACH,GAAG+D,MADA;AAEH4B,UAAAA,SAAS,EAAE,KAAK3F,SAAL,CAAe,UAAf,CAFR;AAGHyG,UAAAA,aAAa,EAAE,KAAKzG,SAAL,CAAe,cAAf;AAHZ,SAAP;AAKH,OAND,MAOK;AACD,cAAMlJ,KAAK,CAAC,6FAAD,CAAX;AACH;AACJ;;AACD,WAAOiN,MAAP;AACH;;AACDmB,EAAAA,mBAAmB,CAACjG,GAAD,EAAM;AACrB,QAAIkC,MAAM,GAAG,EAAb;;AACA,QAAIlC,GAAG,YAAYzL,iBAAnB,EAAsC;AAClC,UAAIyL,GAAG,CAAC9K,KAAJ,CAAUuS,iBAAd,EAAiC;AAC7BvF,QAAAA,MAAM,CAACmD,IAAP,CAAYrF,GAAG,CAAC9K,KAAJ,CAAUuS,iBAAtB;AACH,OAFD,MAGK;AACDvF,QAAAA,MAAM,GAAG,KAAKnB,SAAL,CAAe,eAAf,CAAT;AACH;AACJ,KAPD,MAQK,IAAIf,GAAG,YAAYxF,uBAAnB,EAA4C;AAC7C0H,MAAAA,MAAM,CAACmD,IAAP,CAAYrF,GAAG,CAAC3F,OAAhB;AACH,KAFI,MAGA;AACD6H,MAAAA,MAAM,CAACmD,IAAP,CAAY,uBAAZ;AACH;;AACD,WAAO1R,EAAE,CAAC,IAAIoO,YAAJ,CAAiB,KAAjB,EAAwB/B,GAAxB,EAA6B,KAAKe,SAAL,CAAe,kBAAf,CAA7B,EAAiEmB,MAAjE,EAAyE,EAAzE,CAAD,CAAT;AACH;;AACDoE,EAAAA,gBAAgB,GAAG;AACf,UAAMxB,MAAM,GAAG;AACX4C,MAAAA,aAAa,EAAE,KAAK3G,SAAL,CAAe,wBAAf,CADJ;AAEX2F,MAAAA,SAAS,EAAE,KAAK3F,SAAL,CAAe,UAAf,CAFA;AAGX0F,MAAAA,YAAY,EAAE,KAAK1F,SAAL,CAAe,uBAAf,CAHH;AAIX+F,MAAAA,KAAK,EAAE,KAAK/F,SAAL,CAAe,iBAAf,CAJI;AAKX4G,MAAAA,KAAK,EAAE,KAAK5G,SAAL,CAAe,iBAAf,CALI;AAMX,SAAG,KAAKA,SAAL,CAAe,kBAAf;AANQ,KAAf;AAQA,UAAM+C,QAAQ,GAAG,KAAKxC,iBAAL,CAAuB,WAAvB,CAAjB;AACA,UAAMsG,KAAK,GAAG,KAAKjB,mBAAL,CAAyB,KAAKC,WAAL,CAAiB9B,MAAjB,CAAzB,CAAd;AACA,WAAQ,GAAEhB,QAAS,IAAG8D,KAAM,EAA5B;AACH;;AACDxC,EAAAA,sBAAsB,CAACyC,IAAD,EAAO;AACzB,WAAOA,IAAI,GACLA,IAAI,CAACvP,KAAL,CAAW,GAAX,EAAgBwP,MAAhB,CAAuB,CAACC,GAAD,EAAMC,IAAN,KAAe;AACpC,YAAMhQ,IAAI,GAAGgQ,IAAI,CAAC1P,KAAL,CAAW,GAAX,CAAb;AACAyP,MAAAA,GAAG,CAAC/P,IAAI,CAAC,CAAD,CAAL,CAAH,GAAeyB,kBAAkB,CAACzB,IAAI,CAAC,CAAD,CAAL,CAAjC;AACA,aAAO+P,GAAP;AACH,KAJC,EAIC,EAJD,CADK,GAML,EANN;AAOH;;AACDpB,EAAAA,mBAAmB,CAAC7B,MAAD,EAAS;AACxB,WAAO1N,MAAM,CAACC,IAAP,CAAYyN,MAAZ,EACF/Q,GADE,CACGyE,CAAD,IAAO;AACZ,aAAQ,GAAEyP,kBAAkB,CAACzP,CAAD,CAAI,IAAGyP,kBAAkB,CAACnD,MAAM,CAACtM,CAAD,CAAP,CAAY,EAAjE;AACH,KAHM,EAIFqB,IAJE,CAIG,GAJH,CAAP;AAKH;;AACDmM,EAAAA,oBAAoB,CAAChG,GAAD,EAAMkI,aAAN,EAAqBjE,iBAArB,EAAwC;AACxD,UAAMkE,cAAc,GAAG,KAAKnH,WAAL,CAAiBhB,GAAjB,EAAsBiE,iBAAtB,CAAvB;;AACA,QAAI,CAACkE,cAAc,CAACzL,eAAf,EAAD,IAAqCwL,aAAa,CAACxL,eAAd,EAAzC,EAA0E;AACtEyL,MAAAA,cAAc,CAACvL,eAAf,CAA+BsL,aAAa,CAACxL,eAAd,EAA/B;AACH;;AACD,WAAOyL,cAAP;AACH;;AACDhT,EAAAA,QAAQ,CAACoH,IAAD,EAAO;AACX,UAAM,IAAI1E,KAAJ,CAAU,4EAAV,CAAN;AACH;;AACDxC,EAAAA,eAAe,CAACkH,IAAD,EAAO;AAClB,UAAM,IAAI1E,KAAJ,CAAU,mFAAV,CAAN;AACH;;AACDvC,EAAAA,aAAa,CAACiH,IAAI,GAAG,EAAR,EAAY;AACrB,UAAM,IAAI1E,KAAJ,CAAU,iFAAV,CAAN;AACH;;AACDtC,EAAAA,MAAM,GAAG;AACL,WAAO5B,EAAE,CAAC,IAAIoO,YAAJ,CAAiB,IAAjB,CAAD,CAAT;AACH;;AApP6C;;AAsPlDwC,oBAAoB,CAAClG,IAArB;AAAA,mBAAiHkG,oBAAjH,EA/1BsGpS,EA+1BtG,UAAuJiC,EAAE,CAACgU,UAA1J,GA/1BsGjW,EA+1BtG,UAAiLU,EAAE,CAACwV,cAApL,GA/1BsGlW,EA+1BtG,UAA+Me,SAA/M;AAAA;;AACAqR,oBAAoB,CAACjG,KAArB,kBAh2BsGnM,EAg2BtG;AAAA,SAAqHoS,oBAArH;AAAA,WAAqHA,oBAArH;AAAA;;AACA;AAAA,qDAj2BsGpS,EAi2BtG,mBAA2FoS,oBAA3F,EAA6H,CAAC;AAClHhG,IAAAA,IAAI,EAAElM;AAD4G,GAAD,CAA7H,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEkM,MAAAA,IAAI,EAAEnK,EAAE,CAACgU;AAAX,KAAD,EAA0B;AAAE7J,MAAAA,IAAI,EAAE1L,EAAE,CAACwV;AAAX,KAA1B,EAAuD;AAAE9J,MAAAA,IAAI,EAAE9F,SAAR;AAAmB+F,MAAAA,UAAU,EAAE,CAAC;AACpHD,QAAAA,IAAI,EAAEjM,MAD8G;AAEpHoE,QAAAA,IAAI,EAAE,CAACxD,SAAD;AAF8G,OAAD;AAA/B,KAAvD,CAAP;AAGlB,GALxB;AAAA;AAOA;AACA;AACA;AACA;AACA;;;AACA,MAAMoV,6BAAN,SAA4C5F,qBAA5C,CAAkE;AAC9D3I,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGxD,SAAT;AACA,SAAKkL,YAAL,GAAoB,YAApB;AACA,SAAK7M,KAAL,GAAa;AACTiO,MAAAA,UAAU,EAAE,KADH;AAETiB,MAAAA,QAAQ,EAAE,OAFD;AAGTyE,MAAAA,MAAM,EAAE,MAHC;AAITtE,MAAAA,iBAAiB,EAAE,IAJV;AAKThC,MAAAA,QAAQ,EAAE;AACNhN,QAAAA,OAAO,EAAE,GADH;AAENyO,QAAAA,OAAO,EAAE;AAFH,OALD;AASTC,MAAAA,aAAa,EAAE,CAAC,2DAAD,CATN;AAUTC,MAAAA,eAAe,EAAE,CAAC,uCAAD;AAVR,KAAb;AAYA,SAAKzO,QAAL,GAAgB;AACZ0N,MAAAA,UAAU,EAAE,KADA;AAEZiB,MAAAA,QAAQ,EAAE,UAFE;AAGZyE,MAAAA,MAAM,EAAE,MAHI;AAIZtE,MAAAA,iBAAiB,EAAE,IAJP;AAKZhC,MAAAA,QAAQ,EAAE;AACNhN,QAAAA,OAAO,EAAE,GADH;AAENyO,QAAAA,OAAO,EAAE;AAFH,OALE;AASZC,MAAAA,aAAa,EAAE,CAAC,yCAAD,CATH;AAUZC,MAAAA,eAAe,EAAE,CAAC,wCAAD;AAVL,KAAhB;AAYA,SAAK4E,WAAL,GAAmB;AACf1E,MAAAA,QAAQ,EAAE,cADK;AAEfyE,MAAAA,MAAM,EAAE,MAFO;AAGftG,MAAAA,QAAQ,EAAE;AACNhN,QAAAA,OAAO,EAAE,GADH;AAENyO,QAAAA,OAAO,EAAE;AAFH,OAHK;AAOfC,MAAAA,aAAa,EAAE,CAAC,yCAAD,CAPA;AAQfC,MAAAA,eAAe,EAAE,CAAC,2DAAD;AARF,KAAnB;AAUA,SAAK6E,SAAL,GAAiB;AACb3E,MAAAA,QAAQ,EAAE,YADG;AAEbyE,MAAAA,MAAM,EAAE,KAFK;AAGbtG,MAAAA,QAAQ,EAAE;AACNhN,QAAAA,OAAO,EAAE,GADH;AAENyO,QAAAA,OAAO,EAAE;AAFH,OAHG;AAObgF,MAAAA,qBAAqB,EAAE,sBAPV;AAQb/E,MAAAA,aAAa,EAAE,CAAC,yCAAD,CARF;AASbC,MAAAA,eAAe,EAAE,CAAC,8CAAD;AATJ,KAAjB;AAWA,SAAKrO,MAAL,GAAc;AACVsN,MAAAA,UAAU,EAAE,KADF;AAEViB,MAAAA,QAAQ,EAAE,QAFA;AAGVyE,MAAAA,MAAM,EAAE,QAHE;AAIVtG,MAAAA,QAAQ,EAAE;AACNhN,QAAAA,OAAO,EAAE,GADH;AAENyO,QAAAA,OAAO,EAAE;AAFH,OAJA;AAQVC,MAAAA,aAAa,EAAE,CAAC,yCAAD,CARL;AASVC,MAAAA,eAAe,EAAE,CAAC,wCAAD;AATP,KAAd;AAWA,SAAK/G,YAAL,GAAoB;AAChBiH,MAAAA,QAAQ,EAAE,eADM;AAEhByE,MAAAA,MAAM,EAAE,MAFQ;AAGhBtE,MAAAA,iBAAiB,EAAE,IAHH;AAIhBhC,MAAAA,QAAQ,EAAE;AACNhN,QAAAA,OAAO,EAAE,IADH;AAENyO,QAAAA,OAAO,EAAE;AAFH,OAJM;AAQhBC,MAAAA,aAAa,EAAE,CAAC,yCAAD,CARC;AAShBC,MAAAA,eAAe,EAAE,CAAC,6CAAD;AATD,KAApB;AAWA,SAAK/I,KAAL,GAAa;AACT+H,MAAAA,KAAK,EAAEtH,iBADE;AAEThE,MAAAA,GAAG,EAAE,YAFI;AAGTqR,MAAAA,MAAM,EAAE,CAACzD,MAAD,EAASlF,GAAT,EAAca,OAAd,KAA0B3I,iBAAiB,CAAC8H,GAAG,CAACmB,IAAL,EAAWN,OAAO,CAAChG,KAAR,CAAcvD,GAAzB;AAH1C,KAAb;AAKA,SAAK4K,MAAL,GAAc;AACV5K,MAAAA,GAAG,EAAE,aADK;AAEVqR,MAAAA,MAAM,EAAE,CAACzD,MAAD,EAASlF,GAAT,EAAca,OAAd,KAA0B3I,iBAAiB,CAAC8H,GAAG,CAAC9K,KAAL,EAAY2L,OAAO,CAACqB,MAAR,CAAe5K,GAA3B,EAAgCuJ,OAAO,CAACqE,MAAD,CAAP,CAAgBvB,aAAhD;AAFzC,KAAd;AAIA,SAAKxB,QAAL,GAAgB;AACZ7K,MAAAA,GAAG,EAAE,eADO;AAEZqR,MAAAA,MAAM,EAAE,CAACzD,MAAD,EAASlF,GAAT,EAAca,OAAd,KAA0B3I,iBAAiB,CAAC8H,GAAG,CAACmB,IAAL,EAAWN,OAAO,CAACsB,QAAR,CAAiB7K,GAA5B,EAAiCuJ,OAAO,CAACqE,MAAD,CAAP,CAAgBtB,eAAjD;AAFvC,KAAhB;AAIH;;AApF6D;;AAsFlE,MAAMgF,uBAAuB,GAAG,IAAIN,6BAAJ,EAAhsBAAN,SAAqClI,cAArC,CAAoD;AAChD5G,EAAAA,WAAW,CAACyK,IAAD,EAAOC,KAAP,EAAc;AACrB;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAK3D,cAAL,GAAsB8H,uBAAtB;AACH;;AACW,SAAL5F,KAAK,CAACnC,OAAD,EAAU;AAClB,WAAO,CAACgI,sBAAD,EAAyBhI,OAAzB,CAAP;AACH;;AACDT,EAAAA,YAAY,CAAC7D,IAAD,EAAO;AACf,UAAM2I,MAAM,GAAG,OAAf;AACA,UAAMqD,MAAM,GAAG,KAAKxH,SAAL,CAAgB,GAAEmE,MAAO,SAAzB,CAAf;AACA,UAAMW,GAAG,GAAG,KAAKvE,iBAAL,CAAuB4D,MAAvB,CAAZ;AACA,UAAMjB,iBAAiB,GAAG,KAAKlD,SAAL,CAAgB,GAAEmE,MAAO,oBAAzB,CAA1B;AACA,WAAO,KAAKV,IAAL,CAAUsE,OAAV,CAAkBP,MAAlB,EAA0B1C,GAA1B,EAA+B;AAAE1E,MAAAA,IAAI,EAAE5E,IAAR;AAAcwM,MAAAA,OAAO,EAAE,UAAvB;AAAmCnH,MAAAA,OAAO,EAAE,KAAKF,UAAL;AAA5C,KAA/B,EAAgGjC,IAAhG,CAAqG1L,GAAG,CAAEiM,GAAD,IAAS;AACrH,UAAI,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,aAAzB,CAAJ,EAA4C;AACxC,cAAM,KAAKhE,kBAAL,CAAwB3E,IAAxB,CAAN;AACH;;AACD,aAAOyD,GAAP;AACH,KAL8G,CAAxG,EAKHjM,GAAG,CAAEiM,GAAD,IAAS;AACb,aAAO,IAAI+B,YAAJ,CAAiB,IAAjB,EAAuB/B,GAAvB,EAA4B,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,mBAAzB,CAA5B,EAA0E,EAA1E,EAA8E,KAAKnE,SAAL,CAAe,iBAAf,EAAkCmE,MAAlC,EAA0ClF,GAA1C,EAA+C,KAAKa,OAApD,CAA9E,EAA4I,KAAKG,WAAL,CAAiB,KAAKD,SAAL,CAAe,cAAf,EAA+BmE,MAA/B,EAAuClF,GAAvC,EAA4C,KAAKa,OAAjD,CAAjB,EAA4EoD,iBAA5E,CAA5I,CAAP;AACH,KAFM,CALA,EAOH/P,UAAU,CAAE8L,GAAD,IAAS;AACpB,aAAO,KAAKiG,mBAAL,CAAyBjG,GAAzB,EAA8BkF,MAA9B,CAAP;AACH,KAFa,CAPP,CAAP;AAUH;;AACD/P,EAAAA,QAAQ,CAACoH,IAAD,EAAO;AACX,UAAM2I,MAAM,GAAG,UAAf;AACA,UAAMqD,MAAM,GAAG,KAAKxH,SAAL,CAAgB,GAAEmE,MAAO,SAAzB,CAAf;AACA,UAAMW,GAAG,GAAG,KAAKvE,iBAAL,CAAuB4D,MAAvB,CAAZ;AACA,UAAMjB,iBAAiB,GAAG,KAAKlD,SAAL,CAAgB,GAAEmE,MAAO,oBAAzB,CAA1B;AACA,WAAO,KAAKV,IAAL,CAAUsE,OAAV,CAAkBP,MAAlB,EAA0B1C,GAA1B,EAA+B;AAAE1E,MAAAA,IAAI,EAAE5E,IAAR;AAAcwM,MAAAA,OAAO,EAAE,UAAvB;AAAmCnH,MAAAA,OAAO,EAAE,KAAKF,UAAL;AAA5C,KAA/B,EAAgGjC,IAAhG,CAAqG1L,GAAG,CAAEiM,GAAD,IAAS;AACrH,UAAI,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,aAAzB,CAAJ,EAA4C;AACxC,cAAM,KAAKhE,kBAAL,CAAwB3E,IAAxB,CAAN;AACH;;AACD,aAAOyD,GAAP;AACH,KAL8G,CAAxG,EAKHjM,GAAG,CAAEiM,GAAD,IAAS;AACb,aAAO,IAAI+B,YAAJ,CAAiB,IAAjB,EAAuB/B,GAAvB,EAA4B,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,mBAAzB,CAA5B,EAA0E,EAA1E,EAA8E,KAAKnE,SAAL,CAAe,iBAAf,EAAkCmE,MAAlC,EAA0ClF,GAA1C,EAA+C,KAAKa,OAApD,CAA9E,EAA4I,KAAKG,WAAL,CAAiB,KAAKD,SAAL,CAAe,cAAf,EAA+B,OAA/B,EAAwCf,GAAxC,EAA6C,KAAKa,OAAlD,CAAjB,EAA6EoD,iBAA7E,CAA5I,CAAP;AACH,KAFM,CALA,EAOH/P,UAAU,CAAE8L,GAAD,IAAS;AACpB,aAAO,KAAKiG,mBAAL,CAAyBjG,GAAzB,EAA8BkF,MAA9B,CAAP;AACH,KAFa,CAPP,CAAP;AAUH;;AACD7P,EAAAA,eAAe,CAACkH,IAAD,EAAO;AAClB,UAAM2I,MAAM,GAAG,aAAf;AACA,UAAMqD,MAAM,GAAG,KAAKxH,SAAL,CAAgB,GAAEmE,MAAO,SAAzB,CAAf;AACA,UAAMW,GAAG,GAAG,KAAKvE,iBAAL,CAAuB4D,MAAvB,CAAZ;AACA,WAAO,KAAKV,IAAL,CAAUsE,OAAV,CAAkBP,MAAlB,EAA0B1C,GAA1B,EAA+B;AAAE1E,MAAAA,IAAI,EAAE5E,IAAR;AAAcwM,MAAAA,OAAO,EAAE,UAAvB;AAAmCnH,MAAAA,OAAO,EAAE,KAAKF,UAAL;AAA5C,KAA/B,EAAgGjC,IAAhG,CAAqG1L,GAAG,CAAEiM,GAAD,IAAS;AACrH,UAAI,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,aAAzB,CAAJ,EAA4C;AACxC,cAAM,KAAKhE,kBAAL,EAAN;AACH;;AACD,aAAOlB,GAAP;AACH,KAL8G,CAAxG,EAKHjM,GAAG,CAAEiM,GAAD,IAAS;AACb,aAAO,IAAI+B,YAAJ,CAAiB,IAAjB,EAAuB/B,GAAvB,EAA4B,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,mBAAzB,CAA5B,EAA0E,EAA1E,EAA8E,KAAKnE,SAAL,CAAe,iBAAf,EAAkCmE,MAAlC,EAA0ClF,GAA1C,EAA+C,KAAKa,OAApD,CAA9E,CAAP;AACH,KAFM,CALA,EAOH3M,UAAU,CAAE8L,GAAD,IAAS;AACpB,aAAO,KAAKiG,mBAAL,CAAyBjG,GAAzB,EAA8BkF,MAA9B,CAAP;AACH,KAFa,CAPP,CAAP;AAUH;;AACD5P,EAAAA,aAAa,CAACiH,IAAI,GAAG,EAAR,EAAY;AACrB,UAAM2I,MAAM,GAAG,WAAf;AACA,UAAMqD,MAAM,GAAG,KAAKxH,SAAL,CAAgB,GAAEmE,MAAO,SAAzB,CAAf;AACA,UAAMW,GAAG,GAAG,KAAKvE,iBAAL,CAAuB4D,MAAvB,CAAZ;AACA,UAAM8D,QAAQ,GAAG,KAAKjI,SAAL,CAAgB,GAAEmE,MAAO,wBAAzB,CAAjB;AACA3I,IAAAA,IAAI,CAACyM,QAAD,CAAJ,GAAiB,KAAKvE,KAAL,CAAWG,QAAX,CAAoBC,WAApB,CAAgCmE,QAAhC,CAAjB;AACA,WAAO,KAAKxE,IAAL,CAAUsE,OAAV,CAAkBP,MAAlB,EAA0B1C,GAA1B,EAA+B;AAAE1E,MAAAA,IAAI,EAAE5E,IAAR;AAAcwM,MAAAA,OAAO,EAAE,UAAvB;AAAmCnH,MAAAA,OAAO,EAAE,KAAKF,UAAL;AAA5C,KAA/B,EAAgGjC,IAAhG,CAAqG1L,GAAG,CAAEiM,GAAD,IAAS;AACrH,UAAI,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,aAAzB,CAAJ,EAA4C;AACxC,cAAM,KAAKhE,kBAAL,EAAN;AACH;;AACD,aAAOlB,GAAP;AACH,KAL8G,CAAxG,EAKHjM,GAAG,CAAEiM,GAAD,IAAS;AACb,aAAO,IAAI+B,YAAJ,CAAiB,IAAjB,EAAuB/B,GAAvB,EAA4B,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,mBAAzB,CAA5B,EAA0E,EAA1E,EAA8E,KAAKnE,SAAL,CAAe,iBAAf,EAAkCmE,MAAlC,EAA0ClF,GAA1C,EAA+C,KAAKa,OAApD,CAA9E,CAAP;AACH,KAFM,CALA,EAOH3M,UAAU,CAAE8L,GAAD,IAAS;AACpB,aAAO,KAAKiG,mBAAL,CAAyBjG,GAAzB,EAA8BkF,MAA9B,CAAP;AACH,KAFa,CAPP,CAAP;AAUH;;AACD3P,EAAAA,MAAM,GAAG;AACL,UAAM2P,MAAM,GAAG,QAAf;AACA,UAAMqD,MAAM,GAAG,KAAKxH,SAAL,CAAgB,GAAEmE,MAAO,SAAzB,CAAf;AACA,UAAMW,GAAG,GAAG,KAAKvE,iBAAL,CAAuB4D,MAAvB,CAAZ;AACA,WAAOvR,EAAE,CAAC,EAAD,CAAF,CAAO8L,IAAP,CAAYzL,SAAS,CAAEgM,GAAD,IAAS;AAClC,UAAI,CAAC6F,GAAL,EAAU;AACN,eAAOlS,EAAE,CAACqM,GAAD,CAAT;AACH;;AACD,aAAO,KAAKwE,IAAL,CAAUsE,OAAV,CAAkBP,MAAlB,EAA0B1C,GAA1B,EAA+B;AAAEkD,QAAAA,OAAO,EAAE,UAAX;AAAuBnH,QAAAA,OAAO,EAAE,KAAKF,UAAL;AAAhC,OAA/B,CAAP;AACH,KAL2B,CAArB,EAKH3N,GAAG,CAAEiM,GAAD,IAAS;AACb,UAAI,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,aAAzB,CAAJ,EAA4C;AACxC,cAAM,KAAKhE,kBAAL,EAAN;AACH;;AACD,aAAOlB,GAAP;AACH,KALM,CALA,EAUHjM,GAAG,CAAEiM,GAAD,IAAS;AACb,aAAO,IAAI+B,YAAJ,CAAiB,IAAjB,EAAuB/B,GAAvB,EAA4B,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,mBAAzB,CAA5B,EAA0E,EAA1E,EAA8E,KAAKnE,SAAL,CAAe,iBAAf,EAAkCmE,MAAlC,EAA0ClF,GAA1C,EAA+C,KAAKa,OAApD,CAA9E,CAAP;AACH,KAFM,CAVA,EAYH3M,UAAU,CAAE8L,GAAD,IAAS;AACpB,aAAO,KAAKiG,mBAAL,CAAyBjG,GAAzB,EAA8BkF,MAA9B,CAAP;AACH,KAFa,CAZP,CAAP;AAeH;;AACDrI,EAAAA,YAAY,CAACN,IAAD,EAAO;AACf,UAAM2I,MAAM,GAAG,cAAf;AACA,UAAMqD,MAAM,GAAG,KAAKxH,SAAL,CAAgB,GAAEmE,MAAO,SAAzB,CAAf;AACA,UAAMW,GAAG,GAAG,KAAKvE,iBAAL,CAAuB4D,MAAvB,CAAZ;AACA,UAAMjB,iBAAiB,GAAG,KAAKlD,SAAL,CAAgB,GAAEmE,MAAO,oBAAzB,CAA1B;AACA,WAAO,KAAKV,IAAL,CAAUsE,OAAV,CAAkBP,MAAlB,EAA0B1C,GAA1B,EAA+B;AAAE1E,MAAAA,IAAI,EAAE5E,IAAR;AAAcwM,MAAAA,OAAO,EAAE,UAAvB;AAAmCnH,MAAAA,OAAO,EAAE,KAAKF,UAAL;AAA5C,KAA/B,EAAgGjC,IAAhG,CAAqG1L,GAAG,CAAEiM,GAAD,IAAS;AACrH,UAAI,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,aAAzB,CAAJ,EAA4C;AACxC,cAAM,KAAKhE,kBAAL,CAAwB3E,IAAxB,CAAN;AACH;;AACD,aAAOyD,GAAP;AACH,KAL8G,CAAxG,EAKHjM,GAAG,CAAEiM,GAAD,IAAS;AACb,aAAO,IAAI+B,YAAJ,CAAiB,IAAjB,EAAuB/B,GAAvB,EAA4B,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,mBAAzB,CAA5B,EAA0E,EAA1E,EAA8E,KAAKnE,SAAL,CAAe,iBAAf,EAAkCmE,MAAlC,EAA0ClF,GAA1C,EAA+C,KAAKa,OAApD,CAA9E,EAA4I,KAAKG,WAAL,CAAiB,KAAKD,SAAL,CAAe,cAAf,EAA+BmE,MAA/B,EAAuClF,GAAvC,EAA4C,KAAKa,OAAjD,CAAjB,EAA4EoD,iBAA5E,CAA5I,CAAP;AACH,KAFM,CALA,EAOH/P,UAAU,CAAE8L,GAAD,IAAS;AACpB,aAAO,KAAKiG,mBAAL,CAAyBjG,GAAzB,EAA8BkF,MAA9B,CAAP;AACH,KAFa,CAPP,CAAP;AAUH;;AACDe,EAAAA,mBAAmB,CAACjG,GAAD,EAAMkF,MAAN,EAAc;AAC7B,QAAIhD,MAAM,GAAG,EAAb;;AACA,QAAIlC,GAAG,YAAYzL,iBAAnB,EAAsC;AAClC2N,MAAAA,MAAM,GAAG,KAAKnB,SAAL,CAAe,eAAf,EAAgCmE,MAAhC,EAAwClF,GAAxC,EAA6C,KAAKa,OAAlD,CAAT;AACH,KAFD,MAGK,IAAIb,GAAG,YAAYxF,uBAAnB,EAA4C;AAC7C0H,MAAAA,MAAM,CAACmD,IAAP,CAAYrF,GAAG,CAAC3F,OAAhB;AACH,KAFI,MAGA;AACD6H,MAAAA,MAAM,CAACmD,IAAP,CAAY,uBAAZ;AACH;;AACD,WAAO1R,EAAE,CAAC,IAAIoO,YAAJ,CAAiB,KAAjB,EAAwB/B,GAAxB,EAA6B,KAAKe,SAAL,CAAgB,GAAEmE,MAAO,mBAAzB,CAA7B,EAA2EhD,MAA3E,CAAD,CAAT;AACH;;AA1H+C;;AA4HpD2G,sBAAsB,CAACxK,IAAvB;AAAA,mBAAmHwK,sBAAnH,EAlsCsG1W,EAksCtG,UAA2JiC,EAAE,CAACgU,UAA9J,GAlsCsGjW,EAksCtG,UAAqLU,EAAE,CAACwV,cAAxL;AAAA;;AACAQ,sBAAsB,CAACvK,KAAvB,kBAnsCsGnM,EAmsCtG;AAAA,SAAuH0W,sBAAvH;AAAA,WAAuHA,sBAAvH;AAAA;;AACA;AAAA,qDApsCsG1W,EAosCtG,mBAA2F0W,sBAA3F,EAA+H,CAAC;AACpHtK,IAAAA,IAAI,EAAElM;AAD8G,GAAD,CAA/H,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEkM,MAAAA,IAAI,EAAEnK,EAAE,CAACgU;AAAX,KAAD,EAA0B;AAAE7J,MAAAA,IAAI,EAAE1L,EAAE,CAACwV;AAAX,KAA1B,CAAP;AAAgE,GAF1G;AAAA;AAIA;AACA;AACA;AACA;AACA;;;AACA,MAAMY,oBAAN,CAA2B;;AAE3BA,oBAAoB,CAAC5K,IAArB;AAAA,mBAAiH4K,oBAAjH;AAAA;;AACAA,oBAAoB,CAACC,IAArB,kBAhtCsG/W,EAgtCtG;AAAA,QAAqG8W,oBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhtCsG9W,MAAAA,EAgtCtG;AAhtCsGA,MAAAA,EAitClG,gBADJ;AAAA;AAAA;AAAA;AAAA;;AAGA;AAAA,qDAntCsGA,EAmtCtG,mBAA2F8W,oBAA3F,EAA6H,CAAC;AAClH1K,IAAAA,IAAI,EAAEhM,SAD4G;AAElHmE,IAAAA,IAAI,EAAE,CAAC;AAAEyS,MAAAA,QAAQ,EAAE,eAAZ;AAA6BC,MAAAA,QAAQ,EAAG;AAC3D;AACA,GAFmB;AAEdC,MAAAA,MAAM,EAAE,CAAC,q5CAAD;AAFM,KAAD;AAF4G,GAAD,CAA7H;AAAA;AAOA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,eAAN,CAAsB;AAClB;AACAvP,EAAAA,WAAW,CAACwP,IAAD,EAAOnD,QAAP,EAAiB;AACxB,SAAKmD,IAAL,GAAYA,IAAZ;AACA,SAAKnD,QAAL,GAAgBA,QAAhB;AACA,SAAKoD,QAAL,GAAgB,IAAI5V,OAAJ,EAAhB;AACA,SAAK6V,aAAL,GAAqB,KAArB;AACA,SAAK5O,KAAL,GAAa,EAAb;AACA,SAAK6O,YAAL,GAAoBH,IAAI,CAACpJ,sBAAL,GACfV,IADe,CACVtL,SAAS,CAAC,KAAKqV,QAAN,CADC,EAEfG,SAFe,CAEJF,aAAD,IAAmB;AAC9B,WAAKA,aAAL,GAAqBA,aAArB;AACH,KAJmB,CAApB;AAKH;;AACDG,EAAAA,IAAI,GAAG;AACH,SAAKxD,QAAL,CAAcwD,IAAd;AACA,WAAO,KAAP;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,SAAKL,QAAL,CAAc9J,IAAd;AACA,SAAK8J,QAAL,CAAcM,QAAd;AACH;;AArBiB;;AAuBtBR,eAAe,CAACjL,IAAhB;AAAA,mBAA4GiL,eAA5G,EAtvCsGnX,EAsvCtG,mBAA6IwN,aAA7I,GAtvCsGxN,EAsvCtG,mBAAuKQ,EAAE,CAACoX,QAA1K;AAAA;;AACAT,eAAe,CAACJ,IAAhB,kBAvvCsG/W,EAuvCtG;AAAA,QAAgGmX,eAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvvCsGnX,MAAAA,EAwvClG,+BADJ;AAvvCsGA,MAAAA,EAyvChG,sCAFN;AAvvCsGA,MAAAA,EA0vC9F,6BAHR;AAvvCsGA,MAAAA,EA2vC5F,oCAJV;AAvvCsGA,MAAAA,EA4vC1F,4BALZ;AAvvCsGA,MAAAA,EA6vCxF,0BANd;AAvvCsGA,MAAAA,EA6vC5E;AAAA,eAAS,UAAT;AAAA,QAN1B;AAvvCsGA,MAAAA,EA8vCtF,2BAPhB;AAvvCsGA,MAAAA,EA+vCxF,eARd;AAvvCsGA,MAAAA,EAgwC1F,eATZ;AAvvCsGA,MAAAA,EAiwC5F,eAVV;AAvvCsGA,MAAAA,EAkwC5F,kCAXV;AAvvCsGA,MAAAA,EAmwC1F,mCAZZ;AAvvCsGA,MAAAA,EAowCxF,8BAbd;AAvvCsGA,MAAAA,EAqwC1F,eAdZ;AAvvCsGA,MAAAA,EAswC5F,eAfV;AAvvCsGA,MAAAA,EAuwC9F,eAhBR;AAvvCsGA,MAAAA,EAwwChG,eAjBN;AAvvCsGA,MAAAA,EAywClG,eAlBJ;AAAA;AAAA;AAAA,eAmBo3Ic,EAAE,CAAC+W,iBAnBv3I,EAmB++I/W,EAAE,CAACgX,uBAnBl/I,EAmB8kJhX,EAAE,CAACiX,eAnBjlJ,EAmBuqJjX,EAAE,CAACkX,qBAnB1qJ,EAmBuuJlX,EAAE,CAACmX,eAnB1uJ,EAmBm1JnX,EAAE,CAACoX,mBAnBt1J,EAmB+4JpB,oBAnB/4J,EAmBw9JpW,EAAE,CAACyX,YAnB39J;AAAA;AAAA;;AAoBA;AAAA,qDA3wCsGnY,EA2wCtG,mBAA2FmX,eAA3F,EAAwH,CAAC;AAC7G/K,IAAAA,IAAI,EAAEhM,SADuG;AAE7GmE,IAAAA,IAAI,EAAE,CAAC;AAAEyS,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,QAAQ,EAAG;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAnBmB;AAmBdC,MAAAA,MAAM,EAAE,CAAC,8zIAAD;AAnBM,KAAD;AAFuG,GAAD,CAAxH,EAsB4B,YAAY;AAAE,WAAO,CAAC;AAAE9K,MAAAA,IAAI,EAAEoB;AAAR,KAAD,EAA0B;AAAEpB,MAAAA,IAAI,EAAE5L,EAAE,CAACoX;AAAX,KAA1B,CAAP;AAA0D,GAtBpG;AAAA;AAwBA;AACA;AACA;AACA;AACA;;;AACA,MAAMQ,gBAAN,CAAuB;AACnBxQ,EAAAA,WAAW,CAACyQ,OAAD,EAAU3J,OAAO,GAAG,EAApB,EAAwB4J,EAAxB,EAA4BC,MAA5B,EAAoC;AAC3C,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAK3J,OAAL,GAAeA,OAAf;AACA,SAAK4J,EAAL,GAAUA,EAAV;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAK7V,aAAL,GAAqB,CAArB;AACA,SAAKG,YAAL,GAAoB,EAApB;AACA,SAAKF,QAAL,GAAgB,EAAhB;AACA,SAAKoN,MAAL,GAAc,EAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKwI,IAAL,GAAY,EAAZ;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKpW,WAAL,GAAmB,EAAnB;AACA,SAAKO,UAAL,GAAkB,KAAlB;AACA,SAAKF,aAAL,GAAqB,KAAKgW,cAAL,CAAoB,2BAApB,CAArB;AACA,SAAK7V,YAAL,GAAoB,KAAK6V,cAAL,CAAoB,0BAApB,CAApB;AACA,SAAK/V,QAAL,GAAgB,KAAK+V,cAAL,CAAoB,sBAApB,CAAhB;AACA,SAAKrW,WAAL,GAAmB,KAAKqW,cAAL,CAAoB,yBAApB,CAAnB;AACA,SAAK9V,UAAL,GAAkB,KAAK8V,cAAL,CAAoB,wBAApB,CAAlB;AACH;;AACDjW,EAAAA,KAAK,GAAG;AACJ,SAAKsN,MAAL,GAAc,EAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKyI,SAAL,GAAiB,IAAjB;AACA,SAAKJ,OAAL,CAAapK,YAAb,CAA0B,KAAKtL,QAA/B,EAAyC,KAAK6V,IAA9C,EAAoDhB,SAApD,CAA+DpJ,MAAD,IAAY;AACtE,WAAKqK,SAAL,GAAiB,KAAjB;;AACA,UAAIrK,MAAM,CAACN,SAAP,EAAJ,EAAwB;AACpB,aAAKkC,QAAL,GAAgB5B,MAAM,CAACiC,WAAP,EAAhB;AACH,OAFD,MAGK;AACD,aAAKN,MAAL,GAAc3B,MAAM,CAACgC,SAAP,EAAd;AACH;;AACD,YAAMN,QAAQ,GAAG1B,MAAM,CAAC+B,WAAP,EAAjB;;AACA,UAAIL,QAAJ,EAAc;AACV6I,QAAAA,UAAU,CAAC,MAAM;AACb,iBAAO,KAAKJ,MAAL,CAAYK,aAAZ,CAA0B9I,QAA1B,CAAP;AACH,SAFS,EAEP,KAAKpN,aAFE,CAAV;AAGH;;AACD,WAAK4V,EAAL,CAAQO,aAAR;AACH,KAfD;AAgBH;;AACDH,EAAAA,cAAc,CAACvT,GAAD,EAAM;AAChB,WAAOY,iBAAiB,CAAC,KAAK2I,OAAN,EAAevJ,GAAf,EAAoB,IAApB,CAAxB;AACH;;AA5CkB;;AA8CvBiT,gBAAgB,CAAClM,IAAjB;AAAA,mBAA6GkM,gBAA7G,EAt1CsGpY,EAs1CtG,mBAA+IwN,aAA/I,GAt1CsGxN,EAs1CtG,mBAAyK4D,eAAzK,GAt1CsG5D,EAs1CtG,mBAAqMA,EAAE,CAAC8Y,iBAAxM,GAt1CsG9Y,EAs1CtG,mBAAsOU,EAAE,CAACqY,MAAzO;AAAA;;AACAX,gBAAgB,CAACrB,IAAjB,kBAv1CsG/W,EAu1CtG;AAAA,QAAiGoY,gBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAv1CsGpY,MAAAA,EAu1C4D,2BAAlK;AAv1CsGA,MAAAA,EAu1C6F,mBAAnM;AAv1CsGA,MAAAA,EAu1CkG,eAAxM;AAv1CsGA,MAAAA,EAu1CyG,0BAA/M;AAv1CsGA,MAAAA,EAu1CgI,4CAAtO;AAv1CsGA,MAAAA,EAu1C8J,eAApQ;AAv1CsGA,MAAAA,EAu1CsK,yEAA5Q;AAv1CsGA,MAAAA,EAu1C+c,yEAArjB;AAv1CsGA,MAAAA,EAu1CkwB,gCAAx2B;AAv1CsGA,MAAAA,EAu1CwwB;AAAA,eAAa,WAAb;AAAA,QAA92B;AAv1CsGA,MAAAA,EAu1Cg1B,4BAAt7B;AAv1CsGA,MAAAA,EAu1Cw3B,8BAA99B;AAv1CsGA,MAAAA,EAu1Cm6B,6BAAzgC;AAv1CsGA,MAAAA,EAu1Ci7B,eAAvhC;AAv1CsGA,MAAAA,EAu1C+7B,kCAAriC;AAv1CsGA,MAAAA,EAu1Cg/B;AAAA;AAAA,QAAtlC;AAv1CsGA,MAAAA,EAu1C+7B,eAAriC;AAv1CsGA,MAAAA,EAu1Co+C,oFAA1kD;AAv1CsGA,MAAAA,EAu1CsyD,eAA54D;AAv1CsGA,MAAAA,EAu1CkzD,6BAAx5D;AAv1CsGA,MAAAA,EAu1C01D,+BAAh8D;AAv1CsGA,MAAAA,EAu1Ck4D,gCAAx+D;AAv1CsGA,MAAAA,EAu1Cg7D,wBAAthE;AAv1CsGA,MAAAA,EAu1Cy7D,eAA/hE;AAv1CsGA,MAAAA,EAu1Cy8D,4BAA/iE;AAv1CsGA,MAAAA,EAu1CmhE,+BAAznE;AAv1CsGA,MAAAA,EAu1CmiE,eAAzoE;AAv1CsGA,MAAAA,EAu1C6iE,eAAnpE;AAv1CsGA,MAAAA,EAu1C0jE,oCAAhqE;AAv1CsGA,MAAAA,EAu1C2mE;AAAA;AAAA,QAAjtE;AAv1CsGA,MAAAA,EAu1C0jE,eAAhqE;AAv1CsGA,MAAAA,EAu1C8vF,oFAAp2F;AAv1CsGA,MAAAA,EAu1CgxG,eAAt3G;AAv1CsGA,MAAAA,EAu1C4xG,8BAAl4G;AAv1CsGA,MAAAA,EAu1Ci1G,kFAAv7G;AAv1CsGA,MAAAA,EAu1Co8G,eAA1iH;AAv1CsGA,MAAAA,EAu1Cg9G,iCAAtjH;AAv1CsGA,MAAAA,EAu1CkpH,uBAAxvH;AAv1CsGA,MAAAA,EAu1C4pH,eAAlwH;AAv1CsGA,MAAAA,EAu1CuqH,eAA7wH;AAv1CsGA,MAAAA,EAu1CkrH,0EAAxxH;AAv1CsGA,MAAAA,EAu1CyrJ,kCAA/xJ;AAv1CsGA,MAAAA,EAu1CuvJ,uCAA71J;AAv1CsGA,MAAAA,EAu1C8wJ,4BAAp3J;AAv1CsGA,MAAAA,EAu1Cg0J,uBAAt6J;AAv1CsGA,MAAAA,EAu1Cw0J,eAA96J;AAv1CsGA,MAAAA,EAu1C80J,eAAp7J;AAAA;;AAAA;AAAA,kBAv1CsGA,EAu1CtG;;AAAA,kBAv1CsGA,EAu1CtG;;AAAA,kBAv1CsGA,EAu1CtG;;AAv1CsGA,MAAAA,EAu1CiL,aAAvR;AAv1CsGA,MAAAA,EAu1CiL,gHAAvR;AAv1CsGA,MAAAA,EAu1C0d,aAAhkB;AAv1CsGA,MAAAA,EAu1C0d,sHAAhkB;AAv1CsGA,MAAAA,EAu1Cg/B,aAAtlC;AAv1CsGA,MAAAA,EAu1Cg/B,6KAAtlC;AAv1CsGA,MAAAA,EAu1Cy5C,sEAA//C;AAv1CsGA,MAAAA,EAu1Cm/C,aAAzlD;AAv1CsGA,MAAAA,EAu1Cm/C,+CAAzlD;AAv1CsGA,MAAAA,EAu1C2mE,aAAjtE;AAv1CsGA,MAAAA,EAu1C2mE,mUAAjtE;AAv1CsGA,MAAAA,EAu1C6qF,sEAAnxF;AAv1CsGA,MAAAA,EAu1C6wF,aAAn3F;AAv1CsGA,MAAAA,EAu1C6wF,+CAAn3F;AAv1CsGA,MAAAA,EAu1Cm5G,aAAz/G;AAv1CsGA,MAAAA,EAu1Cm5G,mCAAz/G;AAv1CsGA,MAAAA,EAu1C4mH,aAAltH;AAv1CsGA,MAAAA,EAu1C4mH,wCAAltH;AAv1CsGA,MAAAA,EAu1CyjH,oDAA/pH;AAv1CsGA,MAAAA,EAu1C4rH,aAAlyH;AAv1CsGA,MAAAA,EAu1C4rH,kEAAlyH;AAAA;AAAA;AAAA,eAAygLQ,EAAE,CAACwY,IAA5gL,EAAosLpY,EAAE,CAACqY,aAAvsL,EAA0xLrY,EAAE,CAACsY,oBAA7xL,EAAm6LtY,EAAE,CAACuY,MAAt6L,EAAokMrY,EAAE,CAACsY,gBAAvkM,EAAwsMxY,EAAE,CAACyY,oBAA3sM,EAAq8MzY,EAAE,CAAC0Y,gBAAx8M,EAA2kN1Y,EAAE,CAAC2Y,eAA9kN,EAAgqN3Y,EAAE,CAAC4Y,OAAnqN,EAAq2N5Y,EAAE,CAAC6Y,iBAAx2N,EAA+iO/Y,EAAE,CAACgZ,kBAAljO,EAA+xO9Y,EAAE,CAAC+Y,kBAAlyO,EAA+6O/Y,EAAE,CAACgZ,kBAAl7O,EAAivK9Y,EAAE,CAAC+Y,iBAApvK,EAAw9J/Y,EAAE,CAACgZ,gBAA39J,EAA0lLtZ,EAAE,CAACuZ,OAA7lL,EAA8lKjZ,EAAE,CAACkZ,mBAAjmK,EAA+4KlZ,EAAE,CAACmX,eAAl5K;AAAA;AAAA;AAAA;;AACA;AAAA,qDAx1CsGjY,EAw1CtG,mBAA2FoY,gBAA3F,EAAyH,CAAC;AAC9GhM,IAAAA,IAAI,EAAEhM,SADwG;AAE9GmE,IAAAA,IAAI,EAAE,CAAC;AAAEyS,MAAAA,QAAQ,EAAE,UAAZ;AAAwBiD,MAAAA,eAAe,EAAE5Z,uBAAuB,CAAC6Z,MAAjE;AAAyEjD,MAAAA,QAAQ,EAAE;AAAnF,KAAD;AAFwG,GAAD,CAAzH,EAG4B,YAAY;AAAE,WAAO,CAAC;AAAE7K,MAAAA,IAAI,EAAEoB;AAAR,KAAD,EAA0B;AAAEpB,MAAAA,IAAI,EAAE9F,SAAR;AAAmB+F,MAAAA,UAAU,EAAE,CAAC;AACvFD,QAAAA,IAAI,EAAEjM,MADiF;AAEvFoE,QAAAA,IAAI,EAAE,CAACX,eAAD;AAFiF,OAAD;AAA/B,KAA1B,EAG3B;AAAEwI,MAAAA,IAAI,EAAEpM,EAAE,CAAC8Y;AAAX,KAH2B,EAGK;AAAE1M,MAAAA,IAAI,EAAE1L,EAAE,CAACqY;AAAX,KAHL,CAAP;AAGmC,GAN7E;AAAA;AAQA;AACA;AACA;AACA;AACA;;;AACA,MAAMoB,mBAAN,CAA0B;AACtBvS,EAAAA,WAAW,CAACyQ,OAAD,EAAU3J,OAAO,GAAG,EAApB,EAAwB4J,EAAxB,EAA4BC,MAA5B,EAAoC;AAC3C,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAK3J,OAAL,GAAeA,OAAf;AACA,SAAK4J,EAAL,GAAUA,EAAV;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAK7V,aAAL,GAAqB,CAArB;AACA,SAAKG,YAAL,GAAoB,EAApB;AACA,SAAKF,QAAL,GAAgB,EAAhB;AACA,SAAK8V,SAAL,GAAiB,KAAjB;AACA,SAAK1I,MAAL,GAAc,EAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKwI,IAAL,GAAY,EAAZ;AACA,SAAKnW,WAAL,GAAmB,EAAnB;AACA,SAAKK,aAAL,GAAqB,KAAKgW,cAAL,CAAoB,8BAApB,CAArB;AACA,SAAK7V,YAAL,GAAoB,KAAK6V,cAAL,CAAoB,6BAApB,CAApB;AACA,SAAK/V,QAAL,GAAgB,KAAK+V,cAAL,CAAoB,yBAApB,CAAhB;AACA,SAAKrW,WAAL,GAAmB,KAAKqW,cAAL,CAAoB,yBAApB,CAAnB;AACH;;AACD1V,EAAAA,QAAQ,GAAG;AACP,SAAK+M,MAAL,GAAc,KAAKC,QAAL,GAAgB,EAA9B;AACA,SAAKyI,SAAL,GAAiB,IAAjB;AACA,SAAKJ,OAAL,CAAarV,QAAb,CAAsB,KAAKL,QAA3B,EAAqC,KAAK6V,IAA1C,EAAgDhB,SAAhD,CAA2DpJ,MAAD,IAAY;AAClE,WAAKqK,SAAL,GAAiB,KAAjB;;AACA,UAAIrK,MAAM,CAACN,SAAP,EAAJ,EAAwB;AACpB,aAAKkC,QAAL,GAAgB5B,MAAM,CAACiC,WAAP,EAAhB;AACH,OAFD,MAGK;AACD,aAAKN,MAAL,GAAc3B,MAAM,CAACgC,SAAP,EAAd;AACH;;AACD,YAAMN,QAAQ,GAAG1B,MAAM,CAAC+B,WAAP,EAAjB;;AACA,UAAIL,QAAJ,EAAc;AACV6I,QAAAA,UAAU,CAAC,MAAM;AACb,iBAAO,KAAKJ,MAAL,CAAYK,aAAZ,CAA0B9I,QAA1B,CAAP;AACH,SAFS,EAEP,KAAKpN,aAFE,CAAV;AAGH;;AACD,WAAK4V,EAAL,CAAQO,aAAR;AACH,KAfD;AAgBH;;AACDH,EAAAA,cAAc,CAACvT,GAAD,EAAM;AAChB,WAAOY,iBAAiB,CAAC,KAAK2I,OAAN,EAAevJ,GAAf,EAAoB,IAApB,CAAxB;AACH;;AAzCqB;;AA2C1BgV,mBAAmB,CAACjO,IAApB;AAAA,mBAAgHiO,mBAAhH,EAh5CsGna,EAg5CtG,mBAAqJwN,aAArJ,GAh5CsGxN,EAg5CtG,mBAA+K4D,eAA/K,GAh5CsG5D,EAg5CtG,mBAA2MA,EAAE,CAAC8Y,iBAA9M,GAh5CsG9Y,EAg5CtG,mBAA4OU,EAAE,CAACqY,MAA/O;AAAA;;AACAoB,mBAAmB,CAACpD,IAApB,kBAj5CsG/W,EAi5CtG;AAAA,QAAoGma,mBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAj5CsGna,MAAAA,EAi5CqE,2BAA3K;AAj5CsGA,MAAAA,EAi5CsG,sBAA5M;AAj5CsGA,MAAAA,EAi5C8G,eAApN;AAj5CsGA,MAAAA,EAi5CuH,4EAA7N;AAj5CsGA,MAAAA,EAi5Cga,4EAAtgB;AAj5CsGA,MAAAA,EAi5CmtB,gCAAzzB;AAj5CsGA,MAAAA,EAi5CytB;AAAA,eAAa,cAAb;AAAA,QAA/zB;AAj5CsGA,MAAAA,EAi5CoyB,4BAA14B;AAj5CsGA,MAAAA,EAi5C40B,8BAAl7B;AAj5CsGA,MAAAA,EAi5Cs3B,wBAA59B;AAj5CsGA,MAAAA,EAi5Cg4B,eAAt+B;AAj5CsGA,MAAAA,EAi5C84B,iCAAp/B;AAj5CsGA,MAAAA,EAi5Cy6B;AAAA;AAAA,QAA/gC;AAj5CsGA,MAAAA,EAi5C84B,eAAp/B;AAj5CsGA,MAAAA,EAi5CukD,sFAA7qD;AAj5CsGA,MAAAA,EAi5CulE,eAA7rE;AAj5CsGA,MAAAA,EAi5CmmE,6BAAzsE;AAj5CsGA,MAAAA,EAi5C2oE,gCAAjvE;AAj5CsGA,MAAAA,EAi5CsrE,6BAA5xE;AAj5CsGA,MAAAA,EAi5CosE,eAA1yE;AAj5CsGA,MAAAA,EAi5CktE,oCAAxzE;AAj5CsGA,MAAAA,EAi5C6uE;AAAA;AAAA,QAAn1E;AAj5CsGA,MAAAA,EAi5CktE,eAAxzE;AAj5CsGA,MAAAA,EAi5C+tF,sFAAr0F;AAj5CsGA,MAAAA,EAi5CiiG,eAAvoG;AAj5CsGA,MAAAA,EAi5C6iG,6BAAnpG;AAj5CsGA,MAAAA,EAi5CqlG,gCAA3rG;AAj5CsGA,MAAAA,EAi5CmoG,wBAAzuG;AAj5CsGA,MAAAA,EAi5C4oG,eAAlvG;AAj5CsGA,MAAAA,EAi5C0pG,oCAAhwG;AAj5CsGA,MAAAA,EAi5CqrG;AAAA;AAAA,QAA3xG;AAj5CsGA,MAAAA,EAi5C0pG,eAAhwG;AAj5CsGA,MAAAA,EAi5C81H,sFAAp8H;AAj5CsGA,MAAAA,EAi5C+2I,eAAr9I;AAj5CsGA,MAAAA,EAi5C23I,6BAAj+I;AAj5CsGA,MAAAA,EAi5Cm6I,gCAAzgJ;AAj5CsGA,MAAAA,EAi5Co9I,+BAA1jJ;AAj5CsGA,MAAAA,EAi5Co+I,eAA1kJ;AAj5CsGA,MAAAA,EAi5Ck/I,oCAAxlJ;AAj5CsGA,MAAAA,EAi5C6gJ;AAAA;AAAA,QAAnnJ;AAj5CsGA,MAAAA,EAi5Ck/I,eAAxlJ;AAj5CsGA,MAAAA,EAi5C0jK,sFAAhqK;AAj5CsGA,MAAAA,EAi5Co8K,eAA1iL;AAj5CsGA,MAAAA,EAi5Cg9K,qEAAtjL;AAj5CsGA,MAAAA,EAi5C+xL,iCAAr4L;AAj5CsGA,MAAAA,EAi5Ci+L,yBAAvkM;AAj5CsGA,MAAAA,EAi5C6+L,eAAnlM;AAj5CsGA,MAAAA,EAi5Cw/L,eAA9lM;AAj5CsGA,MAAAA,EAi5CmgM,6EAAzmM;AAj5CsGA,MAAAA,EAi5C0gO,kCAAhnO;AAj5CsGA,MAAAA,EAi5CukO,yCAA7qO;AAj5CsGA,MAAAA,EAi5CgmO,4BAAtsO;AAj5CsGA,MAAAA,EAi5C+oO,qBAArvO;AAj5CsGA,MAAAA,EAi5CqpO,eAA3vO;AAj5CsGA,MAAAA,EAi5C2pO,eAAjwO;AAAA;;AAAA;AAAA,kBAj5CsGA,EAi5CtG;;AAAA,kBAj5CsGA,EAi5CtG;;AAAA,kBAj5CsGA,EAi5CtG;;AAAA,kBAj5CsGA,EAi5CtG;;AAAA,kBAj5CsGA,EAi5CtG;;AAj5CsGA,MAAAA,EAi5CkI,aAAxO;AAj5CsGA,MAAAA,EAi5CkI,gHAAxO;AAj5CsGA,MAAAA,EAi5C2a,aAAjhB;AAj5CsGA,MAAAA,EAi5C2a,sHAAjhB;AAj5CsGA,MAAAA,EAi5Cy6B,aAA/gC;AAj5CsGA,MAAAA,EAi5Cy6B,mUAA/gC;AAj5CsGA,MAAAA,EAi5Cs/C,sEAA5lD;AAj5CsGA,MAAAA,EAi5CslD,aAA5rD;AAj5CsGA,MAAAA,EAi5CslD,+CAA5rD;AAj5CsGA,MAAAA,EAi5C6uE,aAAn1E;AAj5CsGA,MAAAA,EAi5C6uE,6KAAn1E;AAj5CsGA,MAAAA,EAi5CopF,sEAA1vF;AAj5CsGA,MAAAA,EAi5C8uF,aAAp1F;AAj5CsGA,MAAAA,EAi5C8uF,+CAAp1F;AAj5CsGA,MAAAA,EAi5CqrG,aAA3xG;AAj5CsGA,MAAAA,EAi5CqrG,mUAA3xG;AAj5CsGA,MAAAA,EAi5C6wH,sEAAn3H;AAj5CsGA,MAAAA,EAi5C62H,aAAn9H;AAj5CsGA,MAAAA,EAi5C62H,+CAAn9H;AAj5CsGA,MAAAA,EAi5C6gJ,aAAnnJ;AAj5CsGA,MAAAA,EAi5C6gJ,oNAAnnJ;AAj5CsGA,MAAAA,EAi5C6+J,sEAAnlK;AAj5CsGA,MAAAA,EAi5CykK,aAA/qK;AAj5CsGA,MAAAA,EAi5CykK,+CAA/qK;AAj5CsGA,MAAAA,EAi5CggL,aAAtmL;AAj5CsGA,MAAAA,EAi5CggL,+DAAtmL;AAj5CsGA,MAAAA,EAi5C27L,aAAjiM;AAj5CsGA,MAAAA,EAi5C27L,wCAAjiM;AAj5CsGA,MAAAA,EAi5Cw4L,oDAA9+L;AAj5CsGA,MAAAA,EAi5C6gM,aAAnnM;AAj5CsGA,MAAAA,EAi5C6gM,kEAAnnM;AAAA;AAAA;AAAA,eAAsiQQ,EAAE,CAACwY,IAAziQ,EAAiuQpY,EAAE,CAACqY,aAApuQ,EAAuzQrY,EAAE,CAACsY,oBAA1zQ,EAAg8QtY,EAAE,CAACuY,MAAn8Q,EAAimRrY,EAAE,CAACsY,gBAApmR,EAAquRxY,EAAE,CAACyY,oBAAxuR,EAAk+RzY,EAAE,CAAC2Y,eAAr+R,EAAujS3Y,EAAE,CAAC4Y,OAA1jS,EAA4vS5Y,EAAE,CAAC6Y,iBAA/vS,EAAs8S7Y,EAAE,CAAC+Y,kBAAz8S,EAAslT/Y,EAAE,CAACgZ,kBAAzlT,EAAsuThZ,EAAE,CAAC0Y,gBAAzuT,EAA8wPxY,EAAE,CAAC+Y,iBAAjxP,EAA42TnZ,EAAE,CAACgZ,kBAA/2T,EAAq/O5Y,EAAE,CAACgZ,gBAAx/O,EAAunQtZ,EAAE,CAACuZ,OAA1nQ,EAA2nPjZ,EAAE,CAACkZ,mBAA9nP,EAA46PlZ,EAAE,CAACmX,eAA/6P;AAAA;AAAA;AAAA;;AACA;AAAA,qDAl5CsGjY,EAk5CtG,mBAA2Fma,mBAA3F,EAA4H,CAAC;AACjH/N,IAAAA,IAAI,EAAEhM,SAD2G;AAEjHmE,IAAAA,IAAI,EAAE,CAAC;AAAEyS,MAAAA,QAAQ,EAAE,aAAZ;AAA2BiD,MAAAA,eAAe,EAAE5Z,uBAAuB,CAAC6Z,MAApE;AAA4EjD,MAAAA,QAAQ,EAAE,omOAAtF;AAA4rOC,MAAAA,MAAM,EAAE,CAAC,oMAAD;AAApsO,KAAD;AAF2G,GAAD,CAA5H,EAG4B,YAAY;AAAE,WAAO,CAAC;AAAE9K,MAAAA,IAAI,EAAEoB;AAAR,KAAD,EAA0B;AAAEpB,MAAAA,IAAI,EAAE9F,SAAR;AAAmB+F,MAAAA,UAAU,EAAE,CAAC;AACvFD,QAAAA,IAAI,EAAEjM,MADiF;AAEvFoE,QAAAA,IAAI,EAAE,CAACX,eAAD;AAFiF,OAAD;AAA/B,KAA1B,EAG3B;AAAEwI,MAAAA,IAAI,EAAEpM,EAAE,CAAC8Y;AAAX,KAH2B,EAGK;AAAE1M,MAAAA,IAAI,EAAE1L,EAAE,CAACqY;AAAX,KAHL,CAAP;AAGmC,GAN7E;AAAA;AAQA;AACA;AACA;AACA;AACA;;;AACA,MAAMqB,iBAAN,CAAwB;AACpBxS,EAAAA,WAAW,CAACyQ,OAAD,EAAU3J,OAAO,GAAG,EAApB,EAAwB6J,MAAxB,EAAgC;AACvC,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAK3J,OAAL,GAAeA,OAAf;AACA,SAAK6J,MAAL,GAAcA,MAAd;AACA,SAAK7V,aAAL,GAAqB,CAArB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKD,aAAL,GAAqB,KAAKgW,cAAL,CAAoB,4BAApB,CAArB;AACA,SAAK/V,QAAL,GAAgB,KAAK+V,cAAL,CAAoB,uBAApB,CAAhB;AACH;;AACD2B,EAAAA,QAAQ,GAAG;AACP,SAAKjX,MAAL,CAAY,KAAKT,QAAjB;AACH;;AACDS,EAAAA,MAAM,CAACT,QAAD,EAAW;AACb,SAAK0V,OAAL,CAAajV,MAAb,CAAoBT,QAApB,EAA8B6U,SAA9B,CAAyCpJ,MAAD,IAAY;AAChD,YAAM0B,QAAQ,GAAG1B,MAAM,CAAC+B,WAAP,EAAjB;;AACA,UAAIL,QAAJ,EAAc;AACV6I,QAAAA,UAAU,CAAC,MAAM;AACb,iBAAO,KAAKJ,MAAL,CAAYK,aAAZ,CAA0B9I,QAA1B,CAAP;AACH,SAFS,EAEP,KAAKpN,aAFE,CAAV;AAGH;AACJ,KAPD;AAQH;;AACDgW,EAAAA,cAAc,CAACvT,GAAD,EAAM;AAChB,WAAOY,iBAAiB,CAAC,KAAK2I,OAAN,EAAevJ,GAAf,EAAoB,IAApB,CAAxB;AACH;;AAzBmB;;AA2BxBiV,iBAAiB,CAAClO,IAAlB;AAAA,mBAA8GkO,iBAA9G,EA17CsGpa,EA07CtG,mBAAiJwN,aAAjJ,GA17CsGxN,EA07CtG,mBAA2K4D,eAA3K,GA17CsG5D,EA07CtG,mBAAuMU,EAAE,CAACqY,MAA1M;AAAA;;AACAqB,iBAAiB,CAACrD,IAAlB,kBA37CsG/W,EA27CtG;AAAA,QAAkGoa,iBAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AA37CsGpa,MAAAA,EA27C+D,yBAArK;AA37CsGA,MAAAA,EA27CoE,yCAA1K;AA37CsGA,MAAAA,EA27C+F,eAArM;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA,qDA57CsGA,EA47CtG,mBAA2Foa,iBAA3F,EAA0H,CAAC;AAC/GhO,IAAAA,IAAI,EAAEhM,SADyG;AAE/GmE,IAAAA,IAAI,EAAE,CAAC;AAAEyS,MAAAA,QAAQ,EAAE,WAAZ;AAAyBC,MAAAA,QAAQ,EAAE;AAAnC,KAAD;AAFyG,GAAD,CAA1H,EAG4B,YAAY;AAAE,WAAO,CAAC;AAAE7K,MAAAA,IAAI,EAAEoB;AAAR,KAAD,EAA0B;AAAEpB,MAAAA,IAAI,EAAE9F,SAAR;AAAmB+F,MAAAA,UAAU,EAAE,CAAC;AACvFD,QAAAA,IAAI,EAAEjM,MADiF;AAEvFoE,QAAAA,IAAI,EAAE,CAACX,eAAD;AAFiF,OAAD;AAA/B,KAA1B,EAG3B;AAAEwI,MAAAA,IAAI,EAAE1L,EAAE,CAACqY;AAAX,KAH2B,CAAP;AAGG,GAN7C;AAAA;AAQA;AACA;AACA;AACA;AACA;;;AACA,MAAMuB,0BAAN,CAAiC;AAC7B1S,EAAAA,WAAW,CAACyQ,OAAD,EAAU3J,OAAO,GAAG,EAApB,EAAwB4J,EAAxB,EAA4BC,MAA5B,EAAoC;AAC3C,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAK3J,OAAL,GAAeA,OAAf;AACA,SAAK4J,EAAL,GAAUA,EAAV;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAK7V,aAAL,GAAqB,CAArB;AACA,SAAKG,YAAL,GAAoB,EAApB;AACA,SAAKF,QAAL,GAAgB,EAAhB;AACA,SAAK8V,SAAL,GAAiB,KAAjB;AACA,SAAK1I,MAAL,GAAc,EAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKwI,IAAL,GAAY,EAAZ;AACA,SAAK9V,aAAL,GAAqB,KAAKgW,cAAL,CAAoB,qCAApB,CAArB;AACA,SAAK7V,YAAL,GAAoB,KAAK6V,cAAL,CAAoB,oCAApB,CAApB;AACA,SAAK/V,QAAL,GAAgB,KAAK+V,cAAL,CAAoB,gCAApB,CAAhB;AACH;;AACDrC,EAAAA,WAAW,GAAG;AACV,SAAKtG,MAAL,GAAc,KAAKC,QAAL,GAAgB,EAA9B;AACA,SAAKyI,SAAL,GAAiB,IAAjB;AACA,SAAKJ,OAAL,CAAanV,eAAb,CAA6B,KAAKP,QAAlC,EAA4C,KAAK6V,IAAjD,EAAuDhB,SAAvD,CAAkEpJ,MAAD,IAAY;AACzE,WAAKqK,SAAL,GAAiB,KAAjB;;AACA,UAAIrK,MAAM,CAACN,SAAP,EAAJ,EAAwB;AACpB,aAAKkC,QAAL,GAAgB5B,MAAM,CAACiC,WAAP,EAAhB;AACH,OAFD,MAGK;AACD,aAAKN,MAAL,GAAc3B,MAAM,CAACgC,SAAP,EAAd;AACH;;AACD,YAAMN,QAAQ,GAAG1B,MAAM,CAAC+B,WAAP,EAAjB;;AACA,UAAIL,QAAJ,EAAc;AACV6I,QAAAA,UAAU,CAAC,MAAM;AACb,iBAAO,KAAKJ,MAAL,CAAYK,aAAZ,CAA0B9I,QAA1B,CAAP;AACH,SAFS,EAEP,KAAKpN,aAFE,CAAV;AAGH;;AACD,WAAK4V,EAAL,CAAQO,aAAR;AACH,KAfD;AAgBH;;AACDH,EAAAA,cAAc,CAACvT,GAAD,EAAM;AAChB,WAAOY,iBAAiB,CAAC,KAAK2I,OAAN,EAAevJ,GAAf,EAAoB,IAApB,CAAxB;AACH;;AAvC4B;;AAyCjCmV,0BAA0B,CAACpO,IAA3B;AAAA,mBAAuHoO,0BAAvH,EAl/CsGta,EAk/CtG,mBAAmKwN,aAAnK,GAl/CsGxN,EAk/CtG,mBAA6L4D,eAA7L,GAl/CsG5D,EAk/CtG,mBAAyNA,EAAE,CAAC8Y,iBAA5N,GAl/CsG9Y,EAk/CtG,mBAA0PU,EAAE,CAACqY,MAA7P;AAAA;;AACAuB,0BAA0B,CAACvD,IAA3B,kBAn/CsG/W,EAm/CtG;AAAA,QAA2Gsa,0BAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAn/CsGta,MAAAA,EAm/CgG,2BAAtM;AAn/CsGA,MAAAA,EAm/CiI,6BAAvO;AAn/CsGA,MAAAA,EAm/CgJ,eAAtP;AAn/CsGA,MAAAA,EAm/CuJ,0BAA7P;AAn/CsGA,MAAAA,EAm/C8K,wFAApR;AAn/CsGA,MAAAA,EAm/CwP,eAA9V;AAn/CsGA,MAAAA,EAm/CgQ,mFAAtW;AAn/CsGA,MAAAA,EAm/CyiB,mFAA/oB;AAn/CsGA,MAAAA,EAm/C41B,gCAAl8B;AAn/CsGA,MAAAA,EAm/Ck2B;AAAA,eAAa,iBAAb;AAAA,QAAx8B;AAn/CsGA,MAAAA,EAm/C27B,4BAAjiC;AAn/CsGA,MAAAA,EAm/Cm+B,8BAAzkC;AAn/CsGA,MAAAA,EAm/C8gC,wCAApnC;AAn/CsGA,MAAAA,EAm/CuiC,eAA7oC;AAn/CsGA,MAAAA,EAm/CqjC,kCAA3pC;AAn/CsGA,MAAAA,EAm/CglC;AAAA;AAAA,QAAtrC;AAn/CsGA,MAAAA,EAm/CqjC,eAA3pC;AAn/CsGA,MAAAA,EAm/C0lD,8FAAhsD;AAn/CsGA,MAAAA,EAm/C45D,eAAlgE;AAn/CsGA,MAAAA,EAm/Cw6D,iCAA9gE;AAn/CsGA,MAAAA,EAm/CqnE,iCAA3tE;AAn/CsGA,MAAAA,EAm/CyoE,eAA/uE;AAn/CsGA,MAAAA,EAm/CopE,eAA1vE;AAn/CsGA,MAAAA,EAm/C+pE,kCAArwE;AAn/CsGA,MAAAA,EAm/CsuE,wBAA50E;AAn/CsGA,MAAAA,EAm/CyuE,4BAA/0E;AAn/CsGA,MAAAA,EAm/CwxE,6BAA93E;AAn/CsGA,MAAAA,EAm/CsyE,eAA54E;AAn/CsGA,MAAAA,EAm/C0yE,eAAh5E;AAn/CsGA,MAAAA,EAm/CkzE,wBAAx5E;AAn/CsGA,MAAAA,EAm/CqzE,4BAA35E;AAn/CsGA,MAAAA,EAm/Cu2E,uBAA78E;AAn/CsGA,MAAAA,EAm/C+2E,eAAr9E;AAn/CsGA,MAAAA,EAm/Cm3E,eAAz9E;AAn/CsGA,MAAAA,EAm/Cy3E,eAA/9E;AAAA;;AAAA;AAAA,kBAn/CsGA,EAm/CtG;;AAAA,kBAn/CsGA,EAm/CtG;;AAn/CsGA,MAAAA,EAm/C2Q,aAAjX;AAn/CsGA,MAAAA,EAm/C2Q,gHAAjX;AAn/CsGA,MAAAA,EAm/CojB,aAA1pB;AAn/CsGA,MAAAA,EAm/CojB,sHAA1pB;AAn/CsGA,MAAAA,EAm/CglC,aAAtrC;AAn/CsGA,MAAAA,EAm/CglC,6KAAtrC;AAn/CsGA,MAAAA,EAm/C+gD,sEAArnD;AAn/CsGA,MAAAA,EAm/CymD,aAA/sD;AAn/CsGA,MAAAA,EAm/CymD,+CAA/sD;AAn/CsGA,MAAAA,EAm/C+kE,aAArrE;AAn/CsGA,MAAAA,EAm/C+kE,wCAArrE;AAn/CsGA,MAAAA,EAm/CihE,oDAAvnE;AAAA;AAAA;AAAA,eAAuhGQ,EAAE,CAACwY,IAA1hG,EAAktGpY,EAAE,CAACqY,aAArtG,EAAwyGrY,EAAE,CAACsY,oBAA3yG,EAAi7GtY,EAAE,CAACuY,MAAp7G,EAAklHrY,EAAE,CAACsY,gBAArlH,EAAstHxY,EAAE,CAACyY,oBAAztH,EAAm9HzY,EAAE,CAAC0Y,gBAAt9H,EAAylI1Y,EAAE,CAAC2Y,eAA5lI,EAA8qI3Y,EAAE,CAAC4Y,OAAjrI,EAAm3I5Y,EAAE,CAAC6Y,iBAAt3I,EAA22F3Y,EAAE,CAAC+Y,iBAA92F,EAA6jJnZ,EAAE,CAACgZ,kBAAhkJ,EAAquF5Y,EAAE,CAACgZ,gBAAxuF,EAAwmGtZ,EAAE,CAACuZ,OAA3mG;AAAA;AAAA;AAAA;;AACA;AAAA,qDAp/CsG/Z,EAo/CtG,mBAA2Fsa,0BAA3F,EAAmI,CAAC;AACxHlO,IAAAA,IAAI,EAAEhM,SADkH;AAExHmE,IAAAA,IAAI,EAAE,CAAC;AAAEyS,MAAAA,QAAQ,EAAE,0BAAZ;AAAwCiD,MAAAA,eAAe,EAAE5Z,uBAAuB,CAAC6Z,MAAjF;AAAyFjD,MAAAA,QAAQ,EAAE,uyEAAnG;AAA44EC,MAAAA,MAAM,EAAE,CAAC,sNAAD;AAAp5E,KAAD;AAFkH,GAAD,CAAnI,EAG4B,YAAY;AAAE,WAAO,CAAC;AAAE9K,MAAAA,IAAI,EAAEoB;AAAR,KAAD,EAA0B;AAAEpB,MAAAA,IAAI,EAAE9F,SAAR;AAAmB+F,MAAAA,UAAU,EAAE,CAAC;AACvFD,QAAAA,IAAI,EAAEjM,MADiF;AAEvFoE,QAAAA,IAAI,EAAE,CAACX,eAAD;AAFiF,OAAD;AAA/B,KAA1B,EAG3B;AAAEwI,MAAAA,IAAI,EAAEpM,EAAE,CAAC8Y;AAAX,KAH2B,EAGK;AAAE1M,MAAAA,IAAI,EAAE1L,EAAE,CAACqY;AAAX,KAHL,CAAP;AAGmC,GAN7E;AAAA;AAQA;AACA;AACA;AACA;AACA;;;AACA,MAAMwB,wBAAN,CAA+B;AAC3B3S,EAAAA,WAAW,CAACyQ,OAAD,EAAU3J,OAAO,GAAG,EAApB,EAAwB4J,EAAxB,EAA4BC,MAA5B,EAAoC;AAC3C,SAAKF,OAAL,GAAeA,OAAf;AACA,SAAK3J,OAAL,GAAeA,OAAf;AACA,SAAK4J,EAAL,GAAUA,EAAV;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAK7V,aAAL,GAAqB,CAArB;AACA,SAAKG,YAAL,GAAoB,EAApB;AACA,SAAKF,QAAL,GAAgB,EAAhB;AACA,SAAK8V,SAAL,GAAiB,KAAjB;AACA,SAAK1I,MAAL,GAAc,EAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKwI,IAAL,GAAY,EAAZ;AACA,SAAK9V,aAAL,GAAqB,KAAKgW,cAAL,CAAoB,mCAApB,CAArB;AACA,SAAK7V,YAAL,GAAoB,KAAK6V,cAAL,CAAoB,kCAApB,CAApB;AACA,SAAK/V,QAAL,GAAgB,KAAK+V,cAAL,CAAoB,8BAApB,CAAhB;AACH;;AACDpC,EAAAA,SAAS,GAAG;AACR,SAAKvG,MAAL,GAAc,KAAKC,QAAL,GAAgB,EAA9B;AACA,SAAKyI,SAAL,GAAiB,IAAjB;AACA,SAAKJ,OAAL,CAAalV,aAAb,CAA2B,KAAKR,QAAhC,EAA0C,KAAK6V,IAA/C,EAAqDhB,SAArD,CAAgEpJ,MAAD,IAAY;AACvE,WAAKqK,SAAL,GAAiB,KAAjB;;AACA,UAAIrK,MAAM,CAACN,SAAP,EAAJ,EAAwB;AACpB,aAAKkC,QAAL,GAAgB5B,MAAM,CAACiC,WAAP,EAAhB;AACH,OAFD,MAGK;AACD,aAAKN,MAAL,GAAc3B,MAAM,CAACgC,SAAP,EAAd;AACH;;AACD,YAAMN,QAAQ,GAAG1B,MAAM,CAAC+B,WAAP,EAAjB;;AACA,UAAIL,QAAJ,EAAc;AACV6I,QAAAA,UAAU,CAAC,MAAM;AACb,iBAAO,KAAKJ,MAAL,CAAYK,aAAZ,CAA0B9I,QAA1B,CAAP;AACH,SAFS,EAEP,KAAKpN,aAFE,CAAV;AAGH;;AACD,WAAK4V,EAAL,CAAQO,aAAR;AACH,KAfD;AAgBH;;AACDH,EAAAA,cAAc,CAACvT,GAAD,EAAM;AAChB,WAAOY,iBAAiB,CAAC,KAAK2I,OAAN,EAAevJ,GAAf,EAAoB,IAApB,CAAxB;AACH;;AAvC0B;;AAyC/BoV,wBAAwB,CAACrO,IAAzB;AAAA,mBAAqHqO,wBAArH,EA1iDsGva,EA0iDtG,mBAA+JwN,aAA/J,GA1iDsGxN,EA0iDtG,mBAAyL4D,eAAzL,GA1iDsG5D,EA0iDtG,mBAAqNA,EAAE,CAAC8Y,iBAAxN,GA1iDsG9Y,EA0iDtG,mBAAsPU,EAAE,CAACqY,MAAzP;AAAA;;AACAwB,wBAAwB,CAACxD,IAAzB,kBA3iDsG/W,EA2iDtG;AAAA,QAAyGua,wBAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3iDsGva,MAAAA,EA2iD0F,2BAAhM;AA3iDsGA,MAAAA,EA2iD2H,6BAAjO;AA3iDsGA,MAAAA,EA2iD0I,eAAhP;AA3iDsGA,MAAAA,EA2iDiJ,0BAAvP;AA3iDsGA,MAAAA,EA2iDwK,uCAA9Q;AA3iDsGA,MAAAA,EA2iDiM,eAAvS;AA3iDsGA,MAAAA,EA2iDyM,iFAA/S;AA3iDsGA,MAAAA,EA2iDkf,iFAAxlB;AA3iDsGA,MAAAA,EA2iDqyB,gCAA34B;AA3iDsGA,MAAAA,EA2iD2yB;AAAA,eAAa,eAAb;AAAA,QAAj5B;AA3iDsGA,MAAAA,EA2iDg4B,4BAAt+B;AA3iDsGA,MAAAA,EA2iDw6B,8BAA9gC;AA3iDsGA,MAAAA,EA2iDs9B,4BAA5jC;AA3iDsGA,MAAAA,EA2iDm+B,eAAzkC;AA3iDsGA,MAAAA,EA2iDi/B,kCAAvlC;AA3iDsGA,MAAAA,EA2iD4gC;AAAA;AAAA,QAAlnC;AA3iDsGA,MAAAA,EA2iDi/B,eAAvlC;AA3iDsGA,MAAAA,EA2iD2uD,4FAAj1D;AA3iDsGA,MAAAA,EA2iDyvE,eAA/1E;AA3iDsGA,MAAAA,EA2iDqwE,8BAA32E;AA3iDsGA,MAAAA,EA2iDqyE,gCAA34E;AA3iDsGA,MAAAA,EA2iDs1E,gCAA57E;AA3iDsGA,MAAAA,EA2iDu2E,eAA78E;AA3iDsGA,MAAAA,EA2iDq3E,oCAA39E;AA3iDsGA,MAAAA,EA2iDg5E;AAAA;AAAA,QAAt/E;AA3iDsGA,MAAAA,EA2iDq3E,eAA39E;AA3iDsGA,MAAAA,EA2iDy/F,4FAA/lG;AA3iDsGA,MAAAA,EA2iDm4G,eAAz+G;AA3iDsGA,MAAAA,EA2iD+4G,iCAAr/G;AA3iDsGA,MAAAA,EA2iD0lH,gCAAhsH;AA3iDsGA,MAAAA,EA2iD6mH,eAAntH;AA3iDsGA,MAAAA,EA2iDwnH,eAA9tH;AA3iDsGA,MAAAA,EA2iDmoH,kCAAzuH;AA3iDsGA,MAAAA,EA2iD0sH,wBAAhzH;AA3iDsGA,MAAAA,EA2iD6sH,4BAAnzH;AA3iDsGA,MAAAA,EA2iD4vH,6BAAl2H;AA3iDsGA,MAAAA,EA2iD0wH,eAAh3H;AA3iDsGA,MAAAA,EA2iD8wH,eAAp3H;AA3iDsGA,MAAAA,EA2iDsxH,wBAA53H;AA3iDsGA,MAAAA,EA2iDyxH,4BAA/3H;AA3iDsGA,MAAAA,EA2iD20H,uBAAj7H;AA3iDsGA,MAAAA,EA2iDm1H,eAAz7H;AA3iDsGA,MAAAA,EA2iDu1H,eAA77H;AA3iDsGA,MAAAA,EA2iD61H,eAAn8H;AAAA;;AAAA;AAAA,kBA3iDsGA,EA2iDtG;;AAAA,kBA3iDsGA,EA2iDtG;;AAAA,kBA3iDsGA,EA2iDtG;;AA3iDsGA,MAAAA,EA2iDoN,aAA1T;AA3iDsGA,MAAAA,EA2iDoN,gHAA1T;AA3iDsGA,MAAAA,EA2iD6f,aAAnmB;AA3iDsGA,MAAAA,EA2iD6f,sHAAnmB;AA3iDsGA,MAAAA,EA2iD4gC,aAAlnC;AA3iDsGA,MAAAA,EA2iD4gC,mUAAlnC;AA3iDsGA,MAAAA,EA2iD0pD,sEAAhwD;AA3iDsGA,MAAAA,EA2iD0vD,aAAh2D;AA3iDsGA,MAAAA,EA2iD0vD,+CAAh2D;AA3iDsGA,MAAAA,EA2iDg5E,aAAt/E;AA3iDsGA,MAAAA,EA2iDg5E,sNAAt/E;AA3iDsGA,MAAAA,EA2iD46F,sEAAlhG;AA3iDsGA,MAAAA,EA2iDwgG,aAA9mG;AA3iDsGA,MAAAA,EA2iDwgG,gCAA9mG;AA3iDsGA,MAAAA,EA2iDojH,aAA1pH;AA3iDsGA,MAAAA,EA2iDojH,wCAA1pH;AA3iDsGA,MAAAA,EA2iDw/G,oDAA9lH;AAAA;AAAA;AAAA,eAA2/IQ,EAAE,CAACwY,IAA9/I,EAAsrJpY,EAAE,CAACqY,aAAzrJ,EAA4wJrY,EAAE,CAACsY,oBAA/wJ,EAAq5JtY,EAAE,CAACuY,MAAx5J,EAAsjKrY,EAAE,CAACsY,gBAAzjK,EAA0rKxY,EAAE,CAACyY,oBAA7rK,EAAu7KzY,EAAE,CAAC2Y,eAA17K,EAA4gL3Y,EAAE,CAAC4Y,OAA/gL,EAAitL5Y,EAAE,CAAC6Y,iBAAptL,EAA25L7Y,EAAE,CAAC+Y,kBAA95L,EAA2iM/Y,EAAE,CAACgZ,kBAA9iM,EAA+0I9Y,EAAE,CAAC+Y,iBAAl1I,EAA2rMnZ,EAAE,CAACgZ,kBAA9rM,EAAysI5Y,EAAE,CAACgZ,gBAA5sI,EAA4kJtZ,EAAE,CAACuZ,OAA/kJ;AAAA;AAAA;AAAA;;AACA;AAAA,qDA5iDsG/Z,EA4iDtG,mBAA2Fua,wBAA3F,EAAiI,CAAC;AACtHnO,IAAAA,IAAI,EAAEhM,SADgH;AAEtHmE,IAAAA,IAAI,EAAE,CAAC;AAAEyS,MAAAA,QAAQ,EAAE,wBAAZ;AAAsCiD,MAAAA,eAAe,EAAE5Z,uBAAuB,CAAC6Z,MAA/E;AAAuFjD,MAAAA,QAAQ,EAAE,ixHAAjG;AAAo3HC,MAAAA,MAAM,EAAE,CAAC,sNAAD;AAA53H,KAAD;AAFgH,GAAD,CAAjI,EAG4B,YAAY;AAAE,WAAO,CAAC;AAAE9K,MAAAA,IAAI,EAAEoB;AAAR,KAAD,EAA0B;AAAEpB,MAAAA,IAAI,EAAE9F,SAAR;AAAmB+F,MAAAA,UAAU,EAAE,CAAC;AACvFD,QAAAA,IAAI,EAAEjM,MADiF;AAEvFoE,QAAAA,IAAI,EAAE,CAACX,eAAD;AAFiF,OAAD;AAA/B,KAA1B,EAG3B;AAAEwI,MAAAA,IAAI,EAAEpM,EAAE,CAAC8Y;AAAX,KAH2B,EAGK;AAAE1M,MAAAA,IAAI,EAAE1L,EAAE,CAACqY;AAAX,KAHL,CAAP;AAGmC,GAN7E;AAAA;;AAQA,SAASyB,mBAAT,CAA6B9L,OAA7B,EAAsC+L,QAAtC,EAAgD;AAC5C,QAAMlY,UAAU,GAAG,EAAnB;AACAmM,EAAAA,OAAO,CAACnM,UAAR,CACKuC,OADL,CACa,CAAC,CAAC4V,aAAD,EAAgBC,eAAhB,CAAD,KAAsC;AAC/C,UAAMhY,QAAQ,GAAG8X,QAAQ,CAAChO,GAAT,CAAaiO,aAAb,CAAjB;AACA/X,IAAAA,QAAQ,CAAC8L,UAAT,CAAoBkM,eAApB;AACApY,IAAAA,UAAU,CAAC2Q,IAAX,CAAgBvQ,QAAhB;AACH,GALD;AAMA,SAAOJ,UAAP;AACH;;AACD,SAASqY,eAAT,CAAyBrY,UAAzB,EAAqC;AACjC,QAAMsY,MAAM,GAAG,EAAf;AACAtY,EAAAA,UAAU,CACLuC,OADL,CACcnC,QAAD,IAAc;AACvBkY,IAAAA,MAAM,CAAC3H,IAAP,CAAYvQ,QAAQ,CAACiM,SAAT,CAAmB,aAAnB,CAAZ;AACH,GAHD;AAIA,SAAOiM,MAAP;AACH;;AACD,SAASC,gBAAT,CAA0BpM,OAA1B,EAAmC;AAC/B,SAAOxK,UAAU,CAAC5B,kBAAD,EAAqBoM,OAArB,CAAjB;AACH;;AACD,SAASqM,uBAAT,CAAiCC,GAAjC,EAAsC;AAClC,SAAO,IAAP;AACH;;AACD,MAAMC,YAAN,CAAmB;AACD,SAAPC,OAAO,CAACC,aAAD,EAAgB;AAC1B,WAAO;AACHC,MAAAA,QAAQ,EAAEH,YADP;AAEHI,MAAAA,SAAS,EAAE,CACP;AAAEC,QAAAA,OAAO,EAAEzX,oBAAX;AAAiC0X,QAAAA,QAAQ,EAAEJ;AAA3C,OADO,EAEP;AAAEG,QAAAA,OAAO,EAAE1X,eAAX;AAA4B4X,QAAAA,UAAU,EAAEV,gBAAxC;AAA0DW,QAAAA,IAAI,EAAE,CAAC5X,oBAAD;AAAhE,OAFO,EAGP;AAAEyX,QAAAA,OAAO,EAAExX,kBAAX;AAA+B0X,QAAAA,UAAU,EAAEhB,mBAA3C;AAAgEiB,QAAAA,IAAI,EAAE,CAAC7X,eAAD,EAAkBtD,QAAlB;AAAtE,OAHO,EAIP;AAAEgb,QAAAA,OAAO,EAAEvX,cAAX;AAA2ByX,QAAAA,UAAU,EAAEZ,eAAvC;AAAwDa,QAAAA,IAAI,EAAE,CAAC3X,kBAAD;AAA9D,OAJO,EAKP;AAAEwX,QAAAA,OAAO,EAAElQ,sBAAX;AAAmCmQ,QAAAA,QAAQ,EAAEpS;AAA7C,OALO,EAMP;AAAEmS,QAAAA,OAAO,EAAEtX,0BAAX;AAAuCuX,QAAAA,QAAQ,EAAE;AAAjD,OANO,EAOP;AAAED,QAAAA,OAAO,EAAErX,gCAAX;AAA6CsX,QAAAA,QAAQ,EAAER;AAAvD,OAPO,EAQP;AAAEO,QAAAA,OAAO,EAAEhP,cAAX;AAA2BoP,QAAAA,QAAQ,EAAEnP;AAArC,OARO,EASPlB,mBATO,EAUPmC,aAVO,EAWPP,cAXO,EAYP2D,mBAZO,EAaP8F,sBAbO,EAcPtE,oBAdO;AAFR,KAAP;AAmBH;;AArBc;;AAuBnB6I,YAAY,CAAC/O,IAAb;AAAA,mBAAyG+O,YAAzG;AAAA;;AACAA,YAAY,CAACU,IAAb,kBApmDsG3b,EAomDtG;AAAA,QAA0Gib;AAA1G;AAsBAA,YAAY,CAACW,IAAb,kBA1nDsG5b,EA0nDtG;AAAA,YAAkI,CACtHS,YADsH,EAEtHO,cAFsH,EAGtHC,YAHsH,EAItHC,gBAJsH,EAKtHC,aALsH,EAMtHC,aANsH,EAOtHC,cAPsH,EAQtHV,YARsH,EAStHE,WATsH,EAUtHS,YAVsH,CAAlI;AAAA;;AAYA;AAAA,qDAtoDsGtB,EAsoDtG,mBAA2Fib,YAA3F,EAAqH,CAAC;AAC1G7O,IAAAA,IAAI,EAAE7L,QADoG;AAE1GgE,IAAAA,IAAI,EAAE,CAAC;AACCsX,MAAAA,OAAO,EAAE,CACLpb,YADK,EAELO,cAFK,EAGLC,YAHK,EAILC,gBAJK,EAKLC,aALK,EAMLC,aANK,EAOLC,cAPK,EAQLV,YARK,EASLE,WATK,EAULS,YAVK,CADV;AAaCwa,MAAAA,YAAY,EAAE,CACV3E,eADU,EAEVL,oBAFU,EAGVsB,gBAHU,EAIV+B,mBAJU,EAKVG,0BALU,EAMVC,wBANU,EAOVH,iBAPU,CAbf;AAsBC2B,MAAAA,OAAO,EAAE,CACL5E,eADK,EAELL,oBAFK,EAGLsB,gBAHK,EAIL+B,mBAJK,EAKLG,0BALK,EAMLC,wBANK,EAOLH,iBAPK;AAtBV,KAAD;AAFoG,GAAD,CAArH;AAAA;;AAoCA,MAAM4B,MAAM,GAAG,CACX;AACIC,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,SAAS,EAAE/E,eAFf;AAGIgF,EAAAA,QAAQ,EAAE,CACN;AACIF,IAAAA,IAAI,EAAE,EADV;AAEIC,IAAAA,SAAS,EAAE9D;AAFf,GADM,EAKN;AACI6D,IAAAA,IAAI,EAAE,OADV;AAEIC,IAAAA,SAAS,EAAE9D;AAFf,GALM,EASN;AACI6D,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,SAAS,EAAE/B;AAFf,GATM,EAaN;AACI8B,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,SAAS,EAAE9B;AAFf,GAbM,EAiBN;AACI6B,IAAAA,IAAI,EAAE,kBADV;AAEIC,IAAAA,SAAS,EAAE5B;AAFf,GAjBM,EAqBN;AACI2B,IAAAA,IAAI,EAAE,gBADV;AAEIC,IAAAA,SAAS,EAAE3B;AAFf,GArBM;AAHd,CADW,CAAf;;AAiCA,MAAM6B,oBAAN,CAA2B;AACvBxU,EAAAA,WAAW,CAAC6S,QAAD,EAAW/Y,MAAX,EAAmB;AAC1B,SAAK+Y,QAAL,GAAgBA,QAAhB;AACA,SAAK/Y,MAAL,GAAcA,MAAd;AACH;;AACD2a,EAAAA,SAAS,CAACrB,GAAD,EAAMzN,IAAN,EAAY;AACjB;AACA,QAAI,CAAC,KAAK7L,MAAL,CAAYsZ,GAAZ,CAAL,EAAuB;AACnB,aAAO,KAAKsB,WAAL,CAAiB1O,wBAAjB,GACFN,IADE,CACGzL,SAAS,CAACyV,aAAa,IAAI;AACjC,YAAIA,aAAJ,EAAmB;AACf,iBAAO,KAAKgF,WAAL,CAAiB5O,QAAjB,GAA4BJ,IAA5B,CAAiCzL,SAAS,CAAE6G,KAAD,IAAW;AACzD,kBAAM6T,GAAG,GAAI,UAAS7T,KAAK,CAACe,QAAN,EAAiB,EAAvC;AACAuR,YAAAA,GAAG,GAAGA,GAAG,CAACpV,KAAJ,CAAU;AACZ4W,cAAAA,UAAU,EAAE;AACR1H,gBAAAA,aAAa,EAAEyH;AADP;AADA,aAAV,CAAN;AAKA,mBAAOhP,IAAI,CAACkP,MAAL,CAAYzB,GAAZ,CAAP;AACH,WARgD,CAA1C,CAAP;AASH,SAVD,MAWK;AACD;AACA;AACA,iBAAOzN,IAAI,CAACkP,MAAL,CAAYzB,GAAZ,CAAP;AACH;AACJ,OAjBkB,CADZ,CAAP;AAmBH,KApBD,MAqBK;AACD,aAAOzN,IAAI,CAACkP,MAAL,CAAYzB,GAAZ,CAAP;AACH;AACJ;;AACc,MAAXsB,WAAW,GAAG;AACd,WAAO,KAAK7B,QAAL,CAAchO,GAAd,CAAkBe,aAAlB,CAAP;AACH;;AAlCsB;;AAoC3B4O,oBAAoB,CAAClQ,IAArB;AAAA,mBAAiHkQ,oBAAjH,EA/uDsGpc,EA+uDtG,UAAuJA,EAAE,CAACM,QAA1J,GA/uDsGN,EA+uDtG,UAA+KiE,gCAA/K;AAAA;;AACAmY,oBAAoB,CAACjQ,KAArB,kBAhvDsGnM,EAgvDtG;AAAA,SAAqHoc,oBAArH;AAAA,WAAqHA,oBAArH;AAAA;;AACA;AAAA,qDAjvDsGpc,EAivDtG,mBAA2Foc,oBAA3F,EAA6H,CAAC;AAClHhQ,IAAAA,IAAI,EAAElM;AAD4G,GAAD,CAA7H,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEkM,MAAAA,IAAI,EAAEpM,EAAE,CAACM;AAAX,KAAD,EAAwB;AAAE8L,MAAAA,IAAI,EAAE9F,SAAR;AAAmB+F,MAAAA,UAAU,EAAE,CAAC;AACrFD,QAAAA,IAAI,EAAEjM,MAD+E;AAErFoE,QAAAA,IAAI,EAAE,CAACN,gCAAD;AAF+E,OAAD;AAA/B,KAAxB,CAAP;AAGlB,GALxB;AAAA;;AAOA,MAAMyY,uBAAN,CAA8B;AAC1B9U,EAAAA,WAAW,CAAC6S,QAAD,EAAWkC,UAAU,GAAG,eAAxB,EAAyC;AAChD,SAAKlC,QAAL,GAAgBA,QAAhB;AACA,SAAKkC,UAAL,GAAkBA,UAAlB;AACH;;AACDN,EAAAA,SAAS,CAACrB,GAAD,EAAMzN,IAAN,EAAY;AACjB,WAAO,KAAK+O,WAAL,CAAiB5O,QAAjB,GAA4BJ,IAA5B,CAAiCzL,SAAS,CAAE6G,KAAD,IAAW;AACzD,UAAIA,KAAK,IAAIA,KAAK,CAACe,QAAN,EAAb,EAA+B;AAC3BuR,QAAAA,GAAG,GAAGA,GAAG,CAACpV,KAAJ,CAAU;AACZ4W,UAAAA,UAAU,EAAE;AACR,aAAC,KAAKG,UAAN,GAAmBjU,KAAK,CAACe,QAAN;AADX;AADA,SAAV,CAAN;AAKH;;AACD,aAAO8D,IAAI,CAACkP,MAAL,CAAYzB,GAAZ,CAAP;AACH,KATgD,CAA1C,CAAP;AAUH;;AACc,MAAXsB,WAAW,GAAG;AACd,WAAO,KAAK7B,QAAL,CAAchO,GAAd,CAAkBe,aAAlB,CAAP;AACH;;AAnByB;;AAqB9BkP,uBAAuB,CAACxQ,IAAxB;AAAA,mBAAoHwQ,uBAApH,EA7wDsG1c,EA6wDtG,UAA6JA,EAAE,CAACM,QAAhK,GA7wDsGN,EA6wDtG,UAAqLgE,0BAArL;AAAA;;AACA0Y,uBAAuB,CAACvQ,KAAxB,kBA9wDsGnM,EA8wDtG;AAAA,SAAwH0c,uBAAxH;AAAA,WAAwHA,uBAAxH;AAAA;;AACA;AAAA,qDA/wDsG1c,EA+wDtG,mBAA2F0c,uBAA3F,EAAgI,CAAC;AACrHtQ,IAAAA,IAAI,EAAElM;AAD+G,GAAD,CAAhI,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEkM,MAAAA,IAAI,EAAEpM,EAAE,CAACM;AAAX,KAAD,EAAwB;AAAE8L,MAAAA,IAAI,EAAE9F,SAAR;AAAmB+F,MAAAA,UAAU,EAAE,CAAC;AACrFD,QAAAA,IAAI,EAAEjM,MAD+E;AAErFoE,QAAAA,IAAI,EAAE,CAACP,0BAAD;AAF+E,OAAD;AAA/B,KAAxB,CAAP;AAGlB,GALxB;AAAA;;AAOA,MAAM4Y,MAAN,CAAa;AACThV,EAAAA,WAAW,CAACiV,EAAD,EAAKnZ,KAAL,EAAYJ,QAAZ,EAAsBV,UAAtB,EAAkCK,KAAlC,EAAyC6Z,eAAzC,EAA0DnZ,QAA1D,EAAoE;AAC3E,SAAKkZ,EAAL,GAAUA,EAAV;AACA,SAAKnZ,KAAL,GAAaA,KAAb;AACA,SAAKJ,QAAL,GAAgBA,QAAhB;AACA,SAAKV,UAAL,GAAkBA,UAAlB;AACA,SAAKK,KAAL,GAAaA,KAAb;AACA,SAAK6Z,eAAL,GAAuBA,eAAvB;AACA,SAAKnZ,QAAL,GAAgBA,QAAhB;AACH;;AATQ;AAYb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAEA,SAASyH,sBAAT,EAAiCpH,0BAAjC,EAA6DJ,eAA7D,EAA8EE,kBAA9E,EAAkGC,cAAlG,EAAkHE,gCAAlH,EAAoJJ,oBAApJ,EAA0KiT,oBAA1K,EAAgMK,eAAhM,EAAiN7O,qBAAjN,EAAwOC,0BAAxO,EAAoQF,uBAApQ,EAA6R+T,oBAA7R,EAAmTxS,cAAnT,EAAmUqR,YAAnU,EAAiVlQ,oBAAjV,EAAuWV,iBAAvW,EAA0XuF,YAA1X,EAAwYpC,aAAxY,EAAuZkP,uBAAvZ,EAAgbvT,iBAAhb,EAAmcqF,cAAnc,EAAmd+B,qBAAnd,EAA0e5I,WAA1e,EAAufM,wBAAvf,EAAihBoD,mBAAjhB,EAAsiBuF,mBAAtiB,EAA2jBJ,0BAA3jB,EAAulB4H,gBAAvlB,EAAymBgC,iBAAzmB,EAA4nBhI,oBAA5nB,EAAkpBlB,2BAAlpB,EAA+qBD,wBAA/qB,EAAysBD,iBAAzsB,EAA4tBD,oBAA5tB,EAAkvB2F,sBAAlvB,EAA0wBP,6BAA1wB,EAAyyBgE,mBAAzyB,EAA8zBG,0BAA9zB,EAA01BC,wBAA11B,EAAo3BhO,mBAAp3B,EAAy4BU,cAAz4B,EAAy5BX,cAAz5B,EAAy6BsQ,MAAz6B,EAAi7BzK,oBAAj7B,EAAu8BxL,gBAAv8B,EAAy9BC,SAAz9B,EAAo+BiC,gBAAp+B,EAAs/B3E,UAAt/B,EAAkgC5B,kBAAlgC,EAAshCqO,oBAAthC,EAA4iC5K,iBAA5iC,EAA+jCyC,iBAA/jC,EAAklCuS,uBAAllC,EAA2mCD,gBAA3mC,EAA6nCN,mBAA7nC,EAAkpCI,eAAlpC,EAAmqCnE,uBAAnqC,EAA4rCuF,MAA5rC,EAAosCzV,eAApsC","sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Inject, Component, ChangeDetectionStrategy, Injector, NgModule } from '@angular/core';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i5 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i3 from '@nebular/theme';\nimport { NB_WINDOW, NbLayoutModule, NbCardModule, NbCheckboxModule, NbAlertModule, NbInputModule, NbButtonModule, NbIconModule } from '@nebular/theme';\nimport { BehaviorSubject, of, Subject } from 'rxjs';\nimport { filter, share, map, switchMap, delay, catchError, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpResponse, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\nconst socialLinks = [];\nconst defaultAuthOptions = {\n    strategies: [],\n    forms: {\n        login: {\n            redirectDelay: 500,\n            strategy: 'email',\n            rememberMe: true,\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            socialLinks: socialLinks, // social links at the bottom of a page\n        },\n        register: {\n            redirectDelay: 500,\n            strategy: 'email',\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            terms: true,\n            socialLinks: socialLinks,\n        },\n        requestPassword: {\n            redirectDelay: 500,\n            strategy: 'email',\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            socialLinks: socialLinks,\n        },\n        resetPassword: {\n            redirectDelay: 500,\n            strategy: 'email',\n            showMessages: {\n                success: true,\n                error: true,\n            },\n            socialLinks: socialLinks,\n        },\n        logout: {\n            redirectDelay: 500,\n            strategy: 'email',\n        },\n        validation: {\n            password: {\n                required: true,\n                minLength: 4,\n                maxLength: 50,\n            },\n            email: {\n                required: true,\n            },\n            fullName: {\n                required: false,\n                minLength: 4,\n                maxLength: 50,\n            },\n        },\n    },\n};\nconst NB_AUTH_OPTIONS = new InjectionToken('Nebular Auth Options');\nconst NB_AUTH_USER_OPTIONS = new InjectionToken('Nebular User Auth Options');\nconst NB_AUTH_STRATEGIES = new InjectionToken('Nebular Auth Strategies');\nconst NB_AUTH_TOKENS = new InjectionToken('Nebular Auth Tokens');\nconst NB_AUTH_INTERCEPTOR_HEADER = new InjectionToken('Nebular Simple Interceptor Header');\nconst NB_AUTH_TOKEN_INTERCEPTOR_FILTER = new InjectionToken('Nebular Interceptor Filter');\n\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nconst deepExtend = function (...objects) {\n    if (arguments.length < 1 || typeof arguments[0] !== 'object') {\n        return false;\n    }\n    if (arguments.length < 2) {\n        return arguments[0];\n    }\n    const target = arguments[0];\n    // convert arguments to array and cut off target object\n    const args = Array.prototype.slice.call(arguments, 1);\n    let val, src;\n    args.forEach(function (obj) {\n        // skip argument if it is array or isn't object\n        if (typeof obj !== 'object' || Array.isArray(obj)) {\n            return;\n        }\n        Object.keys(obj).forEach(function (key) {\n            src = target[key]; // source value\n            val = obj[key]; // new value\n            // recursion prevention\n            if (val === target) {\n                return;\n                /**\n                 * if new value isn't object then just overwrite by new value\n                 * instead of extending.\n                 */\n            }\n            else if (typeof val !== 'object' || val === null) {\n                target[key] = val;\n                return;\n                // just clone arrays (and recursive clone objects inside)\n            }\n            else if (Array.isArray(val)) {\n                target[key] = deepCloneArray(val);\n                return;\n                // custom cloning and overwrite for specific objects\n            }\n            else if (isSpecificValue(val)) {\n                target[key] = cloneSpecificValue(val);\n                return;\n                // overwrite by new value if source isn't object or array\n            }\n            else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n                target[key] = deepExtend({}, val);\n                return;\n                // source value and new value is objects both, extending...\n            }\n            else {\n                target[key] = deepExtend(src, val);\n                return;\n            }\n        });\n    });\n    return target;\n};\nfunction isSpecificValue(val) {\n    return (val instanceof Date\n        || val instanceof RegExp) ? true : false;\n}\nfunction cloneSpecificValue(val) {\n    if (val instanceof Date) {\n        return new Date(val.getTime());\n    }\n    else if (val instanceof RegExp) {\n        return new RegExp(val);\n    }\n    else {\n        throw new Error('cloneSpecificValue: Unexpected situation');\n    }\n}\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n    const clone = [];\n    arr.forEach(function (item, index) {\n        if (typeof item === 'object' && item !== null) {\n            if (Array.isArray(item)) {\n                clone[index] = deepCloneArray(item);\n            }\n            else if (isSpecificValue(item)) {\n                clone[index] = cloneSpecificValue(item);\n            }\n            else {\n                clone[index] = deepExtend({}, item);\n            }\n        }\n        else {\n            clone[index] = item;\n        }\n    });\n    return clone;\n}\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\nfunction getDeepFromObject(object = {}, name, defaultValue) {\n    const keys = name.split('.');\n    // clone the object\n    let level = deepExtend({}, object || {});\n    keys.forEach((k) => {\n        if (level && typeof level[k] !== 'undefined') {\n            level = level[k];\n        }\n        else {\n            level = undefined;\n        }\n    });\n    return typeof level === 'undefined' ? defaultValue : level;\n}\nfunction urlBase64Decode(str) {\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\n    switch (output.length % 4) {\n        case 0: {\n            break;\n        }\n        case 2: {\n            output += '==';\n            break;\n        }\n        case 3: {\n            output += '=';\n            break;\n        }\n        default: {\n            throw new Error('Illegal base64url string!');\n        }\n    }\n    return b64DecodeUnicode(output);\n}\nfunction b64decode(str) {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let output = '';\n    str = String(str).replace(/=+$/, '');\n    if (str.length % 4 === 1) {\n        throw new Error(`'atob' failed: The string to be decoded is not correctly encoded.`);\n    }\n    for (\n    // initialize result and counters\n    let bc = 0, bs, buffer, idx = 0; \n    // get next character\n    buffer = str.charAt(idx++); \n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n// https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(Array.prototype.map.call(b64decode(str), (c) => {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n}\n\nclass NbAuthToken {\n    constructor() {\n        this.payload = null;\n    }\n    getName() {\n        return this.constructor.NAME;\n    }\n    getPayload() {\n        return this.payload;\n    }\n}\nclass NbAuthTokenNotFoundError extends Error {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass NbAuthIllegalTokenError extends Error {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass NbAuthEmptyTokenError extends NbAuthIllegalTokenError {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass NbAuthIllegalJWTTokenError extends NbAuthIllegalTokenError {\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nfunction nbAuthCreateToken(tokenClass, token, ownerStrategyName, createdAt) {\n    return new tokenClass(token, ownerStrategyName, createdAt);\n}\nfunction decodeJwtPayload(payload) {\n    if (payload.length === 0) {\n        throw new NbAuthEmptyTokenError('Cannot extract from an empty payload.');\n    }\n    const parts = payload.split('.');\n    if (parts.length !== 3) {\n        throw new NbAuthIllegalJWTTokenError(`The payload ${payload} is not valid JWT payload and must consist of three parts.`);\n    }\n    let decoded;\n    try {\n        decoded = urlBase64Decode(parts[1]);\n    }\n    catch (e) {\n        throw new NbAuthIllegalJWTTokenError(`The payload ${payload} is not valid JWT payload and cannot be parsed.`);\n    }\n    if (!decoded) {\n        throw new NbAuthIllegalJWTTokenError(`The payload ${payload} is not valid JWT payload and cannot be decoded.`);\n    }\n    return JSON.parse(decoded);\n}\n/**\n * Wrapper for simple (text) token\n */\nclass NbAuthSimpleToken extends NbAuthToken {\n    constructor(token, ownerStrategyName, createdAt) {\n        super();\n        this.token = token;\n        this.ownerStrategyName = ownerStrategyName;\n        this.createdAt = createdAt;\n        try {\n            this.parsePayload();\n        }\n        catch (err) {\n            if (!(err instanceof NbAuthTokenNotFoundError)) {\n                // token is present but has got a problem, including illegal\n                throw err;\n            }\n        }\n        this.createdAt = this.prepareCreatedAt(createdAt);\n    }\n    parsePayload() {\n        this.payload = null;\n    }\n    prepareCreatedAt(date) {\n        return date ? date : new Date();\n    }\n    /**\n     * Returns the token's creation date\n     * @returns {Date}\n     */\n    getCreatedAt() {\n        return this.createdAt;\n    }\n    /**\n     * Returns the token value\n     * @returns string\n     */\n    getValue() {\n        return this.token;\n    }\n    getOwnerStrategyName() {\n        return this.ownerStrategyName;\n    }\n    /**\n     * Is non empty and valid\n     * @returns {boolean}\n     */\n    isValid() {\n        return !!this.getValue();\n    }\n    /**\n     * Validate value and convert to string, if value is not valid return empty string\n     * @returns {string}\n     */\n    toString() {\n        return !!this.token ? this.token : '';\n    }\n}\nNbAuthSimpleToken.NAME = 'nb:auth:simple:token';\n/**\n * Wrapper for JWT token with additional methods.\n */\nclass NbAuthJWTToken extends NbAuthSimpleToken {\n    /**\n     * for JWT token, the iat (issued at) field of the token payload contains the creation Date\n     */\n    prepareCreatedAt(date) {\n        const decoded = this.getPayload();\n        return decoded && decoded.iat ? new Date(Number(decoded.iat) * 1000) : super.prepareCreatedAt(date);\n    }\n    /**\n     * Returns payload object\n     * @returns any\n     */\n    parsePayload() {\n        if (!this.token) {\n            throw new NbAuthTokenNotFoundError('Token not found. ');\n        }\n        this.payload = decodeJwtPayload(this.token);\n    }\n    /**\n     * Returns expiration date\n     * @returns Date\n     */\n    getTokenExpDate() {\n        const decoded = this.getPayload();\n        if (decoded && !decoded.hasOwnProperty('exp')) {\n            return null;\n        }\n        const date = new Date(0);\n        date.setUTCSeconds(decoded.exp); // 'cause jwt token are set in seconds\n        return date;\n    }\n    /**\n     * Is data expired\n     * @returns {boolean}\n     */\n    isValid() {\n        return super.isValid() && (!this.getTokenExpDate() || new Date() < this.getTokenExpDate());\n    }\n}\nNbAuthJWTToken.NAME = 'nb:auth:jwt:token';\nconst prepareOAuth2Token = (data) => {\n    if (typeof data === 'string') {\n        try {\n            return JSON.parse(data);\n        }\n        catch (e) { }\n    }\n    return data;\n};\n/**\n * Wrapper for OAuth2 token whose access_token is a JWT Token\n */\nclass NbAuthOAuth2Token extends NbAuthSimpleToken {\n    constructor(data = {}, ownerStrategyName, createdAt) {\n        // we may get it as string when retrieving from a storage\n        super(prepareOAuth2Token(data), ownerStrategyName, createdAt);\n    }\n    /**\n     * Returns the token value\n     * @returns string\n     */\n    getValue() {\n        return this.token.access_token;\n    }\n    /**\n     * Returns the refresh token\n     * @returns string\n     */\n    getRefreshToken() {\n        return this.token.refresh_token;\n    }\n    /**\n     *  put refreshToken in the token payload\n      * @param refreshToken\n     */\n    setRefreshToken(refreshToken) {\n        this.token.refresh_token = refreshToken;\n    }\n    /**\n     * Parses token payload\n     * @returns any\n     */\n    parsePayload() {\n        if (!this.token) {\n            throw new NbAuthTokenNotFoundError('Token not found.');\n        }\n        else {\n            if (!Object.keys(this.token).length) {\n                throw new NbAuthEmptyTokenError('Cannot extract payload from an empty token.');\n            }\n        }\n        this.payload = this.token;\n    }\n    /**\n     * Returns the token type\n     * @returns string\n     */\n    getType() {\n        return this.token.token_type;\n    }\n    /**\n     * Is data expired\n     * @returns {boolean}\n     */\n    isValid() {\n        return super.isValid() && (!this.getTokenExpDate() || new Date() < this.getTokenExpDate());\n    }\n    /**\n     * Returns expiration date\n     * @returns Date\n     */\n    getTokenExpDate() {\n        if (!this.token.hasOwnProperty('expires_in')) {\n            return null;\n        }\n        return new Date(this.createdAt.getTime() + Number(this.token.expires_in) * 1000);\n    }\n    /**\n     * Convert to string\n     * @returns {string}\n     */\n    toString() {\n        return JSON.stringify(this.token);\n    }\n}\nNbAuthOAuth2Token.NAME = 'nb:auth:oauth2:token';\n/**\n * Wrapper for OAuth2 token embedding JWT tokens\n */\nclass NbAuthOAuth2JWTToken extends NbAuthOAuth2Token {\n    parsePayload() {\n        super.parsePayload();\n        this.parseAccessTokenPayload();\n    }\n    parseAccessTokenPayload() {\n        const accessToken = this.getValue();\n        if (!accessToken) {\n            throw new NbAuthTokenNotFoundError('access_token key not found.');\n        }\n        this.accessTokenPayload = decodeJwtPayload(accessToken);\n    }\n    /**\n     * Returns access token payload\n     * @returns any\n     */\n    getAccessTokenPayload() {\n        return this.accessTokenPayload;\n    }\n    /**\n     * for Oauth2 JWT token, the iat (issued at) field of the access_token payload\n     */\n    prepareCreatedAt(date) {\n        const payload = this.accessTokenPayload;\n        return payload && payload.iat ? new Date(Number(payload.iat) * 1000) : super.prepareCreatedAt(date);\n    }\n    /**\n     * Is token valid\n     * @returns {boolean}\n     */\n    isValid() {\n        return this.accessTokenPayload && super.isValid();\n    }\n    /**\n     * Returns expiration date :\n     * - exp if set,\n     * - super.getExpDate() otherwise\n     * @returns Date\n     */\n    getTokenExpDate() {\n        if (this.accessTokenPayload && this.accessTokenPayload.hasOwnProperty('exp')) {\n            const date = new Date(0);\n            date.setUTCSeconds(this.accessTokenPayload.exp);\n            return date;\n        }\n        else {\n            return super.getTokenExpDate();\n        }\n    }\n}\nNbAuthOAuth2JWTToken.NAME = 'nb:auth:oauth2:jwt:token';\n\nconst NB_AUTH_FALLBACK_TOKEN = new InjectionToken('Nebular Auth Options');\n/**\n * Creates a token parcel which could be stored/restored\n */\nclass NbAuthTokenParceler {\n    constructor(fallbackClass, tokenClasses) {\n        this.fallbackClass = fallbackClass;\n        this.tokenClasses = tokenClasses;\n    }\n    wrap(token) {\n        return JSON.stringify({\n            name: token.getName(),\n            ownerStrategyName: token.getOwnerStrategyName(),\n            createdAt: token.getCreatedAt().getTime(),\n            value: token.toString(),\n        });\n    }\n    unwrap(value) {\n        let tokenClass = this.fallbackClass;\n        let tokenValue = '';\n        let tokenOwnerStrategyName = '';\n        let tokenCreatedAt = null;\n        const tokenPack = this.parseTokenPack(value);\n        if (tokenPack) {\n            tokenClass = this.getClassByName(tokenPack.name) || this.fallbackClass;\n            tokenValue = tokenPack.value;\n            tokenOwnerStrategyName = tokenPack.ownerStrategyName;\n            tokenCreatedAt = new Date(Number(tokenPack.createdAt));\n        }\n        return nbAuthCreateToken(tokenClass, tokenValue, tokenOwnerStrategyName, tokenCreatedAt);\n    }\n    // TODO: this could be moved to a separate token registry\n    getClassByName(name) {\n        return this.tokenClasses.find((tokenClass) => tokenClass.NAME === name);\n    }\n    parseTokenPack(value) {\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) { }\n        return null;\n    }\n}\nNbAuthTokenParceler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthTokenParceler, deps: [{ token: NB_AUTH_FALLBACK_TOKEN }, { token: NB_AUTH_TOKENS }], target: i0.ɵɵFactoryTarget.Injectable });\nNbAuthTokenParceler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthTokenParceler });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthTokenParceler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_FALLBACK_TOKEN]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_TOKENS]\n                }] }]; } });\n\nclass NbTokenStorage {\n}\n/**\n * Service that uses browser localStorage as a storage.\n *\n * The token storage is provided into auth module the following way:\n * ```ts\n * { provide: NbTokenStorage, useClass: NbTokenLocalStorage },\n * ```\n *\n * If you need to change the storage behaviour or provide your own - just extend your class from basic `NbTokenStorage`\n * or `NbTokenLocalStorage` and provide in your `app.module`:\n * ```ts\n * { provide: NbTokenStorage, useClass: NbTokenCustomStorage },\n * ```\n *\n */\nclass NbTokenLocalStorage extends NbTokenStorage {\n    constructor(parceler) {\n        super();\n        this.parceler = parceler;\n        this.key = 'auth_app_token';\n    }\n    /**\n     * Returns token from localStorage\n     * @returns {NbAuthToken}\n     */\n    get() {\n        const raw = localStorage.getItem(this.key);\n        return this.parceler.unwrap(raw);\n    }\n    /**\n     * Sets token to localStorage\n     * @param {NbAuthToken} token\n     */\n    set(token) {\n        const raw = this.parceler.wrap(token);\n        localStorage.setItem(this.key, raw);\n    }\n    /**\n     * Clears token from localStorage\n     */\n    clear() {\n        localStorage.removeItem(this.key);\n    }\n}\nNbTokenLocalStorage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbTokenLocalStorage, deps: [{ token: NbAuthTokenParceler }], target: i0.ɵɵFactoryTarget.Injectable });\nNbTokenLocalStorage.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbTokenLocalStorage });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbTokenLocalStorage, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: NbAuthTokenParceler }]; } });\n\n/**\n * Service that allows you to manage authentication token - get, set, clear and also listen to token changes over time.\n */\nclass NbTokenService {\n    constructor(tokenStorage) {\n        this.tokenStorage = tokenStorage;\n        this.token$ = new BehaviorSubject(null);\n        this.publishStoredToken();\n    }\n    /**\n     * Publishes token when it changes.\n     * @returns {Observable<NbAuthToken>}\n     */\n    tokenChange() {\n        return this.token$\n            .pipe(filter(value => !!value), share());\n    }\n    /**\n     * Sets a token into the storage. This method is used by the NbAuthService automatically.\n     *\n     * @param {NbAuthToken} token\n     * @returns {Observable<any>}\n     */\n    set(token) {\n        this.tokenStorage.set(token);\n        this.publishStoredToken();\n        return of(null);\n    }\n    /**\n     * Returns observable of current token\n     * @returns {Observable<NbAuthToken>}\n     */\n    get() {\n        const token = this.tokenStorage.get();\n        return of(token);\n    }\n    /**\n     * Removes the token and published token value\n     *\n     * @returns {Observable<any>}\n     */\n    clear() {\n        this.tokenStorage.clear();\n        this.publishStoredToken();\n        return of(null);\n    }\n    publishStoredToken() {\n        this.token$.next(this.tokenStorage.get());\n    }\n}\nNbTokenService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbTokenService, deps: [{ token: NbTokenStorage }], target: i0.ɵɵFactoryTarget.Injectable });\nNbTokenService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbTokenService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbTokenService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: NbTokenStorage }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n/**\n * Common authentication service.\n * Should be used to as an interlayer between UI Components and Auth Strategy.\n */\nclass NbAuthService {\n    constructor(tokenService, strategies) {\n        this.tokenService = tokenService;\n        this.strategies = strategies;\n    }\n    /**\n     * Retrieves current authenticated token stored\n     * @returns {Observable<any>}\n     */\n    getToken() {\n        return this.tokenService.get();\n    }\n    /**\n     * Returns true if auth token is present in the token storage\n     * @returns {Observable<boolean>}\n     */\n    isAuthenticated() {\n        return this.getToken()\n            .pipe(map((token) => token.isValid()));\n    }\n    /**\n     * Returns true if valid auth token is present in the token storage.\n     * If not, calls the strategy refreshToken, and returns isAuthenticated() if success, false otherwise\n     * @returns {Observable<boolean>}\n     */\n    isAuthenticatedOrRefresh() {\n        return this.getToken()\n            .pipe(switchMap(token => {\n            if (token.getValue() && !token.isValid()) {\n                return this.refreshToken(token.getOwnerStrategyName(), token)\n                    .pipe(switchMap(res => {\n                    if (res.isSuccess()) {\n                        return this.isAuthenticated();\n                    }\n                    else {\n                        return of(false);\n                    }\n                }));\n            }\n            else {\n                return of(token.isValid());\n            }\n        }));\n    }\n    /**\n     * Returns tokens stream\n     * @returns {Observable<NbAuthSimpleToken>}\n     */\n    onTokenChange() {\n        return this.tokenService.tokenChange();\n    }\n    /**\n     * Returns authentication status stream\n     * @returns {Observable<boolean>}\n     */\n    onAuthenticationChange() {\n        return this.onTokenChange()\n            .pipe(map((token) => token.isValid()));\n    }\n    /**\n     * Authenticates with the selected strategy\n     * Stores received token in the token storage\n     *\n     * Example:\n     * authenticate('email', {email: 'email@example.com', password: 'test'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    authenticate(strategyName, data) {\n        return this.getStrategy(strategyName).authenticate(data)\n            .pipe(switchMap((result) => {\n            return this.processResultToken(result);\n        }));\n    }\n    /**\n     * Registers with the selected strategy\n     * Stores received token in the token storage\n     *\n     * Example:\n     * register('email', {email: 'email@example.com', name: 'Some Name', password: 'test'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    register(strategyName, data) {\n        return this.getStrategy(strategyName).register(data)\n            .pipe(switchMap((result) => {\n            return this.processResultToken(result);\n        }));\n    }\n    /**\n     * Sign outs with the selected strategy\n     * Removes token from the token storage\n     *\n     * Example:\n     * logout('email')\n     *\n     * @param strategyName\n     * @returns {Observable<NbAuthResult>}\n     */\n    logout(strategyName) {\n        return this.getStrategy(strategyName).logout()\n            .pipe(switchMap((result) => {\n            if (result.isSuccess()) {\n                this.tokenService.clear()\n                    .pipe(map(() => result));\n            }\n            return of(result);\n        }));\n    }\n    /**\n     * Sends forgot password request to the selected strategy\n     *\n     * Example:\n     * requestPassword('email', {email: 'email@example.com'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    requestPassword(strategyName, data) {\n        return this.getStrategy(strategyName).requestPassword(data);\n    }\n    /**\n     * Tries to reset password with the selected strategy\n     *\n     * Example:\n     * resetPassword('email', {newPassword: 'test'})\n     *\n     * @param strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    resetPassword(strategyName, data) {\n        return this.getStrategy(strategyName).resetPassword(data);\n    }\n    /**\n     * Sends a refresh token request\n     * Stores received token in the token storage\n     *\n     * Example:\n     * refreshToken('email', {token: token})\n     *\n     * @param {string} strategyName\n     * @param data\n     * @returns {Observable<NbAuthResult>}\n     */\n    refreshToken(strategyName, data) {\n        return this.getStrategy(strategyName).refreshToken(data)\n            .pipe(switchMap((result) => {\n            return this.processResultToken(result);\n        }));\n    }\n    /**\n     * Get registered strategy by name\n     *\n     * Example:\n     * getStrategy('email')\n     *\n     * @param {string} provider\n     * @returns {NbAbstractAuthProvider}\n     */\n    getStrategy(strategyName) {\n        const found = this.strategies.find((strategy) => strategy.getName() === strategyName);\n        if (!found) {\n            throw new TypeError(`There is no Auth Strategy registered under '${strategyName}' name`);\n        }\n        return found;\n    }\n    processResultToken(result) {\n        if (result.isSuccess() && result.getToken()) {\n            return this.tokenService.set(result.getToken())\n                .pipe(map((token) => {\n                return result;\n            }));\n        }\n        return of(result);\n    }\n}\nNbAuthService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthService, deps: [{ token: NbTokenService }, { token: NB_AUTH_STRATEGIES }], target: i0.ɵɵFactoryTarget.Injectable });\nNbAuthService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: NbTokenService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_STRATEGIES]\n                }] }]; } });\n\nclass NbAuthStrategy {\n    // we should keep this any and validation should be done in `register` method instead\n    // otherwise it won't be possible to pass an empty object\n    setOptions(options) {\n        this.options = deepExtend({}, this.defaultOptions, options);\n    }\n    getOption(key) {\n        return getDeepFromObject(this.options, key, null);\n    }\n    createToken(value, failWhenInvalidToken) {\n        const token = nbAuthCreateToken(this.getOption('token.class'), value, this.getName());\n        // At this point, nbAuthCreateToken failed with NbAuthIllegalTokenError which MUST be intercepted by strategies\n        // Or token is created. It MAY be created even if backend did not return any token, in this case it is !Valid\n        if (failWhenInvalidToken && !token.isValid()) {\n            // If we require a valid token (i.e. isValid), then we MUST throw NbAuthIllegalTokenError so that the strategies\n            // intercept it\n            throw new NbAuthIllegalTokenError('Token is empty or invalid.');\n        }\n        return token;\n    }\n    getName() {\n        return this.getOption('name');\n    }\n    createFailResponse(data) {\n        return new HttpResponse({ body: {}, status: 401 });\n    }\n    createSuccessResponse(data) {\n        return new HttpResponse({ body: {}, status: 200 });\n    }\n    getActionEndpoint(action) {\n        const actionEndpoint = this.getOption(`${action}.endpoint`);\n        const baseEndpoint = this.getOption('baseEndpoint');\n        return actionEndpoint ? baseEndpoint + actionEndpoint : '';\n    }\n    getHeaders() {\n        const customHeaders = this.getOption('headers') ?? {};\n        if (customHeaders instanceof HttpHeaders) {\n            return customHeaders;\n        }\n        let headers = new HttpHeaders();\n        Object.entries(customHeaders).forEach(([key, value]) => {\n            headers = headers.append(key, value);\n        });\n        return headers;\n    }\n}\n\nclass NbAuthResult {\n    // TODO: better pass object\n    constructor(success, response, redirect, errors, messages, token = null) {\n        this.success = success;\n        this.response = response;\n        this.redirect = redirect;\n        this.errors = [];\n        this.messages = [];\n        this.errors = this.errors.concat([errors]);\n        if (errors instanceof Array) {\n            this.errors = errors;\n        }\n        this.messages = this.messages.concat([messages]);\n        if (messages instanceof Array) {\n            this.messages = messages;\n        }\n        this.token = token;\n    }\n    getResponse() {\n        return this.response;\n    }\n    getToken() {\n        return this.token;\n    }\n    getRedirect() {\n        return this.redirect;\n    }\n    getErrors() {\n        return this.errors.filter(val => !!val);\n    }\n    getMessages() {\n        return this.messages.filter(val => !!val);\n    }\n    isSuccess() {\n        return this.success;\n    }\n    isFailure() {\n        return !this.success;\n    }\n}\n\nclass NbAuthStrategyOptions {\n}\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbDummyAuthStrategyOptions extends NbAuthStrategyOptions {\n    constructor() {\n        super(...arguments);\n        this.token = {\n            class: NbAuthSimpleToken,\n        };\n        this.delay = 1000;\n        this.alwaysFail = false;\n    }\n}\nconst dummyStrategyOptions = new NbDummyAuthStrategyOptions();\n\n/**\n * Dummy auth strategy. Could be useful for auth setup when backend is not available yet.\n *\n *\n * Strategy settings.\n *\n * ```ts\n * export class NbDummyAuthStrategyOptions extends NbAuthStrategyOptions {\n *   name = 'dummy';\n *   token = {\n *     class: NbAuthSimpleToken,\n *   };\n *   delay? = 1000;\n *   alwaysFail? = false;\n * }\n * ```\n */\nclass NbDummyAuthStrategy extends NbAuthStrategy {\n    constructor() {\n        super(...arguments);\n        this.defaultOptions = dummyStrategyOptions;\n    }\n    static setup(options) {\n        return [NbDummyAuthStrategy, options];\n    }\n    authenticate(data) {\n        return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n    register(data) {\n        return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n    requestPassword(data) {\n        return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n    resetPassword(data) {\n        return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n    logout(data) {\n        return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n    refreshToken(data) {\n        return of(this.createDummyResult(data)).pipe(delay(this.getOption('delay')));\n    }\n    createDummyResult(data) {\n        if (this.getOption('alwaysFail')) {\n            return new NbAuthResult(false, this.createFailResponse(data), null, ['Something went wrong.']);\n        }\n        try {\n            const token = this.createToken('test token', true);\n            return new NbAuthResult(true, this.createSuccessResponse(data), '/', [], ['Successfully logged in.'], token);\n        }\n        catch (err) {\n            return new NbAuthResult(false, this.createFailResponse(data), null, [err.message]);\n        }\n    }\n}\nNbDummyAuthStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbDummyAuthStrategy, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNbDummyAuthStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbDummyAuthStrategy });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbDummyAuthStrategy, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nvar NbOAuth2ResponseType;\n(function (NbOAuth2ResponseType) {\n    NbOAuth2ResponseType[\"CODE\"] = \"code\";\n    NbOAuth2ResponseType[\"TOKEN\"] = \"token\";\n})(NbOAuth2ResponseType || (NbOAuth2ResponseType = {}));\n// TODO: client_credentials\nvar NbOAuth2GrantType;\n(function (NbOAuth2GrantType) {\n    NbOAuth2GrantType[\"AUTHORIZATION_CODE\"] = \"authorization_code\";\n    NbOAuth2GrantType[\"PASSWORD\"] = \"password\";\n    NbOAuth2GrantType[\"REFRESH_TOKEN\"] = \"refresh_token\";\n})(NbOAuth2GrantType || (NbOAuth2GrantType = {}));\nvar NbOAuth2ClientAuthMethod;\n(function (NbOAuth2ClientAuthMethod) {\n    NbOAuth2ClientAuthMethod[\"NONE\"] = \"none\";\n    NbOAuth2ClientAuthMethod[\"BASIC\"] = \"basic\";\n    NbOAuth2ClientAuthMethod[\"REQUEST_BODY\"] = \"request-body\";\n})(NbOAuth2ClientAuthMethod || (NbOAuth2ClientAuthMethod = {}));\nclass NbOAuth2AuthStrategyOptions extends NbAuthStrategyOptions {\n    constructor() {\n        super(...arguments);\n        this.baseEndpoint = '';\n        this.clientId = '';\n        this.clientSecret = '';\n        this.clientAuthMethod = NbOAuth2ClientAuthMethod.NONE;\n        this.redirect = {\n            success: '/',\n            failure: null,\n        };\n        this.defaultErrors = ['Something went wrong, please try again.'];\n        this.defaultMessages = ['You have been successfully authenticated.'];\n        this.authorize = {\n            endpoint: 'authorize',\n            responseType: NbOAuth2ResponseType.CODE,\n            requireValidToken: true,\n        };\n        this.token = {\n            endpoint: 'token',\n            grantType: NbOAuth2GrantType.AUTHORIZATION_CODE,\n            requireValidToken: true,\n            class: NbAuthOAuth2Token,\n        };\n        this.refresh = {\n            endpoint: 'token',\n            grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n            requireValidToken: true,\n        };\n    }\n}\nconst auth2StrategyOptions = new NbOAuth2AuthStrategyOptions();\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n/**\n * OAuth2 authentication strategy.\n *\n * Strategy settings:\n *\n * ```ts\n * export enum NbOAuth2ResponseType {\n *   CODE = 'code',\n *   TOKEN = 'token',\n * }\n *\n * export enum NbOAuth2GrantType {\n *   AUTHORIZATION_CODE = 'authorization_code',\n *   PASSWORD = 'password',\n *   REFRESH_TOKEN = 'refresh_token',\n * }\n *\n * export class NbOAuth2AuthStrategyOptions {\n *   name: string;\n *   baseEndpoint?: string = '';\n *   clientId: string = '';\n *   clientSecret: string = '';\n *   clientAuthMethod: string = NbOAuth2ClientAuthMethod.NONE;\n *   redirect?: { success?: string; failure?: string } = {\n *     success: '/',\n *     failure: null,\n *   };\n *   defaultErrors?: any[] = ['Something went wrong, please try again.'];\n *   defaultMessages?: any[] = ['You have been successfully authenticated.'];\n *   authorize?: {\n *     endpoint?: string;\n *     redirectUri?: string;\n *     responseType?: string;\n *     requireValidToken: true,\n *     scope?: string;\n *     state?: string;\n *     params?: { [key: string]: string };\n *   } = {\n *     endpoint: 'authorize',\n *     responseType: NbOAuth2ResponseType.CODE,\n *   };\n *   token?: {\n *     endpoint?: string;\n *     grantType?: string;\n *     requireValidToken: true,\n *     redirectUri?: string;\n *     scope?: string;\n *     class: NbAuthTokenClass,\n *   } = {\n *     endpoint: 'token',\n *     grantType: NbOAuth2GrantType.AUTHORIZATION_CODE,\n *     class: NbAuthOAuth2Token,\n *   };\n *   refresh?: {\n *     endpoint?: string;\n *     grantType?: string;\n *     scope?: string;\n *     requireValidToken: true,\n *   } = {\n *     endpoint: 'token',\n *     grantType: NbOAuth2GrantType.REFRESH_TOKEN,\n *   };\n * }\n * ```\n *\n */\nclass NbOAuth2AuthStrategy extends NbAuthStrategy {\n    constructor(http, route, window) {\n        super();\n        this.http = http;\n        this.route = route;\n        this.window = window;\n        this.redirectResultHandlers = {\n            [NbOAuth2ResponseType.CODE]: () => {\n                return of(this.route.snapshot.queryParams).pipe(switchMap((params) => {\n                    if (params.code) {\n                        return this.requestToken(params.code);\n                    }\n                    return of(new NbAuthResult(false, params, this.getOption('redirect.failure'), this.getOption('defaultErrors'), []));\n                }));\n            },\n            [NbOAuth2ResponseType.TOKEN]: () => {\n                const module = 'authorize';\n                const requireValidToken = this.getOption(`${module}.requireValidToken`);\n                return of(this.route.snapshot.fragment).pipe(map((fragment) => this.parseHashAsQueryParams(fragment)), map((params) => {\n                    if (!params.error) {\n                        return new NbAuthResult(true, params, this.getOption('redirect.success'), [], this.getOption('defaultMessages'), this.createToken(params, requireValidToken));\n                    }\n                    return new NbAuthResult(false, params, this.getOption('redirect.failure'), this.getOption('defaultErrors'), []);\n                }), catchError((err) => {\n                    const errors = [];\n                    if (err instanceof NbAuthIllegalTokenError) {\n                        errors.push(err.message);\n                    }\n                    else {\n                        errors.push('Something went wrong.');\n                    }\n                    return of(new NbAuthResult(false, err, this.getOption('redirect.failure'), errors));\n                }));\n            },\n        };\n        this.redirectResults = {\n            [NbOAuth2ResponseType.CODE]: () => {\n                return of(this.route.snapshot.queryParams).pipe(map((params) => !!(params && (params.code || params.error))));\n            },\n            [NbOAuth2ResponseType.TOKEN]: () => {\n                return of(this.route.snapshot.fragment).pipe(map((fragment) => this.parseHashAsQueryParams(fragment)), map((params) => !!(params && (params.access_token || params.error))));\n            },\n        };\n        this.defaultOptions = auth2StrategyOptions;\n    }\n    static setup(options) {\n        return [NbOAuth2AuthStrategy, options];\n    }\n    get responseType() {\n        return this.getOption('authorize.responseType');\n    }\n    get clientAuthMethod() {\n        return this.getOption('clientAuthMethod');\n    }\n    authenticate(data) {\n        if (this.getOption('token.grantType') === NbOAuth2GrantType.PASSWORD) {\n            return this.passwordToken(data.email, data.password);\n        }\n        else {\n            return this.isRedirectResult().pipe(switchMap((result) => {\n                if (!result) {\n                    this.authorizeRedirect();\n                    return of(new NbAuthResult(true));\n                }\n                return this.getAuthorizationResult();\n            }));\n        }\n    }\n    getAuthorizationResult() {\n        const redirectResultHandler = this.redirectResultHandlers[this.responseType];\n        if (redirectResultHandler) {\n            return redirectResultHandler.call(this);\n        }\n        throw new Error(`'${this.responseType}' responseType is not supported,\n                      only 'token' and 'code' are supported now`);\n    }\n    refreshToken(token) {\n        const module = 'refresh';\n        const url = this.getActionEndpoint(module);\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return this.http.post(url, this.buildRefreshRequestData(token), { headers: this.getHeaders() }).pipe(map((res) => {\n            return new NbAuthResult(true, res, this.getOption('redirect.success'), [], this.getOption('defaultMessages'), this.createRefreshedToken(res, token, requireValidToken));\n        }), catchError((res) => this.handleResponseError(res)));\n    }\n    passwordToken(username, password) {\n        const module = 'token';\n        const url = this.getActionEndpoint(module);\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return this.http.post(url, this.buildPasswordRequestData(username, password), { headers: this.getHeaders() }).pipe(map((res) => {\n            return new NbAuthResult(true, res, this.getOption('redirect.success'), [], this.getOption('defaultMessages'), this.createToken(res, requireValidToken));\n        }), catchError((res) => this.handleResponseError(res)));\n    }\n    authorizeRedirect() {\n        this.window.location.href = this.buildRedirectUrl();\n    }\n    isRedirectResult() {\n        return this.redirectResults[this.responseType].call(this);\n    }\n    requestToken(code) {\n        const module = 'token';\n        const url = this.getActionEndpoint(module);\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return this.http.post(url, this.buildCodeRequestData(code), { headers: this.getHeaders() }).pipe(map((res) => {\n            return new NbAuthResult(true, res, this.getOption('redirect.success'), [], this.getOption('defaultMessages'), this.createToken(res, requireValidToken));\n        }), catchError((res) => this.handleResponseError(res)));\n    }\n    buildCodeRequestData(code) {\n        const params = {\n            grant_type: this.getOption('token.grantType'),\n            code: code,\n            redirect_uri: this.getOption('token.redirectUri'),\n            client_id: this.getOption('clientId'),\n        };\n        return this.urlEncodeParameters(this.cleanParams(this.addCredentialsToParams(params)));\n    }\n    buildRefreshRequestData(token) {\n        const params = {\n            grant_type: this.getOption('refresh.grantType'),\n            refresh_token: token.getRefreshToken(),\n            scope: this.getOption('refresh.scope'),\n            client_id: this.getOption('clientId'),\n        };\n        return this.urlEncodeParameters(this.cleanParams(this.addCredentialsToParams(params)));\n    }\n    buildPasswordRequestData(username, password) {\n        const params = {\n            grant_type: this.getOption('token.grantType'),\n            username: username,\n            password: password,\n            scope: this.getOption('token.scope'),\n        };\n        return this.urlEncodeParameters(this.cleanParams(this.addCredentialsToParams(params)));\n    }\n    buildAuthHeader() {\n        if (this.clientAuthMethod === NbOAuth2ClientAuthMethod.BASIC) {\n            if (this.getOption('clientId') && this.getOption('clientSecret')) {\n                return new HttpHeaders({\n                    Authorization: 'Basic ' + btoa(this.getOption('clientId') + ':' + this.getOption('clientSecret')),\n                });\n            }\n            else {\n                throw Error('For basic client authentication method, please provide both clientId & clientSecret.');\n            }\n        }\n        return undefined;\n    }\n    getHeaders() {\n        let headers = super.getHeaders();\n        headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\n        const authHeaders = this.buildAuthHeader();\n        if (authHeaders === undefined) {\n            return headers;\n        }\n        for (const headerKey of authHeaders.keys()) {\n            for (const headerValue of authHeaders.getAll(headerKey)) {\n                headers = headers.append(headerKey, headerValue);\n            }\n        }\n        return headers;\n    }\n    cleanParams(params) {\n        Object.entries(params).forEach(([key, val]) => !val && delete params[key]);\n        return params;\n    }\n    addCredentialsToParams(params) {\n        if (this.clientAuthMethod === NbOAuth2ClientAuthMethod.REQUEST_BODY) {\n            if (this.getOption('clientId') && this.getOption('clientSecret')) {\n                return {\n                    ...params,\n                    client_id: this.getOption('clientId'),\n                    client_secret: this.getOption('clientSecret'),\n                };\n            }\n            else {\n                throw Error('For request body client authentication method, please provide both clientId & clientSecret.');\n            }\n        }\n        return params;\n    }\n    handleResponseError(res) {\n        let errors = [];\n        if (res instanceof HttpErrorResponse) {\n            if (res.error.error_description) {\n                errors.push(res.error.error_description);\n            }\n            else {\n                errors = this.getOption('defaultErrors');\n            }\n        }\n        else if (res instanceof NbAuthIllegalTokenError) {\n            errors.push(res.message);\n        }\n        else {\n            errors.push('Something went wrong.');\n        }\n        return of(new NbAuthResult(false, res, this.getOption('redirect.failure'), errors, []));\n    }\n    buildRedirectUrl() {\n        const params = {\n            response_type: this.getOption('authorize.responseType'),\n            client_id: this.getOption('clientId'),\n            redirect_uri: this.getOption('authorize.redirectUri'),\n            scope: this.getOption('authorize.scope'),\n            state: this.getOption('authorize.state'),\n            ...this.getOption('authorize.params'),\n        };\n        const endpoint = this.getActionEndpoint('authorize');\n        const query = this.urlEncodeParameters(this.cleanParams(params));\n        return `${endpoint}?${query}`;\n    }\n    parseHashAsQueryParams(hash) {\n        return hash\n            ? hash.split('&').reduce((acc, part) => {\n                const item = part.split('=');\n                acc[item[0]] = decodeURIComponent(item[1]);\n                return acc;\n            }, {})\n            : {};\n    }\n    urlEncodeParameters(params) {\n        return Object.keys(params)\n            .map((k) => {\n            return `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`;\n        })\n            .join('&');\n    }\n    createRefreshedToken(res, existingToken, requireValidToken) {\n        const refreshedToken = this.createToken(res, requireValidToken);\n        if (!refreshedToken.getRefreshToken() && existingToken.getRefreshToken()) {\n            refreshedToken.setRefreshToken(existingToken.getRefreshToken());\n        }\n        return refreshedToken;\n    }\n    register(data) {\n        throw new Error('`register` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n    }\n    requestPassword(data) {\n        throw new Error('`requestPassword` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n    }\n    resetPassword(data = {}) {\n        throw new Error('`resetPassword` is not supported by `NbOAuth2AuthStrategy`, use `authenticate`.');\n    }\n    logout() {\n        return of(new NbAuthResult(true));\n    }\n}\nNbOAuth2AuthStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbOAuth2AuthStrategy, deps: [{ token: i1.HttpClient }, { token: i2.ActivatedRoute }, { token: NB_WINDOW }], target: i0.ɵɵFactoryTarget.Injectable });\nNbOAuth2AuthStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbOAuth2AuthStrategy });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbOAuth2AuthStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: i2.ActivatedRoute }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_WINDOW]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbPasswordAuthStrategyOptions extends NbAuthStrategyOptions {\n    constructor() {\n        super(...arguments);\n        this.baseEndpoint = '/api/auth/';\n        this.login = {\n            alwaysFail: false,\n            endpoint: 'login',\n            method: 'post',\n            requireValidToken: true,\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            defaultErrors: ['Login/Email combination is not correct, please try again.'],\n            defaultMessages: ['You have been successfully logged in.'],\n        };\n        this.register = {\n            alwaysFail: false,\n            endpoint: 'register',\n            method: 'post',\n            requireValidToken: true,\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['You have been successfully registered.'],\n        };\n        this.requestPass = {\n            endpoint: 'request-pass',\n            method: 'post',\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['Reset password instructions have been sent to your email.'],\n        };\n        this.resetPass = {\n            endpoint: 'reset-pass',\n            method: 'put',\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            resetPasswordTokenKey: 'reset_password_token',\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['Your password has been successfully changed.'],\n        };\n        this.logout = {\n            alwaysFail: false,\n            endpoint: 'logout',\n            method: 'delete',\n            redirect: {\n                success: '/',\n                failure: null,\n            },\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['You have been successfully logged out.'],\n        };\n        this.refreshToken = {\n            endpoint: 'refresh-token',\n            method: 'post',\n            requireValidToken: true,\n            redirect: {\n                success: null,\n                failure: null,\n            },\n            defaultErrors: ['Something went wrong, please try again.'],\n            defaultMessages: ['Your token has been successfully refreshed.'],\n        };\n        this.token = {\n            class: NbAuthSimpleToken,\n            key: 'data.token',\n            getter: (module, res, options) => getDeepFromObject(res.body, options.token.key),\n        };\n        this.errors = {\n            key: 'data.errors',\n            getter: (module, res, options) => getDeepFromObject(res.error, options.errors.key, options[module].defaultErrors),\n        };\n        this.messages = {\n            key: 'data.messages',\n            getter: (module, res, options) => getDeepFromObject(res.body, options.messages.key, options[module].defaultMessages),\n        };\n    }\n}\nconst passwordStrategyOptions = new NbPasswordAuthStrategyOptions();\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n/**\n * The most common authentication provider for email/password strategy.\n *\n * Strategy settings. Note, there is no need to copy over the whole object to change the settings you need.\n * Also, this.getOption call won't work outside of the default options declaration\n * (which is inside of the `NbPasswordAuthStrategy` class), so you have to replace it with a custom helper function\n * if you need it.\n *\n * ```ts\n *export class NbPasswordAuthStrategyOptions extends NbAuthStrategyOptions {\n *  name: string;\n *  baseEndpoint? = '/api/auth/';\n *  login?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    endpoint: 'login',\n *    method: 'post',\n *    requireValidToken: true,\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Login/Email combination is not correct, please try again.'],\n *    defaultMessages: ['You have been successfully logged in.'],\n *  };\n *  register?: boolean | NbPasswordStrategyModule = {\n *    alwaysFail: false,\n *    endpoint: 'register',\n *    method: 'post',\n *    requireValidToken: true,\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully registered.'],\n *  };\n *  requestPass?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'request-pass',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Reset password instructions have been sent to your email.'],\n *  };\n *  resetPass?: boolean | NbPasswordStrategyReset = {\n *    endpoint: 'reset-pass',\n *    method: 'put',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    resetPasswordTokenKey: 'reset_password_token',\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your password has been successfully changed.'],\n *  };\n *  logout?: boolean | NbPasswordStrategyReset = {\n *    alwaysFail: false,\n *    endpoint: 'logout',\n *    method: 'delete',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully logged out.'],\n *  };\n *  refreshToken?: boolean | NbPasswordStrategyModule = {\n *    endpoint: 'refresh-token',\n *    method: 'post',\n *    requireValidToken: true,\n *    redirect: {\n *      success: null,\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your token has been successfully refreshed.'],\n *  };\n *  token?: NbPasswordStrategyToken = {\n *    class: NbAuthSimpleToken,\n *    key: 'data.token',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.token.key,\n *    ),\n *  };\n *  errors?: NbPasswordStrategyMessage = {\n *    key: 'data.errors',\n *    getter: (module: string, res: HttpErrorResponse, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.error,\n *      options.errors.key,\n *      options[module].defaultErrors,\n *    ),\n *  };\n *  messages?: NbPasswordStrategyMessage = {\n *    key: 'data.messages',\n *    getter: (module: string, res: HttpResponse<Object>, options: NbPasswordAuthStrategyOptions) => getDeepFromObject(\n *      res.body,\n *      options.messages.key,\n *      options[module].defaultMessages,\n *    ),\n *  };\n *  validation?: {\n *    password?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *    email?: {\n *      required?: boolean;\n *      regexp?: string | null;\n *    };\n *    fullName?: {\n *      required?: boolean;\n *      minLength?: number | null;\n *      maxLength?: number | null;\n *      regexp?: string | null;\n *    };\n *  };\n *}\n * ```\n */\nclass NbPasswordAuthStrategy extends NbAuthStrategy {\n    constructor(http, route) {\n        super();\n        this.http = http;\n        this.route = route;\n        this.defaultOptions = passwordStrategyOptions;\n    }\n    static setup(options) {\n        return [NbPasswordAuthStrategy, options];\n    }\n    authenticate(data) {\n        const module = 'login';\n        const method = this.getOption(`${module}.method`);\n        const url = this.getActionEndpoint(module);\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return this.http.request(method, url, { body: data, observe: 'response', headers: this.getHeaders() }).pipe(map((res) => {\n            if (this.getOption(`${module}.alwaysFail`)) {\n                throw this.createFailResponse(data);\n            }\n            return res;\n        }), map((res) => {\n            return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options), this.createToken(this.getOption('token.getter')(module, res, this.options), requireValidToken));\n        }), catchError((res) => {\n            return this.handleResponseError(res, module);\n        }));\n    }\n    register(data) {\n        const module = 'register';\n        const method = this.getOption(`${module}.method`);\n        const url = this.getActionEndpoint(module);\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return this.http.request(method, url, { body: data, observe: 'response', headers: this.getHeaders() }).pipe(map((res) => {\n            if (this.getOption(`${module}.alwaysFail`)) {\n                throw this.createFailResponse(data);\n            }\n            return res;\n        }), map((res) => {\n            return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options), this.createToken(this.getOption('token.getter')('login', res, this.options), requireValidToken));\n        }), catchError((res) => {\n            return this.handleResponseError(res, module);\n        }));\n    }\n    requestPassword(data) {\n        const module = 'requestPass';\n        const method = this.getOption(`${module}.method`);\n        const url = this.getActionEndpoint(module);\n        return this.http.request(method, url, { body: data, observe: 'response', headers: this.getHeaders() }).pipe(map((res) => {\n            if (this.getOption(`${module}.alwaysFail`)) {\n                throw this.createFailResponse();\n            }\n            return res;\n        }), map((res) => {\n            return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options));\n        }), catchError((res) => {\n            return this.handleResponseError(res, module);\n        }));\n    }\n    resetPassword(data = {}) {\n        const module = 'resetPass';\n        const method = this.getOption(`${module}.method`);\n        const url = this.getActionEndpoint(module);\n        const tokenKey = this.getOption(`${module}.resetPasswordTokenKey`);\n        data[tokenKey] = this.route.snapshot.queryParams[tokenKey];\n        return this.http.request(method, url, { body: data, observe: 'response', headers: this.getHeaders() }).pipe(map((res) => {\n            if (this.getOption(`${module}.alwaysFail`)) {\n                throw this.createFailResponse();\n            }\n            return res;\n        }), map((res) => {\n            return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options));\n        }), catchError((res) => {\n            return this.handleResponseError(res, module);\n        }));\n    }\n    logout() {\n        const module = 'logout';\n        const method = this.getOption(`${module}.method`);\n        const url = this.getActionEndpoint(module);\n        return of({}).pipe(switchMap((res) => {\n            if (!url) {\n                return of(res);\n            }\n            return this.http.request(method, url, { observe: 'response', headers: this.getHeaders() });\n        }), map((res) => {\n            if (this.getOption(`${module}.alwaysFail`)) {\n                throw this.createFailResponse();\n            }\n            return res;\n        }), map((res) => {\n            return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options));\n        }), catchError((res) => {\n            return this.handleResponseError(res, module);\n        }));\n    }\n    refreshToken(data) {\n        const module = 'refreshToken';\n        const method = this.getOption(`${module}.method`);\n        const url = this.getActionEndpoint(module);\n        const requireValidToken = this.getOption(`${module}.requireValidToken`);\n        return this.http.request(method, url, { body: data, observe: 'response', headers: this.getHeaders() }).pipe(map((res) => {\n            if (this.getOption(`${module}.alwaysFail`)) {\n                throw this.createFailResponse(data);\n            }\n            return res;\n        }), map((res) => {\n            return new NbAuthResult(true, res, this.getOption(`${module}.redirect.success`), [], this.getOption('messages.getter')(module, res, this.options), this.createToken(this.getOption('token.getter')(module, res, this.options), requireValidToken));\n        }), catchError((res) => {\n            return this.handleResponseError(res, module);\n        }));\n    }\n    handleResponseError(res, module) {\n        let errors = [];\n        if (res instanceof HttpErrorResponse) {\n            errors = this.getOption('errors.getter')(module, res, this.options);\n        }\n        else if (res instanceof NbAuthIllegalTokenError) {\n            errors.push(res.message);\n        }\n        else {\n            errors.push('Something went wrong.');\n        }\n        return of(new NbAuthResult(false, res, this.getOption(`${module}.redirect.failure`), errors));\n    }\n}\nNbPasswordAuthStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbPasswordAuthStrategy, deps: [{ token: i1.HttpClient }, { token: i2.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Injectable });\nNbPasswordAuthStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbPasswordAuthStrategy });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbPasswordAuthStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: i2.ActivatedRoute }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbAuthBlockComponent {\n}\nNbAuthBlockComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthBlockComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNbAuthBlockComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: NbAuthBlockComponent, selector: \"nb-auth-block\", ngImport: i0, template: `\n    <ng-content></ng-content>\n  `, isInline: true, styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host{display:block;width:100%;max-width:35rem}:host ::ng-deep form{width:100%}:host ::ng-deep .label{display:block;margin-bottom:.5rem}:host ::ng-deep .forgot-password{text-decoration:none;margin-bottom:.5rem}:host ::ng-deep .caption{margin-top:.5rem}:host ::ng-deep .alert{text-align:center}:host ::ng-deep .title{margin-top:0;margin-bottom:.75rem;text-align:center}:host ::ng-deep .sub-title{margin-bottom:2rem;text-align:center}:host ::ng-deep .form-control-group{margin-bottom:2rem}:host ::ng-deep .form-control-group.accept-group{display:flex;justify-content:space-between;margin:2rem 0}:host ::ng-deep .label-with-link{display:flex;justify-content:space-between}:host ::ng-deep .links{text-align:center;margin-top:1.75rem}:host ::ng-deep .links .socials{margin-top:1.5rem}:host ::ng-deep .links .socials a{margin:0 1rem;text-decoration:none;vertical-align:middle}:host ::ng-deep .links .socials a.with-icon{font-size:2rem}:host ::ng-deep .another-action{margin-top:2rem;text-align:center}:host ::ng-deep .sign-in-or-up{margin-top:2rem;display:flex;justify-content:space-between}:host ::ng-deep nb-alert .alert-title,:host ::ng-deep nb-alert .alert-message{margin:0 0 .5rem}:host ::ng-deep nb-alert .alert-message-list{list-style-type:none;padding:0;margin:0}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthBlockComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-auth-block', template: `\n    <ng-content></ng-content>\n  `, styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host{display:block;width:100%;max-width:35rem}:host ::ng-deep form{width:100%}:host ::ng-deep .label{display:block;margin-bottom:.5rem}:host ::ng-deep .forgot-password{text-decoration:none;margin-bottom:.5rem}:host ::ng-deep .caption{margin-top:.5rem}:host ::ng-deep .alert{text-align:center}:host ::ng-deep .title{margin-top:0;margin-bottom:.75rem;text-align:center}:host ::ng-deep .sub-title{margin-bottom:2rem;text-align:center}:host ::ng-deep .form-control-group{margin-bottom:2rem}:host ::ng-deep .form-control-group.accept-group{display:flex;justify-content:space-between;margin:2rem 0}:host ::ng-deep .label-with-link{display:flex;justify-content:space-between}:host ::ng-deep .links{text-align:center;margin-top:1.75rem}:host ::ng-deep .links .socials{margin-top:1.5rem}:host ::ng-deep .links .socials a{margin:0 1rem;text-decoration:none;vertical-align:middle}:host ::ng-deep .links .socials a.with-icon{font-size:2rem}:host ::ng-deep .another-action{margin-top:2rem;text-align:center}:host ::ng-deep .sign-in-or-up{margin-top:2rem;display:flex;justify-content:space-between}:host ::ng-deep nb-alert .alert-title,:host ::ng-deep nb-alert .alert-message{margin:0 0 .5rem}:host ::ng-deep nb-alert .alert-message-list{list-style-type:none;padding:0;margin:0}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbAuthComponent {\n    // showcase of how to use the onAuthenticationChange method\n    constructor(auth, location) {\n        this.auth = auth;\n        this.location = location;\n        this.destroy$ = new Subject();\n        this.authenticated = false;\n        this.token = '';\n        this.subscription = auth.onAuthenticationChange()\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((authenticated) => {\n            this.authenticated = authenticated;\n        });\n    }\n    back() {\n        this.location.back();\n        return false;\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n}\nNbAuthComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthComponent, deps: [{ token: NbAuthService }, { token: i4.Location }], target: i0.ɵɵFactoryTarget.Component });\nNbAuthComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: NbAuthComponent, selector: \"nb-auth\", ngImport: i0, template: `\n    <nb-layout>\n      <nb-layout-column>\n        <nb-card>\n          <nb-card-header>\n            <nav class=\"navigation\">\n              <a href=\"#\" (click)=\"back()\" class=\"link back-link\" aria-label=\"Back\">\n                <nb-icon icon=\"arrow-back\"></nb-icon>\n              </a>\n            </nav>\n          </nb-card-header>\n          <nb-card-body>\n            <nb-auth-block>\n              <router-outlet></router-outlet>\n            </nb-auth-block>\n          </nb-card-body>\n        </nb-card>\n      </nb-layout-column>\n    </nb-layout>\n  `, isInline: true, styles: [\"/*!\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */.visually-hidden{position:absolute!important;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px)}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}.nb-global-scrollblock{position:static;width:auto;overflow:hidden}/*\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n *//*!\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}html,body{margin:0;padding:0}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template,[hidden]{display:none}/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host nb-card{margin:0;height:calc(100vh - 5rem)}:host .navigation .link{display:inline-block;text-decoration:none}:host .navigation .link nb-icon{font-size:2rem;vertical-align:middle}:host .links nb-icon{font-size:2.5rem}:host nb-card-body{display:flex;width:100%}:host nb-auth-block{margin:auto}@media (max-width: 767.98px){:host nb-card{border-radius:0;height:100vh}}:host ::ng-deep nb-layout .layout .layout-container .content .columns nb-layout-column{padding:2.5rem}@media (max-width: 767.98px){:host ::ng-deep nb-layout .layout .layout-container .content .columns nb-layout-column{padding:0}}\\n\"], components: [{ type: i3.NbLayoutComponent, selector: \"nb-layout\", inputs: [\"center\", \"windowMode\", \"withScroll\", \"restoreScrollTop\"] }, { type: i3.NbLayoutColumnComponent, selector: \"nb-layout-column\", inputs: [\"left\", \"start\"] }, { type: i3.NbCardComponent, selector: \"nb-card\", inputs: [\"size\", \"status\", \"accent\"] }, { type: i3.NbCardHeaderComponent, selector: \"nb-card-header\" }, { type: i3.NbIconComponent, selector: \"nb-icon\", inputs: [\"icon\", \"pack\", \"options\", \"status\", \"config\"] }, { type: i3.NbCardBodyComponent, selector: \"nb-card-body\" }, { type: NbAuthBlockComponent, selector: \"nb-auth-block\" }], directives: [{ type: i2.RouterOutlet, selector: \"router-outlet\", outputs: [\"activate\", \"deactivate\", \"attach\", \"detach\"], exportAs: [\"outlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-auth', template: `\n    <nb-layout>\n      <nb-layout-column>\n        <nb-card>\n          <nb-card-header>\n            <nav class=\"navigation\">\n              <a href=\"#\" (click)=\"back()\" class=\"link back-link\" aria-label=\"Back\">\n                <nb-icon icon=\"arrow-back\"></nb-icon>\n              </a>\n            </nav>\n          </nb-card-header>\n          <nb-card-body>\n            <nb-auth-block>\n              <router-outlet></router-outlet>\n            </nb-auth-block>\n          </nb-card-body>\n        </nb-card>\n      </nb-layout-column>\n    </nb-layout>\n  `, styles: [\"/*!\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */.visually-hidden{position:absolute!important;height:1px;width:1px;overflow:hidden;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px)}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}.nb-global-scrollblock{position:static;width:auto;overflow:hidden}/*\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n *//*!\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}html,body{margin:0;padding:0}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template,[hidden]{display:none}/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host nb-card{margin:0;height:calc(100vh - 5rem)}:host .navigation .link{display:inline-block;text-decoration:none}:host .navigation .link nb-icon{font-size:2rem;vertical-align:middle}:host .links nb-icon{font-size:2.5rem}:host nb-card-body{display:flex;width:100%}:host nb-auth-block{margin:auto}@media (max-width: 767.98px){:host nb-card{border-radius:0;height:100vh}}:host ::ng-deep nb-layout .layout .layout-container .content .columns nb-layout-column{padding:2.5rem}@media (max-width: 767.98px){:host ::ng-deep nb-layout .layout .layout-container .content .columns nb-layout-column{padding:0}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NbAuthService }, { type: i4.Location }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbLoginComponent {\n    constructor(service, options = {}, cd, router) {\n        this.service = service;\n        this.options = options;\n        this.cd = cd;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.showMessages = {};\n        this.strategy = '';\n        this.errors = [];\n        this.messages = [];\n        this.user = {};\n        this.submitted = false;\n        this.socialLinks = [];\n        this.rememberMe = false;\n        this.redirectDelay = this.getConfigValue('forms.login.redirectDelay');\n        this.showMessages = this.getConfigValue('forms.login.showMessages');\n        this.strategy = this.getConfigValue('forms.login.strategy');\n        this.socialLinks = this.getConfigValue('forms.login.socialLinks');\n        this.rememberMe = this.getConfigValue('forms.login.rememberMe');\n    }\n    login() {\n        this.errors = [];\n        this.messages = [];\n        this.submitted = true;\n        this.service.authenticate(this.strategy, this.user).subscribe((result) => {\n            this.submitted = false;\n            if (result.isSuccess()) {\n                this.messages = result.getMessages();\n            }\n            else {\n                this.errors = result.getErrors();\n            }\n            const redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(() => {\n                    return this.router.navigateByUrl(redirect);\n                }, this.redirectDelay);\n            }\n            this.cd.detectChanges();\n        });\n    }\n    getConfigValue(key) {\n        return getDeepFromObject(this.options, key, null);\n    }\n}\nNbLoginComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbLoginComponent, deps: [{ token: NbAuthService }, { token: NB_AUTH_OPTIONS }, { token: i0.ChangeDetectorRef }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Component });\nNbLoginComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: NbLoginComponent, selector: \"nb-login\", ngImport: i0, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Login</h1>\\n<p class=\\\"sub-title\\\">Hello! Log in with your email.</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"login()\\\" #form=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Email address:</label>\\n    <input nbInput\\n           fullWidth\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           name=\\\"email\\\"\\n           id=\\\"input-email\\\"\\n           pattern=\\\".+@.+\\\\..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           fieldSize=\\\"large\\\"\\n           autofocus\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <span class=\\\"label-with-link\\\">\\n      <label class=\\\"label\\\" for=\\\"input-password\\\">Password:</label>\\n      <a class=\\\"forgot-password caption-2\\\" routerLink=\\\"../request-password\\\">Forgot Password?</a>\\n    </span>\\n    <input nbInput\\n           fullWidth\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           name=\\\"password\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           placeholder=\\\"Password\\\"\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched \\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contain\\n        from {{ getConfigValue('forms.validation.password.minLength') }}\\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group accept-group\\\">\\n    <nb-checkbox name=\\\"rememberMe\\\" [(ngModel)]=\\\"user.rememberMe\\\" *ngIf=\\\"rememberMe\\\">Remember me</nb-checkbox>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !form.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Log In\\n  </button>\\n</form>\\n\\n<section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\n  or enter with:\\n  <div class=\\\"socials\\\">\\n    <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n      <a *ngIf=\\\"socialLink.link\\\"\\n         [routerLink]=\\\"socialLink.link\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n      <a *ngIf=\\\"socialLink.url\\\"\\n         [attr.href]=\\\"socialLink.url\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n\\n<section class=\\\"another-action\\\" aria-label=\\\"Register\\\">\\n  Don't have an account? <a class=\\\"text-link\\\" routerLink=\\\"../register\\\">Register</a>\\n</section>\\n\", components: [{ type: i3.NbAlertComponent, selector: \"nb-alert\", inputs: [\"size\", \"status\", \"accent\", \"outline\", \"closable\"], outputs: [\"close\"] }, { type: i3.NbCheckboxComponent, selector: \"nb-checkbox\", inputs: [\"checked\", \"disabled\", \"status\", \"indeterminate\"], outputs: [\"checkedChange\"] }, { type: i3.NbButtonComponent, selector: \"button[nbButton],a[nbButton],input[type=\\\"button\\\"][nbButton],input[type=\\\"submit\\\"][nbButton]\", inputs: [\"hero\"] }, { type: i3.NbIconComponent, selector: \"nb-icon\", inputs: [\"icon\", \"pack\", \"options\", \"status\", \"config\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i5.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i5.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i5.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i3.NbInputDirective, selector: \"input[nbInput],textarea[nbInput]\", inputs: [\"fieldSize\", \"status\", \"shape\", \"fullWidth\"] }, { type: i5.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i5.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i5.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i5.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { type: i2.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"relativeTo\", \"routerLink\"] }, { type: i5.MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: [\"minlength\"] }, { type: i5.MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: [\"maxlength\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbLoginComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-login', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Login</h1>\\n<p class=\\\"sub-title\\\">Hello! Log in with your email.</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"login()\\\" #form=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Email address:</label>\\n    <input nbInput\\n           fullWidth\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           name=\\\"email\\\"\\n           id=\\\"input-email\\\"\\n           pattern=\\\".+@.+\\\\..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           fieldSize=\\\"large\\\"\\n           autofocus\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <span class=\\\"label-with-link\\\">\\n      <label class=\\\"label\\\" for=\\\"input-password\\\">Password:</label>\\n      <a class=\\\"forgot-password caption-2\\\" routerLink=\\\"../request-password\\\">Forgot Password?</a>\\n    </span>\\n    <input nbInput\\n           fullWidth\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           name=\\\"password\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           placeholder=\\\"Password\\\"\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched \\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contain\\n        from {{ getConfigValue('forms.validation.password.minLength') }}\\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group accept-group\\\">\\n    <nb-checkbox name=\\\"rememberMe\\\" [(ngModel)]=\\\"user.rememberMe\\\" *ngIf=\\\"rememberMe\\\">Remember me</nb-checkbox>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !form.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Log In\\n  </button>\\n</form>\\n\\n<section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\n  or enter with:\\n  <div class=\\\"socials\\\">\\n    <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n      <a *ngIf=\\\"socialLink.link\\\"\\n         [routerLink]=\\\"socialLink.link\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n      <a *ngIf=\\\"socialLink.url\\\"\\n         [attr.href]=\\\"socialLink.url\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n\\n<section class=\\\"another-action\\\" aria-label=\\\"Register\\\">\\n  Don't have an account? <a class=\\\"text-link\\\" routerLink=\\\"../register\\\">Register</a>\\n</section>\\n\" }]\n        }], ctorParameters: function () { return [{ type: NbAuthService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i2.Router }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbRegisterComponent {\n    constructor(service, options = {}, cd, router) {\n        this.service = service;\n        this.options = options;\n        this.cd = cd;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.showMessages = {};\n        this.strategy = '';\n        this.submitted = false;\n        this.errors = [];\n        this.messages = [];\n        this.user = {};\n        this.socialLinks = [];\n        this.redirectDelay = this.getConfigValue('forms.register.redirectDelay');\n        this.showMessages = this.getConfigValue('forms.register.showMessages');\n        this.strategy = this.getConfigValue('forms.register.strategy');\n        this.socialLinks = this.getConfigValue('forms.login.socialLinks');\n    }\n    register() {\n        this.errors = this.messages = [];\n        this.submitted = true;\n        this.service.register(this.strategy, this.user).subscribe((result) => {\n            this.submitted = false;\n            if (result.isSuccess()) {\n                this.messages = result.getMessages();\n            }\n            else {\n                this.errors = result.getErrors();\n            }\n            const redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(() => {\n                    return this.router.navigateByUrl(redirect);\n                }, this.redirectDelay);\n            }\n            this.cd.detectChanges();\n        });\n    }\n    getConfigValue(key) {\n        return getDeepFromObject(this.options, key, null);\n    }\n}\nNbRegisterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbRegisterComponent, deps: [{ token: NbAuthService }, { token: NB_AUTH_OPTIONS }, { token: i0.ChangeDetectorRef }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Component });\nNbRegisterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: NbRegisterComponent, selector: \"nb-register\", ngImport: i0, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Register</h1>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"register()\\\" #form=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-name\\\">Full name:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.fullName\\\"\\n           #fullName=\\\"ngModel\\\"\\n           id=\\\"input-name\\\"\\n           name=\\\"fullName\\\"\\n           placeholder=\\\"Full name\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"fullName.dirty ? (fullName.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.fullName.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.fullName.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.fullName.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"fullName.invalid && fullName.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"fullName.invalid && fullName.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"fullName.errors?.required\\\">\\n        Full name is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"fullName.errors?.minlength || fullName.errors?.maxlength\\\">\\n        Full name should contains\\n        from {{getConfigValue('forms.validation.fullName.minLength')}}\\n        to {{getConfigValue('forms.validation.fullName.maxLength')}}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Email address:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           id=\\\"input-email\\\"\\n           name=\\\"email\\\"\\n           pattern=\\\".+@.+..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-password\\\">Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           name=\\\"password\\\"\\n           placeholder=\\\"Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contain\\n        from {{ getConfigValue('forms.validation.password.minLength') }}\\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-re-password\\\">Repeat password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.confirmPassword\\\"\\n           #rePass=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-re-password\\\"\\n           name=\\\"rePass\\\"\\n           placeholder=\\\"Confirm Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"rePass.dirty ? (rePass.invalid || password.value != rePass.value  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [attr.aria-invalid]=\\\"rePass.invalid && rePass.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"rePass.invalid && rePass.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"rePass.errors?.required\\\">\\n        Password confirmation is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.value != rePass.value && !rePass.errors?.required\\\">\\n        Password does not match the confirm password.\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group accept-group\\\" *ngIf=\\\"getConfigValue('forms.register.terms')\\\">\\n    <nb-checkbox name=\\\"terms\\\" [(ngModel)]=\\\"user.terms\\\" [required]=\\\"getConfigValue('forms.register.terms')\\\">\\n      Agree to <a href=\\\"#\\\" target=\\\"_blank\\\"><strong>Terms & Conditions</strong></a>\\n    </nb-checkbox>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !form.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Register\\n  </button>\\n</form>\\n\\n<section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\n  or enter with:\\n  <div class=\\\"socials\\\">\\n    <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n      <a *ngIf=\\\"socialLink.link\\\"\\n         [routerLink]=\\\"socialLink.link\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n      <a *ngIf=\\\"socialLink.url\\\"\\n         [attr.href]=\\\"socialLink.url\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n\\n<section class=\\\"another-action\\\" aria-label=\\\"Sign in\\\">\\n  Already have an account? <a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Log in</a>\\n</section>\\n\", styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .title{margin-bottom:2rem}\\n\"], components: [{ type: i3.NbAlertComponent, selector: \"nb-alert\", inputs: [\"size\", \"status\", \"accent\", \"outline\", \"closable\"], outputs: [\"close\"] }, { type: i3.NbCheckboxComponent, selector: \"nb-checkbox\", inputs: [\"checked\", \"disabled\", \"status\", \"indeterminate\"], outputs: [\"checkedChange\"] }, { type: i3.NbButtonComponent, selector: \"button[nbButton],a[nbButton],input[type=\\\"button\\\"][nbButton],input[type=\\\"submit\\\"][nbButton]\", inputs: [\"hero\"] }, { type: i3.NbIconComponent, selector: \"nb-icon\", inputs: [\"icon\", \"pack\", \"options\", \"status\", \"config\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i5.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i5.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i5.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i3.NbInputDirective, selector: \"input[nbInput],textarea[nbInput]\", inputs: [\"fieldSize\", \"status\", \"shape\", \"fullWidth\"] }, { type: i5.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i5.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i5.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { type: i5.MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: [\"minlength\"] }, { type: i5.MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: [\"maxlength\"] }, { type: i5.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { type: i2.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"relativeTo\", \"routerLink\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbRegisterComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-register', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Register</h1>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"register()\\\" #form=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-name\\\">Full name:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.fullName\\\"\\n           #fullName=\\\"ngModel\\\"\\n           id=\\\"input-name\\\"\\n           name=\\\"fullName\\\"\\n           placeholder=\\\"Full name\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"fullName.dirty ? (fullName.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.fullName.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.fullName.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.fullName.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"fullName.invalid && fullName.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"fullName.invalid && fullName.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"fullName.errors?.required\\\">\\n        Full name is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"fullName.errors?.minlength || fullName.errors?.maxlength\\\">\\n        Full name should contains\\n        from {{getConfigValue('forms.validation.fullName.minLength')}}\\n        to {{getConfigValue('forms.validation.fullName.maxLength')}}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Email address:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           id=\\\"input-email\\\"\\n           name=\\\"email\\\"\\n           pattern=\\\".+@.+..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-password\\\">Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           name=\\\"password\\\"\\n           placeholder=\\\"Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contain\\n        from {{ getConfigValue('forms.validation.password.minLength') }}\\n        to {{ getConfigValue('forms.validation.password.maxLength') }}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-re-password\\\">Repeat password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.confirmPassword\\\"\\n           #rePass=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-re-password\\\"\\n           name=\\\"rePass\\\"\\n           placeholder=\\\"Confirm Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"rePass.dirty ? (rePass.invalid || password.value != rePass.value  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [attr.aria-invalid]=\\\"rePass.invalid && rePass.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"rePass.invalid && rePass.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"rePass.errors?.required\\\">\\n        Password confirmation is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.value != rePass.value && !rePass.errors?.required\\\">\\n        Password does not match the confirm password.\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-control-group accept-group\\\" *ngIf=\\\"getConfigValue('forms.register.terms')\\\">\\n    <nb-checkbox name=\\\"terms\\\" [(ngModel)]=\\\"user.terms\\\" [required]=\\\"getConfigValue('forms.register.terms')\\\">\\n      Agree to <a href=\\\"#\\\" target=\\\"_blank\\\"><strong>Terms & Conditions</strong></a>\\n    </nb-checkbox>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !form.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Register\\n  </button>\\n</form>\\n\\n<section *ngIf=\\\"socialLinks && socialLinks.length > 0\\\" class=\\\"links\\\" aria-label=\\\"Social sign in\\\">\\n  or enter with:\\n  <div class=\\\"socials\\\">\\n    <ng-container *ngFor=\\\"let socialLink of socialLinks\\\">\\n      <a *ngIf=\\\"socialLink.link\\\"\\n         [routerLink]=\\\"socialLink.link\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n      <a *ngIf=\\\"socialLink.url\\\"\\n         [attr.href]=\\\"socialLink.url\\\"\\n         [attr.target]=\\\"socialLink.target\\\"\\n         [attr.class]=\\\"socialLink.icon\\\"\\n         [class.with-icon]=\\\"socialLink.icon\\\">\\n        <nb-icon *ngIf=\\\"socialLink.icon; else title\\\" [icon]=\\\"socialLink.icon\\\"></nb-icon>\\n        <ng-template #title>{{ socialLink.title }}</ng-template>\\n      </a>\\n    </ng-container>\\n  </div>\\n</section>\\n\\n<section class=\\\"another-action\\\" aria-label=\\\"Sign in\\\">\\n  Already have an account? <a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Log in</a>\\n</section>\\n\", styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .title{margin-bottom:2rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NbAuthService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i2.Router }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbLogoutComponent {\n    constructor(service, options = {}, router) {\n        this.service = service;\n        this.options = options;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.strategy = '';\n        this.redirectDelay = this.getConfigValue('forms.logout.redirectDelay');\n        this.strategy = this.getConfigValue('forms.logout.strategy');\n    }\n    ngOnInit() {\n        this.logout(this.strategy);\n    }\n    logout(strategy) {\n        this.service.logout(strategy).subscribe((result) => {\n            const redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(() => {\n                    return this.router.navigateByUrl(redirect);\n                }, this.redirectDelay);\n            }\n        });\n    }\n    getConfigValue(key) {\n        return getDeepFromObject(this.options, key, null);\n    }\n}\nNbLogoutComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbLogoutComponent, deps: [{ token: NbAuthService }, { token: NB_AUTH_OPTIONS }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Component });\nNbLogoutComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: NbLogoutComponent, selector: \"nb-logout\", ngImport: i0, template: \"<div>Logging out, please wait...</div>\\n\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbLogoutComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-logout', template: \"<div>Logging out, please wait...</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: NbAuthService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_OPTIONS]\n                }] }, { type: i2.Router }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbRequestPasswordComponent {\n    constructor(service, options = {}, cd, router) {\n        this.service = service;\n        this.options = options;\n        this.cd = cd;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.showMessages = {};\n        this.strategy = '';\n        this.submitted = false;\n        this.errors = [];\n        this.messages = [];\n        this.user = {};\n        this.redirectDelay = this.getConfigValue('forms.requestPassword.redirectDelay');\n        this.showMessages = this.getConfigValue('forms.requestPassword.showMessages');\n        this.strategy = this.getConfigValue('forms.requestPassword.strategy');\n    }\n    requestPass() {\n        this.errors = this.messages = [];\n        this.submitted = true;\n        this.service.requestPassword(this.strategy, this.user).subscribe((result) => {\n            this.submitted = false;\n            if (result.isSuccess()) {\n                this.messages = result.getMessages();\n            }\n            else {\n                this.errors = result.getErrors();\n            }\n            const redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(() => {\n                    return this.router.navigateByUrl(redirect);\n                }, this.redirectDelay);\n            }\n            this.cd.detectChanges();\n        });\n    }\n    getConfigValue(key) {\n        return getDeepFromObject(this.options, key, null);\n    }\n}\nNbRequestPasswordComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbRequestPasswordComponent, deps: [{ token: NbAuthService }, { token: NB_AUTH_OPTIONS }, { token: i0.ChangeDetectorRef }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Component });\nNbRequestPasswordComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: NbRequestPasswordComponent, selector: \"nb-request-password-page\", ngImport: i0, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Forgot Password</h1>\\n<p class=\\\"sub-title\\\">Enter your email address and we\\u2019ll send a link to reset your password</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"requestPass()\\\" #requestPassForm=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Enter your email address:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           id=\\\"input-email\\\"\\n           name=\\\"email\\\"\\n           pattern=\\\".+@.+\\\\..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !requestPassForm.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Request password\\n  </button>\\n</form>\\n\\n<section class=\\\"sign-in-or-up\\\" aria-label=\\\"Sign in or sign up\\\">\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Back to Log In</a></p>\\n  <p><a routerLink=\\\"../register\\\" class=\\\"text-link\\\">Register</a></p>\\n</section>\\n\", styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .form-group:last-of-type{margin-bottom:3rem}\\n\"], components: [{ type: i3.NbAlertComponent, selector: \"nb-alert\", inputs: [\"size\", \"status\", \"accent\", \"outline\", \"closable\"], outputs: [\"close\"] }, { type: i3.NbButtonComponent, selector: \"button[nbButton],a[nbButton],input[type=\\\"button\\\"][nbButton],input[type=\\\"submit\\\"][nbButton]\", inputs: [\"hero\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i5.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i5.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i5.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i3.NbInputDirective, selector: \"input[nbInput],textarea[nbInput]\", inputs: [\"fieldSize\", \"status\", \"shape\", \"fullWidth\"] }, { type: i5.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i5.PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: [\"pattern\"] }, { type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i5.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i5.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { type: i2.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"relativeTo\", \"routerLink\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbRequestPasswordComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-request-password-page', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Forgot Password</h1>\\n<p class=\\\"sub-title\\\">Enter your email address and we\\u2019ll send a link to reset your password</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"requestPass()\\\" #requestPassForm=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-email\\\">Enter your email address:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.email\\\"\\n           #email=\\\"ngModel\\\"\\n           id=\\\"input-email\\\"\\n           name=\\\"email\\\"\\n           pattern=\\\".+@.+\\\\..+\\\"\\n           placeholder=\\\"Email address\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"email.dirty ? (email.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.email.required')\\\"\\n           [attr.aria-invalid]=\\\"email.invalid && email.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"email.invalid && email.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.required\\\">\\n        Email is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"email.errors?.pattern\\\">\\n        Email should be the real one!\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <button nbButton\\n          fullWidth\\n          status=\\\"primary\\\"\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !requestPassForm.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Request password\\n  </button>\\n</form>\\n\\n<section class=\\\"sign-in-or-up\\\" aria-label=\\\"Sign in or sign up\\\">\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Back to Log In</a></p>\\n  <p><a routerLink=\\\"../register\\\" class=\\\"text-link\\\">Register</a></p>\\n</section>\\n\", styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .form-group:last-of-type{margin-bottom:3rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NbAuthService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i2.Router }]; } });\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nclass NbResetPasswordComponent {\n    constructor(service, options = {}, cd, router) {\n        this.service = service;\n        this.options = options;\n        this.cd = cd;\n        this.router = router;\n        this.redirectDelay = 0;\n        this.showMessages = {};\n        this.strategy = '';\n        this.submitted = false;\n        this.errors = [];\n        this.messages = [];\n        this.user = {};\n        this.redirectDelay = this.getConfigValue('forms.resetPassword.redirectDelay');\n        this.showMessages = this.getConfigValue('forms.resetPassword.showMessages');\n        this.strategy = this.getConfigValue('forms.resetPassword.strategy');\n    }\n    resetPass() {\n        this.errors = this.messages = [];\n        this.submitted = true;\n        this.service.resetPassword(this.strategy, this.user).subscribe((result) => {\n            this.submitted = false;\n            if (result.isSuccess()) {\n                this.messages = result.getMessages();\n            }\n            else {\n                this.errors = result.getErrors();\n            }\n            const redirect = result.getRedirect();\n            if (redirect) {\n                setTimeout(() => {\n                    return this.router.navigateByUrl(redirect);\n                }, this.redirectDelay);\n            }\n            this.cd.detectChanges();\n        });\n    }\n    getConfigValue(key) {\n        return getDeepFromObject(this.options, key, null);\n    }\n}\nNbResetPasswordComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbResetPasswordComponent, deps: [{ token: NbAuthService }, { token: NB_AUTH_OPTIONS }, { token: i0.ChangeDetectorRef }, { token: i2.Router }], target: i0.ɵɵFactoryTarget.Component });\nNbResetPasswordComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: NbResetPasswordComponent, selector: \"nb-reset-password-page\", ngImport: i0, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Change password</h1>\\n<p class=\\\"sub-title\\\">Please set a new password</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"resetPass()\\\" #resetPassForm=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-password\\\">New Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           name=\\\"password\\\"\\n           class=\\\"first\\\"\\n           placeholder=\\\"New Password\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contains\\n        from {{getConfigValue('forms.validation.password.minLength')}}\\n        to {{getConfigValue('forms.validation.password.maxLength')}}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-re-password\\\">Confirm Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.confirmPassword\\\"\\n           #rePass=\\\"ngModel\\\"\\n           id=\\\"input-re-password\\\"\\n           name=\\\"rePass\\\"\\n           type=\\\"password\\\"\\n           class=\\\"last\\\"\\n           placeholder=\\\"Confirm Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"rePass.touched\\n               ? (rePass.invalid || password.value != rePass.value ? 'danger' : 'success')\\n               : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [attr.aria-invalid]=\\\"rePass.invalid && rePass.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"rePass.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"rePass.invalid && rePass.errors?.required\\\">\\n        Password confirmation is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.value != rePass.value && !rePass.errors?.required\\\">\\n        Password does not match the confirm password.\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <button nbButton\\n          status=\\\"primary\\\"\\n          fullWidth\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !resetPassForm.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Change password\\n  </button>\\n</form>\\n\\n<section class=\\\"sign-in-or-up\\\" aria-label=\\\"Sign in or sign up\\\">\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Back to Log In</a></p>\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../register\\\">Register</a></p>\\n</section>\\n\", styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .form-group:last-of-type{margin-bottom:3rem}\\n\"], components: [{ type: i3.NbAlertComponent, selector: \"nb-alert\", inputs: [\"size\", \"status\", \"accent\", \"outline\", \"closable\"], outputs: [\"close\"] }, { type: i3.NbButtonComponent, selector: \"button[nbButton],a[nbButton],input[type=\\\"button\\\"][nbButton],input[type=\\\"submit\\\"][nbButton]\", inputs: [\"hero\"] }], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i5.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i5.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i5.NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: [\"ngFormOptions\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i3.NbInputDirective, selector: \"input[nbInput],textarea[nbInput]\", inputs: [\"fieldSize\", \"status\", \"shape\", \"fullWidth\"] }, { type: i5.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i5.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i5.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i5.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { type: i5.MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: [\"minlength\"] }, { type: i5.MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: [\"maxlength\"] }, { type: i2.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"relativeTo\", \"routerLink\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbResetPasswordComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'nb-reset-password-page', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<h1 id=\\\"title\\\" class=\\\"title\\\">Change password</h1>\\n<p class=\\\"sub-title\\\">Please set a new password</p>\\n\\n<nb-alert *ngIf=\\\"showMessages.error && errors?.length && !submitted\\\" outline=\\\"danger\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Oh snap!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let error of errors\\\" class=\\\"alert-message\\\">{{ error }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<nb-alert *ngIf=\\\"showMessages.success && messages?.length && !submitted\\\" outline=\\\"success\\\" role=\\\"alert\\\">\\n  <p class=\\\"alert-title\\\"><b>Hooray!</b></p>\\n  <ul class=\\\"alert-message-list\\\">\\n    <li *ngFor=\\\"let message of messages\\\" class=\\\"alert-message\\\">{{ message }}</li>\\n  </ul>\\n</nb-alert>\\n\\n<form (ngSubmit)=\\\"resetPass()\\\" #resetPassForm=\\\"ngForm\\\" aria-labelledby=\\\"title\\\">\\n\\n  <div class=\\\"form-control-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-password\\\">New Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.password\\\"\\n           #password=\\\"ngModel\\\"\\n           type=\\\"password\\\"\\n           id=\\\"input-password\\\"\\n           name=\\\"password\\\"\\n           class=\\\"first\\\"\\n           placeholder=\\\"New Password\\\"\\n           autofocus\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"password.dirty ? (password.invalid  ? 'danger' : 'success') : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [minlength]=\\\"getConfigValue('forms.validation.password.minLength')\\\"\\n           [maxlength]=\\\"getConfigValue('forms.validation.password.maxLength')\\\"\\n           [attr.aria-invalid]=\\\"password.invalid && password.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"password.invalid && password.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.required\\\">\\n        Password is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.errors?.minlength || password.errors?.maxlength\\\">\\n        Password should contains\\n        from {{getConfigValue('forms.validation.password.minLength')}}\\n        to {{getConfigValue('forms.validation.password.maxLength')}}\\n        characters\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"label\\\" for=\\\"input-re-password\\\">Confirm Password:</label>\\n    <input nbInput\\n           [(ngModel)]=\\\"user.confirmPassword\\\"\\n           #rePass=\\\"ngModel\\\"\\n           id=\\\"input-re-password\\\"\\n           name=\\\"rePass\\\"\\n           type=\\\"password\\\"\\n           class=\\\"last\\\"\\n           placeholder=\\\"Confirm Password\\\"\\n           fullWidth\\n           fieldSize=\\\"large\\\"\\n           [status]=\\\"rePass.touched\\n               ? (rePass.invalid || password.value != rePass.value ? 'danger' : 'success')\\n               : 'basic'\\\"\\n           [required]=\\\"getConfigValue('forms.validation.password.required')\\\"\\n           [attr.aria-invalid]=\\\"rePass.invalid && rePass.touched ? true : null\\\">\\n    <ng-container *ngIf=\\\"rePass.touched\\\">\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"rePass.invalid && rePass.errors?.required\\\">\\n        Password confirmation is required!\\n      </p>\\n      <p class=\\\"caption status-danger\\\" *ngIf=\\\"password.value != rePass.value && !rePass.errors?.required\\\">\\n        Password does not match the confirm password.\\n      </p>\\n    </ng-container>\\n  </div>\\n\\n  <button nbButton\\n          status=\\\"primary\\\"\\n          fullWidth\\n          size=\\\"large\\\"\\n          [disabled]=\\\"submitted || !resetPassForm.valid\\\"\\n          [class.btn-pulse]=\\\"submitted\\\">\\n    Change password\\n  </button>\\n</form>\\n\\n<section class=\\\"sign-in-or-up\\\" aria-label=\\\"Sign in or sign up\\\">\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../login\\\">Back to Log In</a></p>\\n  <p><a class=\\\"text-link\\\" routerLink=\\\"../register\\\">Register</a></p>\\n</section>\\n\", styles: [\"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */:host .form-group:last-of-type{margin-bottom:3rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: NbAuthService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i2.Router }]; } });\n\nfunction nbStrategiesFactory(options, injector) {\n    const strategies = [];\n    options.strategies\n        .forEach(([strategyClass, strategyOptions]) => {\n        const strategy = injector.get(strategyClass);\n        strategy.setOptions(strategyOptions);\n        strategies.push(strategy);\n    });\n    return strategies;\n}\nfunction nbTokensFactory(strategies) {\n    const tokens = [];\n    strategies\n        .forEach((strategy) => {\n        tokens.push(strategy.getOption('token.class'));\n    });\n    return tokens;\n}\nfunction nbOptionsFactory(options) {\n    return deepExtend(defaultAuthOptions, options);\n}\nfunction nbNoOpInterceptorFilter(req) {\n    return true;\n}\nclass NbAuthModule {\n    static forRoot(nbAuthOptions) {\n        return {\n            ngModule: NbAuthModule,\n            providers: [\n                { provide: NB_AUTH_USER_OPTIONS, useValue: nbAuthOptions },\n                { provide: NB_AUTH_OPTIONS, useFactory: nbOptionsFactory, deps: [NB_AUTH_USER_OPTIONS] },\n                { provide: NB_AUTH_STRATEGIES, useFactory: nbStrategiesFactory, deps: [NB_AUTH_OPTIONS, Injector] },\n                { provide: NB_AUTH_TOKENS, useFactory: nbTokensFactory, deps: [NB_AUTH_STRATEGIES] },\n                { provide: NB_AUTH_FALLBACK_TOKEN, useValue: NbAuthSimpleToken },\n                { provide: NB_AUTH_INTERCEPTOR_HEADER, useValue: 'Authorization' },\n                { provide: NB_AUTH_TOKEN_INTERCEPTOR_FILTER, useValue: nbNoOpInterceptorFilter },\n                { provide: NbTokenStorage, useClass: NbTokenLocalStorage },\n                NbAuthTokenParceler,\n                NbAuthService,\n                NbTokenService,\n                NbDummyAuthStrategy,\n                NbPasswordAuthStrategy,\n                NbOAuth2AuthStrategy,\n            ],\n        };\n    }\n}\nNbAuthModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNbAuthModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthModule, declarations: [NbAuthComponent,\n        NbAuthBlockComponent,\n        NbLoginComponent,\n        NbRegisterComponent,\n        NbRequestPasswordComponent,\n        NbResetPasswordComponent,\n        NbLogoutComponent], imports: [CommonModule,\n        NbLayoutModule,\n        NbCardModule,\n        NbCheckboxModule,\n        NbAlertModule,\n        NbInputModule,\n        NbButtonModule,\n        RouterModule,\n        FormsModule,\n        NbIconModule], exports: [NbAuthComponent,\n        NbAuthBlockComponent,\n        NbLoginComponent,\n        NbRegisterComponent,\n        NbRequestPasswordComponent,\n        NbResetPasswordComponent,\n        NbLogoutComponent] });\nNbAuthModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthModule, imports: [[\n            CommonModule,\n            NbLayoutModule,\n            NbCardModule,\n            NbCheckboxModule,\n            NbAlertModule,\n            NbInputModule,\n            NbButtonModule,\n            RouterModule,\n            FormsModule,\n            NbIconModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        NbLayoutModule,\n                        NbCardModule,\n                        NbCheckboxModule,\n                        NbAlertModule,\n                        NbInputModule,\n                        NbButtonModule,\n                        RouterModule,\n                        FormsModule,\n                        NbIconModule,\n                    ],\n                    declarations: [\n                        NbAuthComponent,\n                        NbAuthBlockComponent,\n                        NbLoginComponent,\n                        NbRegisterComponent,\n                        NbRequestPasswordComponent,\n                        NbResetPasswordComponent,\n                        NbLogoutComponent,\n                    ],\n                    exports: [\n                        NbAuthComponent,\n                        NbAuthBlockComponent,\n                        NbLoginComponent,\n                        NbRegisterComponent,\n                        NbRequestPasswordComponent,\n                        NbResetPasswordComponent,\n                        NbLogoutComponent,\n                    ],\n                }]\n        }] });\n\nconst routes = [\n    {\n        path: 'auth',\n        component: NbAuthComponent,\n        children: [\n            {\n                path: '',\n                component: NbLoginComponent,\n            },\n            {\n                path: 'login',\n                component: NbLoginComponent,\n            },\n            {\n                path: 'register',\n                component: NbRegisterComponent,\n            },\n            {\n                path: 'logout',\n                component: NbLogoutComponent,\n            },\n            {\n                path: 'request-password',\n                component: NbRequestPasswordComponent,\n            },\n            {\n                path: 'reset-password',\n                component: NbResetPasswordComponent,\n            },\n        ],\n    },\n];\n\nclass NbAuthJWTInterceptor {\n    constructor(injector, filter) {\n        this.injector = injector;\n        this.filter = filter;\n    }\n    intercept(req, next) {\n        // do not intercept request whose urls are filtered by the injected filter\n        if (!this.filter(req)) {\n            return this.authService.isAuthenticatedOrRefresh()\n                .pipe(switchMap(authenticated => {\n                if (authenticated) {\n                    return this.authService.getToken().pipe(switchMap((token) => {\n                        const JWT = `Bearer ${token.getValue()}`;\n                        req = req.clone({\n                            setHeaders: {\n                                Authorization: JWT,\n                            },\n                        });\n                        return next.handle(req);\n                    }));\n                }\n                else {\n                    // Request is sent to server without authentication so that the client code\n                    // receives the 401/403 error and can act as desired ('session expired', redirect to login, aso)\n                    return next.handle(req);\n                }\n            }));\n        }\n        else {\n            return next.handle(req);\n        }\n    }\n    get authService() {\n        return this.injector.get(NbAuthService);\n    }\n}\nNbAuthJWTInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthJWTInterceptor, deps: [{ token: i0.Injector }, { token: NB_AUTH_TOKEN_INTERCEPTOR_FILTER }], target: i0.ɵɵFactoryTarget.Injectable });\nNbAuthJWTInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthJWTInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthJWTInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_TOKEN_INTERCEPTOR_FILTER]\n                }] }]; } });\n\nclass NbAuthSimpleInterceptor {\n    constructor(injector, headerName = 'Authorization') {\n        this.injector = injector;\n        this.headerName = headerName;\n    }\n    intercept(req, next) {\n        return this.authService.getToken().pipe(switchMap((token) => {\n            if (token && token.getValue()) {\n                req = req.clone({\n                    setHeaders: {\n                        [this.headerName]: token.getValue(),\n                    },\n                });\n            }\n            return next.handle(req);\n        }));\n    }\n    get authService() {\n        return this.injector.get(NbAuthService);\n    }\n}\nNbAuthSimpleInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthSimpleInterceptor, deps: [{ token: i0.Injector }, { token: NB_AUTH_INTERCEPTOR_HEADER }], target: i0.ɵɵFactoryTarget.Injectable });\nNbAuthSimpleInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthSimpleInterceptor });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NbAuthSimpleInterceptor, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NB_AUTH_INTERCEPTOR_HEADER]\n                }] }]; } });\n\nclass NbUser {\n    constructor(id, email, password, rememberMe, terms, confirmPassword, fullName) {\n        this.id = id;\n        this.email = email;\n        this.password = password;\n        this.rememberMe = rememberMe;\n        this.terms = terms;\n        this.confirmPassword = confirmPassword;\n        this.fullName = fullName;\n    }\n}\n\n/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NB_AUTH_FALLBACK_TOKEN, NB_AUTH_INTERCEPTOR_HEADER, NB_AUTH_OPTIONS, NB_AUTH_STRATEGIES, NB_AUTH_TOKENS, NB_AUTH_TOKEN_INTERCEPTOR_FILTER, NB_AUTH_USER_OPTIONS, NbAuthBlockComponent, NbAuthComponent, NbAuthEmptyTokenError, NbAuthIllegalJWTTokenError, NbAuthIllegalTokenError, NbAuthJWTInterceptor, NbAuthJWTToken, NbAuthModule, NbAuthOAuth2JWTToken, NbAuthOAuth2Token, NbAuthResult, NbAuthService, NbAuthSimpleInterceptor, NbAuthSimpleToken, NbAuthStrategy, NbAuthStrategyOptions, NbAuthToken, NbAuthTokenNotFoundError, NbAuthTokenParceler, NbDummyAuthStrategy, NbDummyAuthStrategyOptions, NbLoginComponent, NbLogoutComponent, NbOAuth2AuthStrategy, NbOAuth2AuthStrategyOptions, NbOAuth2ClientAuthMethod, NbOAuth2GrantType, NbOAuth2ResponseType, NbPasswordAuthStrategy, NbPasswordAuthStrategyOptions, NbRegisterComponent, NbRequestPasswordComponent, NbResetPasswordComponent, NbTokenLocalStorage, NbTokenService, NbTokenStorage, NbUser, auth2StrategyOptions, b64DecodeUnicode, b64decode, decodeJwtPayload, deepExtend, defaultAuthOptions, dummyStrategyOptions, getDeepFromObject, nbAuthCreateToken, nbNoOpInterceptorFilter, nbOptionsFactory, nbStrategiesFactory, nbTokensFactory, passwordStrategyOptions, routes, urlBase64Decode };\n"]},"metadata":{},"sourceType":"module"}